{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "@1771technologies/lytenyte-pro",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 305,
			"name": "AutosizeCellParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "AutosizeCellFn",
						"target": 300
					},
					{
						"kind": "text",
						"text": " function.\n\nThese provide context about the cell and grid configuration so that the function\ncan determine the optimal column width based on cell content."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 306,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1446,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1446"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 309,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "AutosizeCellParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 307,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1451,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1451"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 309,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "AutosizeCellParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 308,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1456,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1456"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 309,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "AutosizeCellParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						306,
						307,
						308
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1442,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1442"
				}
			],
			"typeParameters": [
				{
					"id": 309,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 315,
			"name": "AutosizeHeaderParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "AutosizeHeaderFn",
						"target": 310
					},
					{
						"kind": "text",
						"text": " function.\n\nThese are used by LyteNyte Grid to calculate the ideal column width based on the\nheader content."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 316,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1486,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1486"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 318,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "AutosizeHeaderParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 317,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1491,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1491"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 318,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "AutosizeHeaderParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						316,
						317
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1482,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1482"
				}
			],
			"typeParameters": [
				{
					"id": 318,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 966,
			"name": "CellRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Input parameters passed to the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CellRendererFn",
						"target": 961
					},
					{
						"kind": "text",
						"text": ", which is responsible for rendering the display content\nof a specific cell in the grid.\n\nIncludes metadata and context such as the grid instance, row and column positions, selection state,\nand the full row node data."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Rendering"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 971,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3313,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3313"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 968,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3298,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3298"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 975,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "CellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 967,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3293,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3293"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 975,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "CellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 969,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3303,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3303"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 975,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "CellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 973,
					"name": "rowIndeterminate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the row is in an indeterminate selection state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3323,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3323"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 970,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3308,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3308"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 974,
					"name": "rowPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pinning state of a row, used to fix it to the top or bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3328,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3328"
						}
					],
					"type": {
						"type": "reference",
						"target": 913,
						"name": "RowPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 972,
					"name": "rowSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the row is currently selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3318,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3318"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						971,
						968,
						967,
						969,
						973,
						970,
						974,
						972
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3289,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3289"
				}
			],
			"typeParameters": [
				{
					"id": 975,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 920,
			"name": "CellSpanFnParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Input parameters for "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CellSpanFn",
						"target": 915
					},
					{
						"kind": "text",
						"text": ", which determines the span of a given cell.\n\nThese parameters include:\n- The grid instance\n- Row and column indices\n- The row node representing the full row data\n\nUsed to compute dynamic row or column spans for advanced layout use cases."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row And Column Spanning"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 923,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3128,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 921,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3118,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3118"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 925,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "CellSpanFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 924,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3133,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3133"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 925,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "CellSpanFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 922,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3123,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3123"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						923,
						921,
						924,
						922
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3114,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3114"
				}
			],
			"typeParameters": [
				{
					"id": 925,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 411,
			"name": "ClientRowDataSourcePaginatedParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters required to initialize a client-side row data source."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 414,
					"name": "bottomData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rows to pin to the bottom of the grid, rendered below all scrollable rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2053,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2053"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 433,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientRowDataSourcePaginatedParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 412,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The primary dataset passed to LyteNyte Grid for display."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2043,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2043"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 433,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientRowDataSourcePaginatedParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 415,
					"name": "reflectData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the data source will reflect external mutations to the original data array."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2058,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2058"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 416,
					"name": "rowIdBranch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to derive a unique id for grouped (branch) rows based on group value path."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2063,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2063"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 417,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2063,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2063"
								}
							],
							"signatures": [
								{
									"id": 418,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2063,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2063"
										}
									],
									"parameters": [
										{
											"id": 419,
											"name": "path",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 420,
					"name": "rowIdLeaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to derive a unique id for each leaf row. Receives the row data and index."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2068,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2068"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 421,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2068,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2068"
								}
							],
							"signatures": [
								{
									"id": 422,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2068,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2068"
										}
									],
									"parameters": [
										{
											"id": 423,
											"name": "d",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 904,
												"typeArguments": [
													{
														"type": "reference",
														"target": 433,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "ClientRowDataSourcePaginatedParams.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowLeaf",
												"package": "@1771technologies/lytenyte-pro"
											}
										},
										{
											"id": 424,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 432,
					"name": "rowsPerPage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rows to have per page. This will impact the total page count."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2081,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2081"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 413,
					"name": "topData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rows to pin to the top of the grid, rendered above all scrollable rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2048,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2048"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 433,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientRowDataSourcePaginatedParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 425,
					"name": "transformInFilterItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback that transforms a set of values for a given column into the in filter items LyteNyte Grid should use."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2073,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2073"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 426,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2073,
									"character": 35,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2073"
								}
							],
							"signatures": [
								{
									"id": 427,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2073,
											"character": 35,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2073"
										}
									],
									"parameters": [
										{
											"id": 428,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 429,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 430,
															"name": "column",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2074,
																	"character": 4,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2074"
																}
															],
															"type": {
																"type": "reference",
																"target": 355,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 433,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "ClientRowDataSourcePaginatedParams.T",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Column",
																"package": "@1771technologies/lytenyte-pro"
															}
														},
														{
															"id": 431,
															"name": "values",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2075,
																	"character": 4,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2075"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																430,
																431
															]
														}
													],
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2073,
															"character": 44,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2073"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1293,
											"name": "FilterInFilterItem",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						414,
						412,
						415,
						416,
						420,
						432,
						413,
						425
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2039,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2039"
				}
			],
			"typeParameters": [
				{
					"id": 433,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 434,
			"name": "ClientRowDataSourceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Enhanced parameters for a client-side row data source with additional filtering support."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 437,
					"name": "bottomData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rows to pin to the bottom of the grid, rendered below all scrollable rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2103,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2103"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 455,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientRowDataSourceParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 435,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The primary dataset passed to LyteNyte Grid for display."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2093,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2093"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 455,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientRowDataSourceParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 438,
					"name": "reflectData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the data source will reflect external mutations to the original data array."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2108,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2108"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 439,
					"name": "rowIdBranch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to derive a unique id for grouped (branch) rows based on group value path."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2113,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2113"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 440,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2113,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2113"
								}
							],
							"signatures": [
								{
									"id": 441,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2113,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2113"
										}
									],
									"parameters": [
										{
											"id": 442,
											"name": "path",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 443,
					"name": "rowIdLeaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to derive a unique id for each leaf row. Receives the row data and index."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2118,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2118"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 444,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2118,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2118"
								}
							],
							"signatures": [
								{
									"id": 445,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2118,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2118"
										}
									],
									"parameters": [
										{
											"id": 446,
											"name": "d",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 904,
												"typeArguments": [
													{
														"type": "reference",
														"target": 455,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "ClientRowDataSourceParams.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowLeaf",
												"package": "@1771technologies/lytenyte-pro"
											}
										},
										{
											"id": 447,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 436,
					"name": "topData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rows to pin to the top of the grid, rendered above all scrollable rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2098,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2098"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 455,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientRowDataSourceParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 448,
					"name": "transformInFilterItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback that transforms a set of values for a given column into the in filter items LyteNyte Grid should use."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2123,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2123"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 449,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2123,
									"character": 35,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2123"
								}
							],
							"signatures": [
								{
									"id": 450,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2123,
											"character": 35,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2123"
										}
									],
									"parameters": [
										{
											"id": 451,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 452,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 453,
															"name": "column",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2124,
																	"character": 4,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2124"
																}
															],
															"type": {
																"type": "reference",
																"target": 355,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 455,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "ClientRowDataSourceParams.T",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Column",
																"package": "@1771technologies/lytenyte-pro"
															}
														},
														{
															"id": 454,
															"name": "values",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2125,
																	"character": 4,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2125"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																453,
																454
															]
														}
													],
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2123,
															"character": 44,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2123"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1293,
											"name": "FilterInFilterItem",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						437,
						435,
						438,
						439,
						443,
						436,
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2089,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2089"
				}
			],
			"typeParameters": [
				{
					"id": 455,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 456,
			"name": "ClientTreeDataSourceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for initializing a tree-structured data source in LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 459,
					"name": "bottomData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rows to pin to the bottom of the grid, rendered below all scrollable rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2148,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2148"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 481,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientTreeDataSourceParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 457,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The primary dataset passed to LyteNyte Grid for display."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2138,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2138"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 481,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientTreeDataSourceParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 477,
					"name": "getPathFromData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the hierarchical path to group a given data row in tree mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2176,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2176"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 478,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2176,
									"character": 28,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2176"
								}
							],
							"signatures": [
								{
									"id": 479,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2176,
											"character": 28,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2176"
										}
									],
									"parameters": [
										{
											"id": 480,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 904,
												"typeArguments": [
													{
														"type": "reference",
														"target": 481,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "ClientTreeDataSourceParams.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowLeaf",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "undefined"
												},
												{
													"type": "literal",
													"value": null
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 460,
					"name": "reflectData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the data source will reflect external mutations to the original data array."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2153,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2153"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 461,
					"name": "rowIdBranch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to derive a unique id for grouped (branch) rows based on group value path."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2158,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2158"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 462,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2158,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2158"
								}
							],
							"signatures": [
								{
									"id": 463,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2158,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2158"
										}
									],
									"parameters": [
										{
											"id": 464,
											"name": "path",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 465,
					"name": "rowIdLeaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to derive a unique id for each leaf row. Receives the row data and index."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2163,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2163"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 466,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2163,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2163"
								}
							],
							"signatures": [
								{
									"id": 467,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2163,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2163"
										}
									],
									"parameters": [
										{
											"id": 468,
											"name": "d",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 904,
												"typeArguments": [
													{
														"type": "reference",
														"target": 481,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "ClientTreeDataSourceParams.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowLeaf",
												"package": "@1771technologies/lytenyte-pro"
											}
										},
										{
											"id": 469,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 458,
					"name": "topData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rows to pin to the top of the grid, rendered above all scrollable rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2143,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2143"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 481,
							"name": "T",
							"package": "@1771technologies/lytenyte-pro",
							"qualifiedName": "ClientTreeDataSourceParams.T",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 470,
					"name": "transformInFilterItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback that transforms a set of values for a given column into the in filter items LyteNyte Grid should use."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2168,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2168"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 471,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2168,
									"character": 35,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2168"
								}
							],
							"signatures": [
								{
									"id": 472,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2168,
											"character": 35,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2168"
										}
									],
									"parameters": [
										{
											"id": 473,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 474,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 475,
															"name": "column",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2169,
																	"character": 4,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2169"
																}
															],
															"type": {
																"type": "reference",
																"target": 355,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 481,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "ClientTreeDataSourceParams.T",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Column",
																"package": "@1771technologies/lytenyte-pro"
															}
														},
														{
															"id": 476,
															"name": "values",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2170,
																	"character": 4,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2170"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																475,
																476
															]
														}
													],
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2168,
															"character": 44,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2168"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1293,
											"name": "FilterInFilterItem",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						459,
						457,
						477,
						460,
						461,
						465,
						458,
						470
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2134,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2134"
				}
			],
			"typeParameters": [
				{
					"id": 481,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 355,
			"name": "Column",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes a column definition in LyteNyte Grid.\n\nColumns define how data is presented and interacted with in the grid. They control\nrendering, grouping, sorting, filtering, editing, and more.\n\nA grid must define at least one column to display meaningful data. Columns are essential\nfor determining:\n- How rows are visualized\n- What each cell renders\n- How rows are grouped and sorted\n- How filters are evaluated"
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 378,
					"name": "autosizeCellFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function that computes the ideal width for the column based on sampled cell content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1831,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1831"
						}
					],
					"type": {
						"type": "reference",
						"target": 300,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AutosizeCellFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 379,
					"name": "autosizeHeaderFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function that computes the ideal width for the column header based on its content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1836,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1836"
						}
					],
					"type": {
						"type": "reference",
						"target": 310,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AutosizeHeaderFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 373,
					"name": "cellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines how to render the cell content. Accepts a renderer function or a string referencing a registered renderer."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1804,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1804"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 961,
								"typeArguments": [
									{
										"type": "reference",
										"target": 381,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "Column.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 368,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines how many columns the cell should span. Can be a fixed number or a function that returns a span dynamically."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1779,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1779"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 915,
								"typeArguments": [
									{
										"type": "reference",
										"target": 381,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "Column.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellSpanFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 375,
					"name": "editable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether cells in the column can be edited.\n\n  Editing is only possible when both the grid is in edit mode and this flag is set."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1816,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1816"
						}
					],
					"type": {
						"type": "reference",
						"target": 1598,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Editable",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 376,
					"name": "editRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a custom cell editor to use when the cell enters edit mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1821,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1821"
						}
					],
					"type": {
						"type": "reference",
						"target": 1550,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 377,
					"name": "editSetter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom logic for applying an edit to the row's data. Required when editing fields that need special update logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1826,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1826"
						}
					],
					"type": {
						"type": "reference",
						"target": 1580,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditSetterFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 370,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines how the cell value should be retrieved or computed for the column. If omitted, the column's "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " is used as a fallback."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1789,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1789"
						}
					],
					"type": {
						"type": "reference",
						"target": 959,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Field",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 372,
					"name": "floatingCellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render a floating row cell. Only called when floating rows are enabled. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1799,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1799"
						}
					],
					"type": {
						"type": "reference",
						"target": 1535,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderFloatingCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 367,
					"name": "groupPath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the hierarchical path of column groups the column belongs to. Each string corresponds to a level in the nesting hierarchy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1774,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1774"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 366,
					"name": "groupVisibility",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the visibility behavior of a column when its group is collapsed.\n\n  Determines whether the column is always visible, only visible when expanded, or only visible when collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1769,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1769"
						}
					],
					"type": {
						"type": "reference",
						"target": 410,
						"name": "ColumnGroupVisibility",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 371,
					"name": "headerRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render the column's header. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1794,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1794"
						}
					],
					"type": {
						"type": "reference",
						"target": 1537,
						"typeArguments": [
							{
								"type": "reference",
								"target": 381,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Column.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 360,
					"name": "hide",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the visibility of the column. When set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the column is hidden from the grid display."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1735,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1735"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 356,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A required unique identifier for the column. This value must be distinct among all columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1720,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1720"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 357,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A human-readable name for the column. Useful when "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " is more technical or programmatic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1725,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1725"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 365,
					"name": "pin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether the column is pinned to the start or end of the grid. Pinned columns remain visible regardless of horizontal scroll."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1762,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1762"
						}
					],
					"type": {
						"type": "reference",
						"target": 350,
						"name": "ColumnPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 380,
					"name": "quickSearchIgnore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the column is excluded from the quick search filter.\n\nUseful for non-textual or metadata columns that should not be searchable by users."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1843,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1843"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 369,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines how many rows the cell should span. Can be a fixed number or a function that returns a span dynamically."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1784,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1784"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 915,
								"typeArguments": [
									{
										"type": "reference",
										"target": 381,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "Column.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellSpanFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 358,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the column's data type. Can be one of the built-in types or a custom string label."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1730,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1730"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "string"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 359,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							{
								"type": "literal",
								"value": "date"
							},
							{
								"type": "literal",
								"value": "datetime"
							}
						]
					}
				},
				{
					"id": 374,
					"name": "uiHints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Describes the capabilities and intended UI behavior of the column. These hints are used by external UI components."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1809,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1809"
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"name": "ColumnUIHints",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 361,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the preferred width of the column. This value is ignored if flex sizing is used, or if it violates the column's min/max bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1740,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1740"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 364,
					"name": "widthFlex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the flex ratio this column should take when distributing remaining space.\n\n  Similar to CSS "
							},
							{
								"kind": "code",
								"text": "`flex`"
							},
							{
								"kind": "text",
								"text": ", it controls how extra space is shared among flex-enabled columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1757,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1757"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 362,
					"name": "widthMax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum width the column is allowed to occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1745,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1745"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 363,
					"name": "widthMin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum width the column is allowed to occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1750,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1750"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						378,
						379,
						373,
						368,
						375,
						376,
						377,
						370,
						372,
						367,
						366,
						371,
						360,
						356,
						357,
						365,
						380,
						369,
						358,
						374,
						361,
						364,
						362,
						363
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1716,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1716"
				}
			],
			"typeParameters": [
				{
					"id": 381,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 976,
			"name": "ColumnAutosizeParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters the "
					},
					{
						"kind": "code",
						"text": "`columnAutosize`"
					},
					{
						"kind": "text",
						"text": " method accepts."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid API"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 979,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of columns to autosize. If omitted, all columns are included in the operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3350,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3350"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"target": 355,
									"typeArguments": [
										{
											"type": "reference",
											"target": 980,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "ColumnAutosizeParams.T",
											"refersToTypeParameter": true
										}
									],
									"name": "Column",
									"package": "@1771technologies/lytenyte-pro"
								}
							]
						}
					}
				},
				{
					"id": 977,
					"name": "dryRun",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", performs the autosize calculation without applying the changes. Returns the calculated widths."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3340,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3340"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 978,
					"name": "includeHeader",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", includes the column header when calculating the autosize width."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3345,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3345"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						979,
						977,
						978
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3336,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3336"
				}
			],
			"typeParameters": [
				{
					"id": 980,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 319,
			"name": "ColumnBase",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the default column configuration used by LyteNyte Grid.\n\nThis serves as a base template that provides fallback values for various column properties.\nRather than merging, LyteNyte Grid looks up configuration properties on the column first,\nthen on the default.\n\nThis allows you to set column-wide defaults that apply retroactively to all applicable columns\nwithout rewriting each one."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 332,
					"name": "autosizeCellFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function that computes the ideal width for the column based on sampled cell content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1574,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1574"
						}
					],
					"type": {
						"type": "reference",
						"target": 300,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AutosizeCellFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 333,
					"name": "autosizeHeaderFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function that computes the ideal width for the column header based on its content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1579,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1579"
						}
					],
					"type": {
						"type": "reference",
						"target": 310,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AutosizeHeaderFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 327,
					"name": "cellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines how to render the cell content. Accepts a renderer function or a string referencing a registered renderer."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1547,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1547"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 961,
								"typeArguments": [
									{
										"type": "reference",
										"target": 335,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "ColumnBase.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 329,
					"name": "editable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether cells in the column can be edited.\n\n  Editing is only possible when both the grid is in edit mode and this flag is set."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1559,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1559"
						}
					],
					"type": {
						"type": "reference",
						"target": 1598,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Editable",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 330,
					"name": "editRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a custom cell editor to use when the cell enters edit mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1564,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1564"
						}
					],
					"type": {
						"type": "reference",
						"target": 1550,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 331,
					"name": "editSetter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom logic for applying an edit to the row's data. Required when editing fields that need special update logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1569,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1569"
						}
					],
					"type": {
						"type": "reference",
						"target": 1580,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditSetterFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 326,
					"name": "floatingCellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render a floating row cell. Only called when floating rows are enabled. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1542,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1542"
						}
					],
					"type": {
						"type": "reference",
						"target": 1535,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderFloatingCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 325,
					"name": "headerRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render the column's header. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1537,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1537"
						}
					],
					"type": {
						"type": "reference",
						"target": 1537,
						"typeArguments": [
							{
								"type": "reference",
								"target": 335,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnBase.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 320,
					"name": "hide",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the visibility of the column. When set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the column is hidden from the grid display."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1510,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1510"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 334,
					"name": "quickSearchIgnore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the column is excluded from the quick search filter.\n\nUseful for non-textual or metadata columns that should not be searchable by users."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1586,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1586"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 328,
					"name": "uiHints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Describes the capabilities and intended UI behavior of the column. These hints are used by external UI components."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1552,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1552"
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"name": "ColumnUIHints",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 321,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the preferred width of the column. This value is ignored if flex sizing is used, or if it violates the column's min/max bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1515,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1515"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 324,
					"name": "widthFlex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the flex ratio this column should take when distributing remaining space.\n\n  Similar to CSS "
							},
							{
								"kind": "code",
								"text": "`flex`"
							},
							{
								"kind": "text",
								"text": ", it controls how extra space is shared among flex-enabled columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1532,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1532"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 322,
					"name": "widthMax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum width the column is allowed to occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1520,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1520"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 323,
					"name": "widthMin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum width the column is allowed to occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1525,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1525"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						332,
						333,
						327,
						329,
						330,
						331,
						326,
						325,
						320,
						334,
						328,
						321,
						324,
						322,
						323
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1506,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1506"
				}
			],
			"typeParameters": [
				{
					"id": 335,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 406,
			"name": "ColumnGroupMeta",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Provides metadata related to column groups in LyteNyte Grid.\n\nThis metadata is auto-generated by the grid based on the configured column definitions.\nIt is used internally to manage layout and grouping behavior, but is also exposed for\nadvanced use cases where programmatic interaction with group structures is needed."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Groups"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 407,
					"name": "colIdToGroupIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map linking each column id to its associated group id hierarchy.\n\nOnly populated for columns that belong to at least one group. The group ids reflect the\nnesting structure and are ordered from outermost to innermost group."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2000,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2000"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 409,
					"name": "groupIsCollapsible",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a given column group is collapsible.\n\nFor a group to be collapsible:\n- It must contain at least one column visible when the group is **collapsed**\n- It must also contain at least one column visible only when the group is **expanded**\n\nThe map uses group ids as keys and a boolean as the value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2019,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2019"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 408,
					"name": "validGroupIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A set of all valid group ids found in the grid.\n\nGroup ids are derived by joining nested group names using the configured group delimiter.\nUsed for validation, lookup, and rendering logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2008,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2008"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						407,
						409,
						408
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1993,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1993"
				}
			]
		},
		{
			"id": 336,
			"name": "ColumnMarker",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure of a marker column.\n\n  The marker column is a grid managed column used to support features like selection checkboxes or row drag handles."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 337,
					"name": "cellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines how to render the cell content. Accepts a renderer function or a string referencing a registered renderer."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1600,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1600"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 961,
								"typeArguments": [
									{
										"type": "reference",
										"target": 342,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "ColumnMarker.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 339,
					"name": "floatingCellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render a floating row cell. Only called when floating rows are enabled. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1610,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1610"
						}
					],
					"type": {
						"type": "reference",
						"target": 1535,
						"typeArguments": [
							{
								"type": "reference",
								"target": 342,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnMarker.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderFloatingCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 338,
					"name": "headerRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render the column's header. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1605,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1605"
						}
					],
					"type": {
						"type": "reference",
						"target": 1537,
						"typeArguments": [
							{
								"type": "reference",
								"target": 342,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnMarker.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 341,
					"name": "uiHints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Describes the capabilities and intended UI behavior of the column. These hints are used by external UI components."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1620,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1620"
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"name": "ColumnUIHints",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 340,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the preferred width of the column. This value is ignored if flex sizing is used, or if it violates the column's min/max bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1615,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1615"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						337,
						339,
						338,
						341,
						340
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1596,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1596"
				}
			],
			"typeParameters": [
				{
					"id": 342,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 343,
			"name": "ColumnMeta",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents runtime metadata for the current column configuration in LyteNyte Grid.\n\nThis metadata is primarily useful for programmatic interaction with the grid. The values\nare derived from the grid's internal column state and may change depending on modes\nlike pivoting. For example, when pivot mode is enabled, "
					},
					{
						"kind": "code",
						"text": "`columnsVisible`"
					},
					{
						"kind": "text",
						"text": " refers to\nvisible pivot columns instead of the regular ones."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 345,
					"name": "columnLookup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A lookup map from column id to column definition. Useful for quick access or\nmetadata introspection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1644,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1644"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 355,
								"typeArguments": [
									{
										"type": "reference",
										"target": 349,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "ColumnMeta.T",
										"refersToTypeParameter": true
									}
								],
								"name": "Column",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 344,
					"name": "columnsVisible",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of currently visible columns, accounting for "
							},
							{
								"kind": "code",
								"text": "`hide`"
							},
							{
								"kind": "text",
								"text": " flags and\ncolumn group collapse states."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1638,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1638"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 355,
							"typeArguments": [
								{
									"type": "reference",
									"target": 349,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "ColumnMeta.T",
									"refersToTypeParameter": true
								}
							],
							"name": "Column",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 347,
					"name": "columnVisibleCenterCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of visible columns that are unpinned (center-aligned)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1654,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1654"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 348,
					"name": "columnVisibleEndCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of visible columns pinned to the end of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1659,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1659"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 346,
					"name": "columnVisibleStartCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of visible columns pinned to the start of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1649,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1649"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						345,
						344,
						347,
						348,
						346
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1633,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1633"
				}
			],
			"typeParameters": [
				{
					"id": 349,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1351,
			"name": "ColumnMoveBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters provided when a column move operation begins. This event allows the move action to be canceled."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1354,
					"name": "before",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the moved columns should be inserted before ("
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ") or after ("
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ") the target column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4701,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4701"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1356,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4711,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4711"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1360,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnMoveBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1352,
					"name": "moveColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of column definitions representing the columns being moved during the operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4691,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4691"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 355,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1360,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "ColumnMoveBeginParams.T",
									"refersToTypeParameter": true
								}
							],
							"name": "Column",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1353,
					"name": "moveTarget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target column reference used to determine the new insertion position for the moved columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4696,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4696"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1360,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnMoveBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1357,
					"name": "preventDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that, when invoked, cancels the column move operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4716,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4716"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1358,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 4716,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4716"
								}
							],
							"signatures": [
								{
									"id": 1359,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 4716,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4716"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1355,
					"name": "updatePinState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the moved columns should inherit the pinning state of the target column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4706,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4706"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1354,
						1356,
						1352,
						1353,
						1357,
						1355
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4687,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4687"
				}
			],
			"typeParameters": [
				{
					"id": 1360,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1366,
			"name": "ColumnMoveEndParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters emitted when a column move operation has completed."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1369,
					"name": "before",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the moved columns should be inserted before ("
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ") or after ("
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ") the target column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4750,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4750"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1371,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4760,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4760"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1372,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnMoveEndParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1367,
					"name": "moveColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of column definitions representing the columns being moved during the operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4740,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4740"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 355,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1372,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "ColumnMoveEndParams.T",
									"refersToTypeParameter": true
								}
							],
							"name": "Column",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1368,
					"name": "moveTarget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target column reference used to determine the new insertion position for the moved columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4745,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4745"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1372,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnMoveEndParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1370,
					"name": "updatePinState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the moved columns should inherit the pinning state of the target column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4755,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4755"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1369,
						1371,
						1367,
						1368,
						1370
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4736,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4736"
				}
			],
			"typeParameters": [
				{
					"id": 1372,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 981,
			"name": "ColumnMoveParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters that may be provided to the "
					},
					{
						"kind": "code",
						"text": "`columnMove`"
					},
					{
						"kind": "text",
						"text": " API method."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid API"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 984,
					"name": "before",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If the move columns should be placed before the target column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3374,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3374"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 982,
					"name": "moveColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The columns being moved. May be the column id or the column itself. All the columns should\n      be present in the grid's column definitions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3363,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3363"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": 355,
									"typeArguments": [
										{
											"type": "reference",
											"target": 986,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "ColumnMoveParams.T",
											"refersToTypeParameter": true
										}
									],
									"name": "Column",
									"package": "@1771technologies/lytenyte-pro"
								}
							]
						}
					}
				},
				{
					"id": 983,
					"name": "moveTarget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The move target for the columns. The target may not be present in the move columns, i.e. can not move\n      a column to itself."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3369,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3369"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 355,
								"typeArguments": [
									{
										"type": "reference",
										"target": 986,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "ColumnMoveParams.T",
										"refersToTypeParameter": true
									}
								],
								"name": "Column",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 985,
					"name": "updatePinState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If the pin state of the columns being moved should be updated to match the target column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3379,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3379"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						984,
						982,
						983,
						985
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3358,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3358"
				}
			],
			"typeParameters": [
				{
					"id": 986,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1768,
			"name": "ColumnPivotColumnItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration for the column dimension of a pivot.\n\nEach item defines a field whose values will be used to generate dynamic columns in the pivot view."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Pivots"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1770,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether this column pivot is currently active.\n\nDefaults to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6394,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6394"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1769,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column id used to generate pivoted columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6387,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6387"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1770,
						1769
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6383,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6383"
				}
			]
		},
		{
			"id": 1771,
			"name": "ColumnPivotModel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The full configuration model for column pivoting in LyteNyte Grid.\n\nThis includes row grouping, column generation, value aggregation, and sort/filter\nconfiguration for the pivoted result."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Pivots"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1773,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields to pivot on for generating dynamic columns. See "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ColumnPivotColumnItem",
								"target": 1768
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6414,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6414"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1768,
							"name": "ColumnPivotColumnItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1776,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter configuration for the pivot view.\n\nLike the sort model, filters apply to the dynamically generated pivot columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6436,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6436"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1299,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1778,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "ColumnPivotModel.T",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterModelItem",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1777,
					"name": "filtersIn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "In Filter configuration for the pivot view.\n\nLike the sort model, in filters apply to the dynamically generated pivot columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6443,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6443"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1289,
								"name": "FilterIn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1772,
					"name": "rows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Row-level groupings for the pivot. See "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ColumnPivotRowItem",
								"target": 1779
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6409,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6409"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1779,
							"name": "ColumnPivotRowItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1775,
					"name": "sorts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sort configuration for the pivot result view.\n\nThe sort keys must match dynamically generated pivot column ids."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6429,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6429"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1241,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1778,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "ColumnPivotModel.T",
									"refersToTypeParameter": true
								}
							],
							"name": "SortModelItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1774,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value items (measures) to compute and display in the pivot result.\n\nEach value is aggregated for every dynamic column combination created by the pivot.\nSee "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ColumnPivotValueItem",
								"target": 1782
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6422,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6422"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1782,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1778,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "ColumnPivotModel.T",
									"refersToTypeParameter": true
								}
							],
							"name": "ColumnPivotValueItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1773,
						1776,
						1777,
						1772,
						1775,
						1774
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6405,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6405"
				}
			],
			"typeParameters": [
				{
					"id": 1778,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1779,
			"name": "ColumnPivotRowItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration for row-level grouping in a column pivot model.\n\nThese items define which fields should be used to group rows before creating pivot columns."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Pivots"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1781,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether this grouping is active.\n\nDefaults to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ". Set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " to temporarily disable this row grouping without removing it."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6464,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6464"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1780,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column id to group rows by."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6457,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6457"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1781,
						1780
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6453,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6453"
				}
			]
		},
		{
			"id": 351,
			"name": "ColumnPivotUIHints",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes UI hints related to column pivot functionality.\n\nThese hints indicate whether a column is eligible to act as a value, row group, or\ncolumn pivot in a pivot table configuration. External components can use these values\nto determine pivot-related capabilities."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 354,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the column can be used as a pivot column header."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1698,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1698"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 353,
					"name": "rows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the column can be used as a pivot row group."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1693,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1693"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 352,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the column can be used as a pivot value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1688,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1688"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						354,
						353,
						352
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1684,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1684"
				}
			]
		},
		{
			"id": 1782,
			"name": "ColumnPivotValueItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration for value fields in a pivot (also known as measures).\n\nThese values define what numeric or aggregate data should be shown for each cell in the pivot result."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Pivots"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1785,
					"name": "active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether this value item is enabled.\n\nDefaults to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ". Set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " to exclude this value from the pivot result."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6490,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6490"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1784,
					"name": "aggFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The aggregation function to apply to the value. See "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AggModelFn",
								"target": 1335
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6483,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6483"
						}
					],
					"type": {
						"type": "reference",
						"target": 1335,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1786,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "ColumnPivotValueItem.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AggModelFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1783,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column id representing the value to aggregate."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6478,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6478"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1785,
						1784,
						1783
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6474,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6474"
				}
			],
			"typeParameters": [
				{
					"id": 1786,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 398,
			"name": "ColumnUIHints",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "UI hints describing column capabilities in LyteNyte Grid.\n\nThese hints can be used by external components to drive UI decisions (e.g.\nenabling/disabling sort or resize handles). They are not enforced by LyteNyte Grid\nand can be bypassed by modifying grid state directly.\n\nIncludes support for pivot-specific behaviors via "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ColumnPivotUIHints",
						"target": 351
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 403,
					"name": "aggDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hint specifying the default aggregation function to apply to this column.\n\nThis is especially relevant in pivot mode or when row grouping is active."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1969,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1969"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 404,
					"name": "aggsAllowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hint specifying the list of valid aggregation functions that can be applied to this column.\nIf unset, the column may not support aggregation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1975,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1975"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 405,
					"name": "columnPivot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hints for pivot-related behaviors, specifying whether a column can act as a value,\nrow, or column pivot."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1981,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1981"
						}
					],
					"type": {
						"type": "reference",
						"target": 351,
						"name": "ColumnPivotUIHints",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 402,
					"name": "movable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hint indicating whether the column can be repositioned by dragging.\nThis only affects drag-and-drop behaviors; programmatic moves are still possible."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1962,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1962"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 401,
					"name": "resizable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hint indicating whether the column can be resized by the user.\nWhen set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ", resize handles will be hidden."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1956,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1956"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 400,
					"name": "rowGroupable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hint indicating whether this column can be used for row grouping."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1950,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1950"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 399,
					"name": "sortable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "UI hint indicating whether this column supports sorting. LyteNyte Grid may\nhide sort controls if this is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1945,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1945"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						403,
						404,
						405,
						402,
						401,
						400,
						399
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1940,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1940"
				}
			]
		},
		{
			"id": 1820,
			"name": "DataColumnPivotFetcherParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "When column pivots are applied in LyteNyte Grid, the grid fetches pivot column\ndefinitions separately from the pivot row data. The "
					},
					{
						"kind": "code",
						"text": "`DataColumnPivotFetcherParams`"
					},
					{
						"kind": "text",
						"text": "\ntype defines the parameters passed to the fetcher that retrieves these column\npivot definitions from the server."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1821,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6669,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6669"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1824,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataColumnPivotFetcherParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1823,
					"name": "model",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " property contains the full "
							},
							{
								"kind": "code",
								"text": "`DataRequestModel`"
							},
							{
								"kind": "text",
								"text": ", which captures the grid's state at the moment the\nrequest is created. This snapshot includes all relevant settings: sorting,\nfiltering, grouping, pivot configuration, and aggregation rules.\n\nThe server uses the "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " to interpret how data should be prepared before returning\nit to the client. For example, the model tells the server which filters to\napply, how rows should be grouped, and what aggregations to compute.\n\nBecause it is a snapshot, the "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " does not remain in sync with the grid after\nthe request is sent. It represents the state as it existed when the request was\ncreated, ensuring that the server response aligns with the user's view at that time."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6692,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6692"
						}
					],
					"type": {
						"type": "reference",
						"target": 1853,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1824,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataColumnPivotFetcherParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DataRequestModel",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1822,
					"name": "reqTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unix timestamp at the time of the request. The system uses this value to\nresolve conflicts when multiple column pivot definitions are requested. Such\nconflicts can occur if the pivot configuration changes while a column pivot\nrequest is in flight."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6677,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6677"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1821,
						1823,
						1822
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6665,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6665"
				}
			],
			"typeParameters": [
				{
					"id": 1824,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1830,
			"name": "DataFetcherParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The LyteNyte Grid server data source requires a "
					},
					{
						"kind": "code",
						"text": "`dataFetcher`"
					},
					{
						"kind": "text",
						"text": " function. The "
					},
					{
						"kind": "code",
						"text": "`DataFetcherParams`"
					},
					{
						"kind": "text",
						"text": " type describes the\nparameters that LyteNyte Grid passes to this function when performing data loading.\n\nThese parameters include a set of "
					},
					{
						"kind": "code",
						"text": "`DataRequest`"
					},
					{
						"kind": "text",
						"text": " objects based on the current grid view\nand the "
					},
					{
						"kind": "code",
						"text": "`DataRequestModel`"
					},
					{
						"kind": "text",
						"text": " at the time of the call. A "
					},
					{
						"kind": "code",
						"text": "`reqTime`"
					},
					{
						"kind": "text",
						"text": " value is also provided,\nwhich is a Unix timestamp indicating when the request was made."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1831,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6747,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6747"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1835,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataFetcherParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1834,
					"name": "model",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " property contains the full "
							},
							{
								"kind": "code",
								"text": "`DataRequestModel`"
							},
							{
								"kind": "text",
								"text": ", which captures the grid's state at the moment the\nrequest is created. This snapshot includes all relevant settings: sorting,\nfiltering, grouping, pivot configuration, and aggregation rules.\n\nThe server uses the "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " to interpret how data should be prepared before returning\nit to the client. For example, the model tells the server which filters to\napply, how rows should be grouped, and what aggregations to compute.\n\nBecause it is a snapshot, the "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " does not remain in sync with the grid after\nthe request is sent. It represents the state as it existed when the request was\ncreated, ensuring that the server response aligns with the user's view at that time."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6792,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6792"
						}
					],
					"type": {
						"type": "reference",
						"target": 1853,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1835,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataFetcherParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DataRequestModel",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1833,
					"name": "reqTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`reqTime`"
							},
							{
								"kind": "text",
								"text": " property is a Unix timestamp indicating when the request was initiated.\nThis value is included with every data fetch so LyteNyte Grid can resolve\nconflicts that occur when asynchronous requests complete out of order.\n\nIf two requests target the same slice of data, the one with the later "
							},
							{
								"kind": "code",
								"text": "`reqTime`"
							},
							{
								"kind": "text",
								"text": " value takes\nprecedence. This guarantees that the grid reflects the most up-to-date\ninformation, even when network latency or rapid user interactions\ncause responses to arrive unpredictably.\n\nBy tracking freshness through "
							},
							{
								"kind": "code",
								"text": "`reqTime`"
							},
							{
								"kind": "text",
								"text": ", the grid avoids overwriting newer data\nwith stale results, providing a consistent user experience. The "
							},
							{
								"kind": "code",
								"text": "`asOfTime`"
							},
							{
								"kind": "text",
								"text": " property on the\nresponses takes priority over the "
							},
							{
								"kind": "code",
								"text": "`reqTime`"
							},
							{
								"kind": "text",
								"text": " value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6777,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6777"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1832,
					"name": "requests",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`requests`"
							},
							{
								"kind": "text",
								"text": " property is an array of "
							},
							{
								"kind": "code",
								"text": "`DataRequest`"
							},
							{
								"kind": "text",
								"text": " objects. Each object defines a slice of\ngrid data to load, including its "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " values, along with related metadata.\nThese requests describe exactly which part of the row tree the server should return data for.\n\nLyteNyte Grid may issue multiple "
							},
							{
								"kind": "code",
								"text": "`DataRequest`"
							},
							{
								"kind": "text",
								"text": " objects at once, depending on the user's\ncurrent view. For example, if different branches of a grouped view are visible,\nseparate requests are created for each branch.\n\nThis property ensures that the server receives all necessary instructions to\nprovide data slices consistently, even when the grid state is complex or rapidly changing."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6761,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6761"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1846,
							"name": "DataRequest",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1831,
						1834,
						1833,
						1832
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6743,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6743"
				}
			],
			"typeParameters": [
				{
					"id": 1835,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1841,
			"name": "DataInFilterItemFetcherParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The in filter (set filter) in LyteNyte Grid requests possible values from the\nrow data source attached to the grid state. For a server data source, the\nunique values for a given column are stored on the server.\n\nDevelopers can supply a "
					},
					{
						"kind": "code",
						"text": "`DataInFilterItemFetcherFn`"
					},
					{
						"kind": "text",
						"text": " to the server data\nsource to retrieve these unique filter items. The\n"
					},
					{
						"kind": "code",
						"text": "`DataInFilterItemFetcherParams`"
					},
					{
						"kind": "text",
						"text": " type defines the parameters passed to the\nfetcher function."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1843,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6832,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6832"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1845,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataInFilterItemFetcherParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1842,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6827,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6827"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1845,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataInFilterItemFetcherParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1844,
					"name": "reqTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unix timestamp recorded when the in-filter fetch request is made. It\nensures consistency and helps resolve conflicts if multiple filter requests\nfor the same column occur at the same time."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6839,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6839"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1843,
						1842,
						1844
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6823,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6823"
				}
			],
			"typeParameters": [
				{
					"id": 1845,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1743,
			"name": "DataRect",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a rectangular selection of cells in LyteNyte Grid.\n\nA DataRect defines its range by numerical row and column indices. It is used to extract\nor operate on a subset of the grid's data regardless of row or column reordering. However,\nif the number of rows or columns changes, the rect may be invalidated if it extends\nbeyond the new bounds."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Export"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1747,
					"name": "columnEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ending column index (exclusive)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6279,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6279"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1746,
					"name": "columnStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting column index (inclusive)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6274,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6274"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1745,
					"name": "rowEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ending row index (exclusive)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6269,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6269"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1744,
					"name": "rowStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting row index (inclusive)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6264,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6264"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1747,
						1746,
						1745,
						1744
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6260,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6260"
				}
			]
		},
		{
			"id": 1846,
			"name": "DataRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`DataRequest`"
					},
					{
						"kind": "text",
						"text": " type represents a request for a slice of data from the server.\nA slice can target either the root of the view or a specific grouping,\nidentified by the "
					},
					{
						"kind": "code",
						"text": "`path`"
					},
					{
						"kind": "text",
						"text": " property.\n\nEach request includes a unique ID, which can be used to deduplicate\nrequests or enable caching. It also defines "
					},
					{
						"kind": "code",
						"text": "`start`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`end`"
					},
					{
						"kind": "text",
						"text": " values that specify\nthe offsets of the requested slice.\n\nLyteNyte Grid may issue multiple "
					},
					{
						"kind": "code",
						"text": "`DataRequest`"
					},
					{
						"kind": "text",
						"text": " objects at once, depending on\nthe user's current view. Each request is a snapshot of the\ngrid state at the time it was made."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1850,
					"name": "end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " value specifies the offset of the last row in the current data slice.\nIt is calculated as "
							},
							{
								"kind": "code",
								"text": "`start + blockSize`"
							},
							{
								"kind": "text",
								"text": ", but constrained by the node size (row count)\nto avoid exceeding available rows. In practice, "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " is often not required for SQL-based\nimplementations of server data loading, but it is included for completeness and for non-SQL backends.\n\nLike other slice values, "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " is relative to the node identified by the "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " in LyteNyte Grid's tree\nstructure. The tree is flat when no row grouping is applied and nested when groups are present."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6899,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6899"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1847,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " property uniquely identifies a data request. LyteNyte Grid\ngenerates this value from the request path and the slice's "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " values.\nThe ID can be used to deduplicate requests or cache results."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6863,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6863"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1848,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " property identifies the position in the data tree for a request.\nLyteNyte Grid stores requested slices in a tree structure: the tree is flat\nwhen no row grouping is applied, and nested when groups are present.\nThe "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " specifies which branch of the tree the request targets.\n\nDevelopers typically only need to fetch data for the given "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " value. In practice,\nthe path usually translates into a filter. For example, if rows are grouped\nby the "
							},
							{
								"kind": "code",
								"text": "`Category`"
							},
							{
								"kind": "text",
								"text": " column and the path is "
							},
							{
								"kind": "code",
								"text": "`[\"critical\"]`"
							},
							{
								"kind": "text",
								"text": ", the server may apply\na filter such as "
							},
							{
								"kind": "code",
								"text": "`WHERE Category = 'critical'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6876,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6876"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": null
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					}
				},
				{
					"id": 1852,
					"name": "rowEndIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`rowEndIndex`"
							},
							{
								"kind": "text",
								"text": " is the projected index of the last row in the requested data slice.\nLike "
							},
							{
								"kind": "code",
								"text": "`rowStartIndex`"
							},
							{
								"kind": "text",
								"text": ", it is an estimate based on where LyteNyte expects the rows to appear once\nthe request resolves, not an actual row index. For example, if a slice requests 100 rows and\nthe projected "
							},
							{
								"kind": "code",
								"text": "`rowStartIndex`"
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "`20`"
							},
							{
								"kind": "text",
								"text": ", then the projected "
							},
							{
								"kind": "code",
								"text": "`rowEndIndex`"
							},
							{
								"kind": "text",
								"text": " will be "
							},
							{
								"kind": "code",
								"text": "`120`"
							},
							{
								"kind": "text",
								"text": ".\n\nUse "
							},
							{
								"kind": "code",
								"text": "`rowEndIndex`"
							},
							{
								"kind": "text",
								"text": " only in advanced server view implementations. Because projected indices\ncan change before a request resolves, relying on this value increases complexity and\nshould be avoided in most cases."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6923,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6923"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1851,
					"name": "rowStartIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`rowStartIndex`"
							},
							{
								"kind": "text",
								"text": " is the projected index of the first row in the requested data.\nIt is an estimate of where LyteNyte expects the row to appear once the request resolves,\nnot the actual row index. For example, if row groups are applied and the\nparent node is rendered at row index "
							},
							{
								"kind": "code",
								"text": "`20`"
							},
							{
								"kind": "text",
								"text": ", then "
							},
							{
								"kind": "code",
								"text": "`rowStartIndex`"
							},
							{
								"kind": "text",
								"text": " will be "
							},
							{
								"kind": "code",
								"text": "`20 + start`"
							},
							{
								"kind": "text",
								"text": ".\n\nUse "
							},
							{
								"kind": "code",
								"text": "`rowStartIndex`"
							},
							{
								"kind": "text",
								"text": " only in advanced server view implementations.\nBecause projected indices can change before a request resolves, relying on\nthis value increases complexity and should be avoided in most cases."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6911,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6911"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1849,
					"name": "start",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " value specifies the offset from the first row\nof the current data slice, relative to the node identified by\nthe "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": ". LyteNyte Grid stores slices in a tree structure: flat when\nno row grouping is applied, and nested when groups are present.\nUnlike a global row index, "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " is always relative to its parent node.\n\nIn SQL, "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " typically maps to an "
							},
							{
								"kind": "code",
								"text": "`OFFSET`"
							},
							{
								"kind": "text",
								"text": " value. For example,\nif the block size is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": ", the request might translate to "
							},
							{
								"kind": "code",
								"text": "`LIMIT 100 OFFSET <start>`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6888,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6888"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1850,
						1847,
						1848,
						1852,
						1851,
						1849
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6857,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6857"
				}
			]
		},
		{
			"id": 1853,
			"name": "DataRequestModel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data request model represents the current LyteNyte Grid state at the time of creation.\nIt concatenates the grid's internal models into a single structure used to request external data.\nDepending on your server's capabilities, you can choose to omit certain parts of the model.\n\nThe model is a snapshot only; it is not reactive and does not stay in sync with the grid's ongoing state."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1860,
					"name": "aggregations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`aggregations`"
							},
							{
								"kind": "text",
								"text": " property defines how column values are aggregated when row groups are present.\nAggregations are applied per column, but the output does not need to match the grid's columns exactly.\nSome columns may omit aggregation if none applies, while others\nmay include additional aggregations to attach extra data to a row.\n\nEach aggregation typically produces a column in the server response and\ntranslates to an SQL clause such as "
							},
							{
								"kind": "code",
								"text": "`SUM(<column>) AS <alias>`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7008,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7008"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1861,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1862,
											"name": "fn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 7008,
													"character": 42,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7008"
												}
											],
											"type": {
												"type": "reference",
												"target": 1335,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1866,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "DataRequestModel.T",
														"refersToTypeParameter": true
													}
												],
												"name": "AggModelFn",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1862
											]
										}
									],
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 7008,
											"character": 40,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7008"
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1855,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`filters`"
							},
							{
								"kind": "text",
								"text": " property records the column filters applied to the grid. It stores key/value pairs\nwhere the key is a column ID and the value is the filter definition. LyteNyte Grid\nallows keys that do not match a column in the current state, enabling dynamic\nfilters defined on the server but not present on the client.\n\nFilter values can represent any type, including text, number, or date filters.\nThe server is responsible for applying these filters and returning the results.\nIn SQL, filters typically translate into "
							},
							{
								"kind": "code",
								"text": "`WHERE`"
							},
							{
								"kind": "text",
								"text": " clauses."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6955,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6955"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1299,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1866,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "DataRequestModel.T",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterModelItem",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1856,
					"name": "filtersIn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`filtersIn`"
							},
							{
								"kind": "text",
								"text": " property stores set filters applied to the grid. It uses key/value pairs where\nthe key is a column ID and the value is a set filter that includes or excludes specific values.\nLyteNyte Grid allows keys that do not match a column in the current state,\nenabling dynamic filters defined on the server but not present on the client.\n\nValues in a set filter are unique by definition and cannot repeat. The server\napplies these filters and returns the results. In SQL, set filters typically\ntranslate into "
							},
							{
								"kind": "code",
								"text": "`WHERE <column> IN (<set>)`"
							},
							{
								"kind": "text",
								"text": " clauses."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6967,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6967"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1289,
								"name": "FilterIn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1859,
					"name": "groupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`groupExpansions`"
							},
							{
								"kind": "text",
								"text": " property stores the expansion state of group rows as key/value pairs.\nThe key is a row ID, and the value is either a boolean or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ".\nA value of "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " means the row has not been explicitly expanded or collapsed,\nso the default expansion state determines whether it is open or closed.\n\n"
							},
							{
								"kind": "code",
								"text": "`groupExpansions`"
							},
							{
								"kind": "text",
								"text": " is used only for optimistic data loading,\nsince LyteNyte Grid requests data for individual group slices."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6997,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6997"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1858,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`groups`"
							},
							{
								"kind": "text",
								"text": " property stores the row grouping model currently applied to the grid.\nEach item in the model represents a grouping level, which can be defined by a\ncolumn or by a dynamic expression. Row groups typically translate into "
							},
							{
								"kind": "code",
								"text": "`GROUP BY`"
							},
							{
								"kind": "text",
								"text": " clauses in SQL.\n\nWhen a data request is made, the full group model is included, but the request targets\nonly a specific slice of grouped data, identified by the "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " value. Including the entire\nmodel supports optimistic data loading and provides full context for the grouped view."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6986,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6986"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1344,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1866,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "DataRequestModel.T",
									"refersToTypeParameter": true
								}
							],
							"name": "RowGroupModelItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1863,
					"name": "pivotGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`pivotGroupExpansions`"
							},
							{
								"kind": "text",
								"text": " property stores the expansion state of pivot group rows as key/value pairs.\nThe key is a row ID, and the value is either a boolean or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": ". A value of "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " means the row has\nnot been explicitly expanded or collapsed, so the default expansion state decides whether it is open or closed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7015,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7015"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1864,
					"name": "pivotMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`pivotMode`"
							},
							{
								"kind": "text",
								"text": " property is a boolean that indicates whether the pivot view in\nLyteNyte Grid is active. Check this value before returning pivot data, since\npivot columns are not displayed unless the mode is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7022,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7022"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1865,
					"name": "pivotModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`pivotModel`"
							},
							{
								"kind": "text",
								"text": " defines the current pivot configuration of the grid.\nIt specifies which columns act as pivots, the measures applied to those\npivots, the row groups to include, the sort state of pivot columns, and any filters in effect.\n\nThe server uses this model to determine which pivoted data to return."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7031,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7031"
						}
					],
					"type": {
						"type": "reference",
						"target": 1771,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1866,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DataRequestModel.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnPivotModel",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1857,
					"name": "quickSearch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`quickSearch`"
							},
							{
								"kind": "text",
								"text": " property stores a text filter matched against cell values in\neach column. The server decides which columns to search and how to\napply the text match. In SQL, quick search filters typically\ntranslate into multiple "
							},
							{
								"kind": "code",
								"text": "`WHERE <column> LIKE '%<value>%'`"
							},
							{
								"kind": "text",
								"text": " clauses."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6975,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6975"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1854,
					"name": "sorts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`sorts`"
							},
							{
								"kind": "text",
								"text": " property is an array of column sort configurations.\nThe grid can apply multiple sorts at once, which the server should respect when ordering rows.\nUse the sort model on the server to ensure rows appear in the order the user expects. In SQL,\nsorts typically translate to an "
							},
							{
								"kind": "code",
								"text": "`ORDER BY <column> ASC|DESC`"
							},
							{
								"kind": "text",
								"text": " clause. In NoSQL systems,\napply the equivalent ordering logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6943,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6943"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1241,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1866,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "DataRequestModel.T",
									"refersToTypeParameter": true
								}
							],
							"name": "SortModelItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1860,
						1855,
						1856,
						1859,
						1858,
						1863,
						1864,
						1865,
						1857,
						1854
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6935,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6935"
				}
			],
			"typeParameters": [
				{
					"id": 1866,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1867,
			"name": "DataResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "LyteNyte Grid's server data source sends request objects describing the\ndata needed to render the grid. The server responds with\none or more "
					},
					{
						"kind": "code",
						"text": "`DataResponse`"
					},
					{
						"kind": "text",
						"text": " objects.\n\nA "
					},
					{
						"kind": "code",
						"text": "`DataResponse`"
					},
					{
						"kind": "text",
						"text": " contains the rows and metadata required to render a slice of\nthe grid's view. Each response includes a "
					},
					{
						"kind": "code",
						"text": "`path`"
					},
					{
						"kind": "text",
						"text": " value, which identifies where in the row\ntree the data belongs. Parent paths must be provided\nbefore their child paths can be created.\n\nThe server data source can handle multiple responses at once.\nSending multiple responses for different slices is common, especially\nwhen data updates frequently."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1871,
					"name": "asOfTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`asOfTime`"
							},
							{
								"kind": "text",
								"text": " property is a Unix timestamp that indicates data freshness.\nLyteNyte Grid uses it to resolve request conflicts.\n\nWhen data is loaded asynchronously, requests may arrive out of order.\nIf two requests target the same row, the one with the later "
							},
							{
								"kind": "code",
								"text": "`asOfTime`"
							},
							{
								"kind": "text",
								"text": " value takes precedence."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7083,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7083"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1869,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of row items returned for the\nspecified "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": ". Each item is either a "
							},
							{
								"kind": "code",
								"text": "`DataResponseLeafItem`"
							},
							{
								"kind": "text",
								"text": " (a leaf row with no children)\nor a "
							},
							{
								"kind": "code",
								"text": "`DataResponseBranchItem`"
							},
							{
								"kind": "text",
								"text": " (a group row with nested children).\n\nIf a response includes leaf items for a grouping that is not the final level,\nthe result is an unbalanced tree. In this case, those leaf rows cannot\nbe expanded further, regardless of the group model."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7067,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7067"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1881,
									"name": "DataResponseLeafItem",
									"package": "@1771technologies/lytenyte-pro"
								},
								{
									"type": "reference",
									"target": 1875,
									"name": "DataResponseBranchItem",
									"package": "@1771technologies/lytenyte-pro"
								}
							]
						}
					}
				},
				{
					"id": 1874,
					"name": "end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last relative index where data should stop loading. This value must\nmatch the "
							},
							{
								"kind": "code",
								"text": "`end`"
							},
							{
								"kind": "text",
								"text": " value in the data request. For optimistic data loading,\nit may differ, but it must still be greater than the corresponding "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " value\nand less than the slice "
							},
							{
								"kind": "code",
								"text": "`size`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7118,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7118"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1868,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type discriminant used by LyteNyte Grid to identify responses for scrollable\nrows. Pinned rows use a different structure, so for scrollable\nrows this value must always be "
							},
							{
								"kind": "code",
								"text": "`\"center\"`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7056,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7056"
						}
					],
					"type": {
						"type": "literal",
						"value": "center"
					}
				},
				{
					"id": 1872,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " property identifies the part of the row tree that this\nresponse belongs to. It must match the path provided in the data request.\nBecause LyteNyte Grid represents the view as a flattened row tree,\nthe path links data to its correct position in the hierarchy.\n\nFor a path to be valid, its parent must already exist or be created as\npart of the current response set. Attempting to load a deeply nested\npath before its parents is an error.\n\nA path array may include "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values to represent missing values in\na grouping. This acts as a catch-all for row groups\nwithout values in every level."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7099,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7099"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": null
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					}
				},
				{
					"id": 1870,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row count for the "
							},
							{
								"kind": "code",
								"text": "`path`"
							},
							{
								"kind": "text",
								"text": " associated with the response. If the path is empty\n(the root view), the size corresponds to the total root row count. LyteNyte Grid uses this\nvalue to determine how much space to reserve for scrollable rows in the viewport."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7074,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7074"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1873,
					"name": "start",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first relative index where data should begin loading. This value must match\nthe "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " value in the data request and is relative to the slice's\ngroup, not the row index in the view.\n\nAvoid using a different "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " value than the request. The only valid case is\nwhen the response lowers the "
							},
							{
								"kind": "code",
								"text": "`start`"
							},
							{
								"kind": "text",
								"text": " value, typically for optimistic data loading\nor refreshing nearby rows in the view."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7110,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7110"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1871,
						1869,
						1874,
						1868,
						1872,
						1870,
						1873
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 7050,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7050"
				}
			]
		},
		{
			"id": 1875,
			"name": "DataResponseBranchItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`DataResponseBranchItem`"
					},
					{
						"kind": "text",
						"text": " represents a group node.\nThese items are converted into group row nodes and\nindicate that additional child rows are nested beneath them."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1880,
					"name": "childCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A group node has child rows, though they do not need to be loaded immediately.\nThe server should indicate how many child rows a group node contains.\nThis value can be updated in later requests and serves as a hint to\nLyteNyte Grid rather than a strict contract.\n\nIn SQL, retrieving child counts typically translates\nto a "
							},
							{
								"kind": "code",
								"text": "`COUNT(*)`"
							},
							{
								"kind": "text",
								"text": " query combined with a "
							},
							{
								"kind": "code",
								"text": "`GROUP BY`"
							},
							{
								"kind": "text",
								"text": " statement."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7172,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7172"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1878,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row data for the group node. This value can be any type,\nbut LyteNyte Grid typically expects a set of key/value pairs.\nServer responses usually contain aggregated data for the group\nnode, though not every column requires a value. The aggregation\nmodel defines the expected shape of this object."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7150,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7150"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1877,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique ID for the row. LyteNyte Grid uses this ID to track group\nexpansion, retrieve rows, and manage selection. The ID must be\nunique across all rows, including leaf nodes."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7141,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7141"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1879,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A group or branch node represents a branch in the row data tree used for grouped views.\nEach node's position in the tree is determined by its "
							},
							{
								"kind": "code",
								"text": "`key`"
							},
							{
								"kind": "text",
								"text": ", which represents the\npath from the root. LyteNyte Grid uses this key to place the row node in\nthe correct location within the tree.\n\nThe "
							},
							{
								"kind": "code",
								"text": "`key`"
							},
							{
								"kind": "text",
								"text": " may be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the grouping has no value.\nIn this case, "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " represents the absence of a value for that grouping."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7161,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7161"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1876,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type discriminant used by LyteNyte Grid to distinguish between leaf and\ngroup items in a server response. When a response item has this kind,\nthe grid creates an expandable group row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7134,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7134"
						}
					],
					"type": {
						"type": "literal",
						"value": "branch"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1880,
						1878,
						1877,
						1879,
						1876
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 7128,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7128"
				}
			]
		},
		{
			"id": 1881,
			"name": "DataResponseLeafItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`DataResponseLeafItem`"
					},
					{
						"kind": "text",
						"text": " represents the data for a leaf row node. A leaf node is the last\nlevel in the data tree and cannot be expanded further. Leaf nodes appear when the view\nis flat (no row groups) or when the expanded row is at the final grouping level.\n\nEach "
					},
					{
						"kind": "code",
						"text": "`DataResponseLeafItem`"
					},
					{
						"kind": "text",
						"text": " corresponds to a single row node, and responses can mix\ndifferent node types in the same request. When row groups are present, a leaf\nitem may appear before the final grouping level, which can result in unbalanced groups."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1884,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data associated with the row node created from the response.\nThis value can be any type and should match your application's use case.\nLyteNyte Grid does not validate this data; the server is treated as trusted,\nand developers are responsible for ensuring the data is appropriate for the view."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7208,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7208"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1883,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID that LyteNyte assigns to each row. This ID is used\nfor row selection, retrieval, updates, and as the rendering key.\nIt must be unique across all rows in all data responses."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7200,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7200"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1882,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type discriminant used by LyteNyte Grid to distinguish between leaf and\ngroup data items returned by the server. When a response item has this\nkind, the grid creates a leaf row that cannot be expanded further.\nIf no row groups are defined, all data responses should be leaf items."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7193,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7193"
						}
					],
					"type": {
						"type": "literal",
						"value": "leaf"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1884,
						1883,
						1882
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 7186,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7186"
				}
			]
		},
		{
			"id": 1885,
			"name": "DataResponsePinned",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pinned rows in LyteNyte Grid remain visible regardless of user interaction\nsuch as scrolling. By definition, pinned rows do not move within the view.\n\nThe "
					},
					{
						"kind": "code",
						"text": "`DataResponsePinned`"
					},
					{
						"kind": "text",
						"text": " type provides data for pinned rows and allows the\nserver to set or update rows pinned to the top or bottom of the view."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1888,
					"name": "asOfTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`asOfTime`"
							},
							{
								"kind": "text",
								"text": " property is a Unix timestamp that indicates data freshness.\nLyteNyte Grid uses it to resolve request conflicts.\n\nWhen data is loaded asynchronously, requests may arrive out of order.\nIf two requests target the same row, the one with the later "
							},
							{
								"kind": "code",
								"text": "`asOfTime`"
							},
							{
								"kind": "text",
								"text": " value takes precedence."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7242,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7242"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1887,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data items used by LyteNyte Grid to create pinned rows.\nPinned rows are always leaf rows. The response can include any number of pinned\nrows, but it is usually best to provide only one or two."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7233,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7233"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1881,
							"name": "DataResponseLeafItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1886,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type discriminant used by LyteNyte Grid to indicate whether pinned rows\nbelong at the top or bottom of the view. To support both top and\nbottom pinned rows, the server must send two separate data responses."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7226,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7226"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "top"
							},
							{
								"type": "literal",
								"value": "bottom"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1888,
						1887,
						1886
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 7220,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7220"
				}
			]
		},
		{
			"id": 1787,
			"name": "DialogFrame",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines a dialog frame configuration used by LyteNyte Grid.\n\n  This structure is passed to grid internals to associate a rendering component\n  for dialogs triggered by grid interactions."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1788,
					"name": "component",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Component renderer function to use for this dialog frame."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6505,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6505"
						}
					],
					"type": {
						"type": "reference",
						"target": 1790,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1789,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DialogFrame.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DialogFrameRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1788
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6501,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6501"
				}
			],
			"typeParameters": [
				{
					"id": 1789,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1795,
			"name": "DialogFrameRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters provided to the dialog frame renderer function.\n\n  These include the grid context, the frame being rendered, and any additional\n  user-provided context."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1797,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom context data passed to the frame being rendered.\n\n  This context is supplied programmatically at the point of invoking the frame.\n  It can contain any arbitrary information required for rendering behavior."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Frames"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6548,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6548"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1798,
					"name": "frame",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The dialog frame definition currently being rendered."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6553,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6553"
						}
					],
					"type": {
						"type": "reference",
						"target": 1787,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1799,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DialogFrameRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DialogFrame",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1796,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6538,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6538"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1799,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DialogFrameRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1798,
						1796
					]
				},
				{
					"title": "Frames",
					"children": [
						1797
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6534,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6534"
				}
			],
			"typeParameters": [
				{
					"id": 1799,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1687,
			"name": "DragData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Contains data associated with a drag operation,\n  including transferable and site-local information."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1689,
					"name": "dataTransfer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String-based key-value pairs to be transferred with the drag event."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6023,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6023"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1688,
					"name": "siteLocalData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data that remains local to the site and is\n      not transferred via the drag event's DataTransfer object."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6018,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6018"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1689,
						1688
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6013,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6013"
				}
			]
		},
		{
			"id": 1694,
			"name": "DragEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Arguments passed during a drag event lifecycle."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1697,
					"name": "dragElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HTML element currently being dragged."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6057,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6057"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 1696,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Current cursor position during the drag."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6052,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6052"
						}
					],
					"type": {
						"type": "reference",
						"target": 1707,
						"name": "DragPosition",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1695,
					"name": "state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Current drag state data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6047,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6047"
						}
					],
					"type": {
						"type": "reference",
						"target": 1687,
						"name": "DragData",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1697,
						1696,
						1695
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6043,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6043"
				}
			]
		},
		{
			"id": 1719,
			"name": "DragMoveState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the final state of a drag-and-drop move operation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1723,
					"name": "dragElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Element that was being dragged."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6170,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6170"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 1722,
					"name": "dropElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Element into which the drag was dropped."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6165,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6165"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 1726,
					"name": "leftHalf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if the drop occurred in the left half of the element."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6185,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1724,
					"name": "rect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Bounding rectangle of the drop target."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6175,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6175"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "DOMRect"
						},
						"name": "DOMRect",
						"package": "typescript"
					}
				},
				{
					"id": 1725,
					"name": "topHalf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if the drop occurred in the top half of the element."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6180,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6180"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1720,
					"name": "x",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "X coordinate of the drop."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6155,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6155"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1721,
					"name": "y",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Y coordinate of the drop."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6160,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6160"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1723,
						1722,
						1726,
						1724,
						1725,
						1720,
						1721
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6151,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6151"
				}
			]
		},
		{
			"id": 1703,
			"name": "DragPlaceholderParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed when rendering the drag placeholder content."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1705,
					"name": "dragData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data associated with the current drag session."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6087,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6087"
						}
					],
					"type": {
						"type": "reference",
						"target": 1687,
						"name": "DragData",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1704,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6082,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6082"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1706,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "DragPlaceholderParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1705,
						1704
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6078,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6078"
				}
			],
			"typeParameters": [
				{
					"id": 1706,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1707,
			"name": "DragPosition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the current pointer position during a drag operation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1708,
					"name": "x",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Client X coordinate."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6099,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6099"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1709,
					"name": "y",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Client Y coordinate."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6104,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6104"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1708,
						1709
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6095,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6095"
				}
			]
		},
		{
			"id": 1714,
			"name": "DropEventParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the full context passed to the drop event handler."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1718,
					"name": "dragElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HTML element that was dragged."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6143,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6143"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 1717,
					"name": "dropElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HTML element onto which the drop occurred."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6138,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6138"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 1716,
					"name": "moveState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details the last-known drag position and target info before drop."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6133,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6133"
						}
					],
					"type": {
						"type": "reference",
						"target": 1719,
						"name": "DragMoveState",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1715,
					"name": "state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The drag data at the time of drop."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6128,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6128"
						}
					],
					"type": {
						"type": "reference",
						"target": 1687,
						"name": "DragData",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1718,
						1717,
						1716,
						1715
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6124,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6124"
				}
			]
		},
		{
			"id": 1605,
			"name": "EditableFnParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditableFn",
						"target": 1600
					},
					{
						"kind": "text",
						"text": ", the predicate function used to determine\nif a specific cell in the grid is editable.\n\nThese include the row index, the row node object, the grid instance, and the column\ndefinition."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1609,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5611,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5611"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1610,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditableFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1608,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5606,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5606"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1610,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditableFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1607,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5601,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5601"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1610,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditableFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1606,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5596,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5596"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1609,
						1608,
						1607,
						1606
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5592,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5592"
				}
			],
			"typeParameters": [
				{
					"id": 1610,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1539,
			"name": "EditActivePosition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the currently active cell position if editing is in progress.\n\nWhen no edit is active, this will be "
					},
					{
						"kind": "code",
						"text": "`undefined`"
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1541,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5302,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5302"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1542,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditActivePosition.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1540,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5297,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5297"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1541,
						1540
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5293,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5293"
				}
			],
			"typeParameters": [
				{
					"id": 1542,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1543,
			"name": "EditBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters accepted by the "
					},
					{
						"kind": "code",
						"text": "`editBegin`"
					},
					{
						"kind": "text",
						"text": " method to start editing a specific cell."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1545,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flexible reference to a column, which can be a column object, its id (string), or its index (number)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5320,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5320"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 355,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1547,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "EditBeginParams.T",
										"refersToTypeParameter": true
									}
								],
								"name": "Column",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 1544,
					"name": "init",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional override value to use as the initial edit value. Defaults to the cell's\ncurrent value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5315,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5315"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1546,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5325,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5325"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1545,
						1544,
						1546
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5310,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5310"
				}
			],
			"typeParameters": [
				{
					"id": 1547,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1557,
			"name": "EditRendererFnParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Input parameters for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditRendererFn",
						"target": 1552
					},
					{
						"kind": "text",
						"text": ", used to render the edit UI for a cell.\n\nThese include positional and contextual data such as row, column, value, and grid\ninstance, along with row validation status and change handlers."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1561,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5402,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5402"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1568,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditRendererFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1560,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5397,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5397"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1568,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditRendererFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1564,
					"name": "onChange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A callback that must be called with the new value when the user changes the input.\n\nThis triggers internal grid state updates and row validation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5430,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5430"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1565,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5430,
									"character": 21,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5430"
								}
							],
							"signatures": [
								{
									"id": 1566,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5430,
											"character": 21,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5430"
										}
									],
									"parameters": [
										{
											"id": 1567,
											"name": "c",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1559,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5392,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5392"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1568,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditRendererFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1558,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5387,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5387"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1562,
					"name": "rowValidationState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tracks the row's current validation status while editing.\n\n- "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ": validation failed\n- "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": ": validation passed or hasn't run\n- "
							},
							{
								"kind": "code",
								"text": "`Record<string, any>`"
							},
							{
								"kind": "text",
								"text": ": failed with details per column"
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Cell Edit"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5413,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5413"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1563,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value currently being edited in the active cell.\n\nManaged internally by the grid, but should be aligned with the expected shape of your\napplication's data model."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Cell Edit"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5423,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5423"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1561,
						1560,
						1564,
						1559,
						1558
					]
				},
				{
					"title": "Cell Edit",
					"children": [
						1562,
						1563
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5383,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5383"
				}
			],
			"typeParameters": [
				{
					"id": 1568,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1574,
			"name": "EditRowValidatorFnParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Input arguments passed to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditRowValidatorFn",
						"target": 1569
					},
					{
						"kind": "text",
						"text": ".\n\nUsed to perform validation on the entire row during or after edit submission."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1578,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row data to validate."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5476,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5476"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1575,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5461,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5461"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1579,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditRowValidatorFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1576,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5466,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5466"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1579,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditRowValidatorFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1577,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5471,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5471"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1578,
						1575,
						1576,
						1577
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5457,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5457"
				}
			],
			"typeParameters": [
				{
					"id": 1579,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1585,
			"name": "EditSetterParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Input parameters passed to an "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditSetterFn",
						"target": 1580
					},
					{
						"kind": "text",
						"text": ".\n\nProvides the context needed to compute and apply new row data based on edit input."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1589,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5520,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5520"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1592,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditSetterParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1591,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new row data after applying edits. This is an intermediate representation,\nnot yet committed to the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5532,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5532"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1586,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5505,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5505"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1592,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditSetterParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1587,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5510,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5510"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1592,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "EditSetterParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1588,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5515,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5515"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1590,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current edit value of the cell being edited. Useful when the cell is derived from data and not\nactually present in the row data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5526,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5526"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1589,
						1591,
						1586,
						1587,
						1588,
						1590
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5501,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5501"
				}
			],
			"typeParameters": [
				{
					"id": 1592,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1593,
			"name": "EditUpdateParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`editUpdate`"
					},
					{
						"kind": "text",
						"text": " method, used to submit a value change."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1595,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flexible reference to a column, which can be a column object, its id (string), or its index (number)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5550,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5550"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 355,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1597,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "EditUpdateParams.T",
										"refersToTypeParameter": true
									}
								],
								"name": "Column",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 1596,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5555,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5555"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1594,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to apply to the cell. It will go through normal validation and update\nhandling."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5545,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5545"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1595,
						1596,
						1594
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5540,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5540"
				}
			],
			"typeParameters": [
				{
					"id": 1597,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1748,
			"name": "ExportCsvParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for exporting a CSV file from LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Export"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1753,
					"name": "dataRect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional DataRect specifying the area to export.\n\nIf not provided, the grid exports the currently visible data range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6313,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6313"
						}
					],
					"type": {
						"type": "reference",
						"target": 1743,
						"name": "DataRect",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1752,
					"name": "delimiter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Delimiter character to use for separating values in the CSV output."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6306,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6306"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1750,
					"name": "includeGroupHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include column group headers in the CSV output."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6296,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6296"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1749,
					"name": "includeHeader",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include column headers in the CSV output."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6291,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6291"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1751,
					"name": "uniformGroupHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether group headers should be rendered as uniform-length arrays."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6301,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6301"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1753,
						1752,
						1750,
						1749,
						1751
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6287,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6287"
				}
			]
		},
		{
			"id": 1759,
			"name": "ExportDataRectParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for exporting a specific rectangular region of the grid using a DataRect."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Export"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1760,
					"name": "dataRect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The specific DataRect to export. If omitted, the grid may default to a visible range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6339,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6339"
						}
					],
					"type": {
						"type": "reference",
						"target": 1743,
						"name": "DataRect",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1761,
					"name": "uniformGroupHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether group headers should be returned as symmetrical arrays (i.e., uniform across rows).\n\nUseful when dealing with column groups that span multiple columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6346,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6346"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1760,
						1761
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6335,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6335"
				}
			]
		},
		{
			"id": 1762,
			"name": "ExportDataRectResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The result structure returned after exporting a DataRect from LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Export"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1766,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column definitions associated with the exported data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6373,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6373"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 355,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1767,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "ExportDataRectResult.T",
									"refersToTypeParameter": true
								}
							],
							"name": "Column",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 1765,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2D data matrix for the selected cells. Row and column spans are not applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6368,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6368"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					}
				},
				{
					"id": 1764,
					"name": "groupHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A matrix of group header labels corresponding to the exported columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6363,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6363"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					}
				},
				{
					"id": 1763,
					"name": "headers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of header ids for the exported columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6358,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6358"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1766,
						1765,
						1764,
						1763
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6354,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6354"
				}
			],
			"typeParameters": [
				{
					"id": 1767,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 940,
			"name": "FieldFnParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters passed to functional column fields.\n\n  LyteNyte Grid calls these functions dynamically during rendering or computation.\n  These calls can occur frequently (e.g., for every cell in a column), so implementations should prioritize performance."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 942,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3182,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3182"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 944,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FieldFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 943,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A representation of the row data, used in computing custom fields or sorting logic."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Field"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3189,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3189"
						}
					],
					"type": {
						"type": "reference",
						"target": 926,
						"typeArguments": [
							{
								"type": "reference",
								"target": 944,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FieldFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "FieldDataParam",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 941,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3177,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3177"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 944,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FieldFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						942,
						941
					]
				},
				{
					"title": "Field",
					"children": [
						943
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3173,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3173"
				}
			],
			"typeParameters": [
				{
					"id": 944,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 945,
			"name": "FieldPath",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies a string-based path used to extract values from a nested data structure, similar to "
					},
					{
						"kind": "code",
						"text": "`lodash.get`"
					},
					{
						"kind": "text",
						"text": ".\n\n  Example: "
					},
					{
						"kind": "code",
						"text": "`\"point.x\"`"
					},
					{
						"kind": "text",
						"text": " will return "
					},
					{
						"kind": "code",
						"text": "`data.point.x`"
					},
					{
						"kind": "text",
						"text": ". Useful for deeply nested row data."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 946,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for type guards. Should always be set to "
							},
							{
								"kind": "code",
								"text": "`\"path\"`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3203,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3203"
						}
					],
					"type": {
						"type": "literal",
						"value": "path"
					}
				},
				{
					"id": 947,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dot separated accessor path for value retrieval."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3208,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3208"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						946,
						947
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3199,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3199"
				}
			]
		},
		{
			"id": 953,
			"name": "FieldRowGroupParamsFn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the parameters used for custom row group field functions.\n\n  Enables grouping logic to be decoupled from the data's displayed value."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 955,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data object associated with the row. It may be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the row is loading or not yet available."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3241,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3241"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 956,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FieldRowGroupParamsFn.T",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 954,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3236,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3236"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 956,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FieldRowGroupParamsFn.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						955,
						954
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3232,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3232"
				}
			],
			"typeParameters": [
				{
					"id": 956,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1262,
			"name": "FilterCombination",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A logical grouping filter used to apply multiple filters together\nusing AND or OR logic.\n\nCombination filters enable complex conditional logic by nesting\ndifferent filters into a tree structure."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1265,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The list of filters to combine using the specified operator.\n\nThis list may contain any combination of core filter types,\nincluding nested combination filters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4036,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4036"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1301,
									"name": "FilterNumber",
									"package": "@1771technologies/lytenyte-pro"
								},
								{
									"type": "reference",
									"target": 1312,
									"name": "FilterString",
									"package": "@1771technologies/lytenyte-pro"
								},
								{
									"type": "reference",
									"target": 1267,
									"name": "FilterDate",
									"package": "@1771technologies/lytenyte-pro"
								},
								{
									"type": "reference",
									"target": 1262,
									"name": "FilterCombination",
									"package": "@1771technologies/lytenyte-pro"
								}
							]
						}
					}
				},
				{
					"id": 1263,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type discriminator for a combination filter.\nIdentifies this object as a logical combination of sub-filters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4022,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4022"
						}
					],
					"type": {
						"type": "literal",
						"value": "combination"
					}
				},
				{
					"id": 1264,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The logical operator to apply when evaluating the list of filters\n(e.g., AND, OR)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4028,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4028"
						}
					],
					"type": {
						"type": "reference",
						"target": 1266,
						"name": "FilterCombinationOperator",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1265,
						1263,
						1264
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4017,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4017"
				}
			]
		},
		{
			"id": 1267,
			"name": "FilterDate",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A filter type for evaluating date fields in a grid dataset.\n\nDate filters enable both exact and relative comparisons of date values and are essential\nfor time-series or event-driven data. LyteNyte Grid expects date values to follow a standard\nISO string format like "
					},
					{
						"kind": "code",
						"text": "`\"2025-02-01 12:00:11-02:00\"`"
					},
					{
						"kind": "text",
						"text": ".\n\nIf filtering on timestamps or partial dates, be mindful of timezone offsets and whether\ntime components are relevant to your comparison."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1268,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type discriminator used to identify this filter as a date-based filter.\n\nHelps distinguish between multiple filter types when working with compound filters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4066,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4066"
						}
					],
					"type": {
						"type": "literal",
						"value": "date"
					}
				},
				{
					"id": 1269,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The comparison operator to apply. Determines how the field value is matched\nagainst the provided filter "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": ".\n\nRefer to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FilterDateOperator",
								"target": 1272
							},
							{
								"kind": "text",
								"text": " for the complete set of options."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4074,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4074"
						}
					],
					"type": {
						"type": "reference",
						"target": 1272,
						"name": "FilterDateOperator",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1271,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional configuration to control how the date is parsed and compared.\n\nFor example, setting "
							},
							{
								"kind": "code",
								"text": "`includeTime`"
							},
							{
								"kind": "text",
								"text": " enables precise comparisons down to milliseconds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4093,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4093"
						}
					],
					"type": {
						"type": "reference",
						"target": 1273,
						"name": "FilterDateOptions",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1270,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The comparison value used by the filter.\n\nThis may be:\n- A date string (e.g., \"2025-01-01\") for direct comparisons\n- A number (e.g., 7) for relative filters like \"n_days_ago\"\n- Null, for special null-matching semantics\n\nThe exact type depends on the operator in use."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4086,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4086"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1268,
						1269,
						1271,
						1270
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4060,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4060"
				}
			]
		},
		{
			"id": 1273,
			"name": "FilterDateOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Optional modifiers to customize date filter evaluation behavior.\n\nIncludes options like null handling and whether time values should be considered\nduring comparisons."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1275,
					"name": "includeTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, includes time components (hours, minutes, seconds) when comparing date values.\n\nBy default, only the calendar date is compared. Enabling this flag allows for high-precision\nfiltering, which is useful for timestamp-based data (e.g., log entries or event schedules)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4167,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4167"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1274,
					"name": "nullHandling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls how "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values are treated when applying the filter.\n\n- "
							},
							{
								"kind": "code",
								"text": "`\"ignore\"`"
							},
							{
								"kind": "text",
								"text": ": Excludes rows where the value is "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "code",
								"text": "`\"include\"`"
							},
							{
								"kind": "text",
								"text": ": Retains rows with "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values\n\n**Note:** Actual behavior depends on the row data source. Properly implemented sources will\nrespect this setting, but others may not. Additionally, this setting may be ignored by some\nfilter operators. For instance, equality checks may treat "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " as a valid match if it's\nexplicitly passed as the filter value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4159,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4159"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "ignore"
							},
							{
								"type": "literal",
								"value": "include"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1275,
						1274
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4147,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4147"
				}
			]
		},
		{
			"id": 1281,
			"name": "FilterFnParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters passed to a custom function filter.\n\nIncludes both the current row's data and the overall grid configuration."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1282,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data object associated with the row. It may be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the row is loading or not yet available."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4197,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4197"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1284,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FilterFnParams.T",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 1283,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4202,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4202"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1284,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FilterFnParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1282,
						1283
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4193,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4193"
				}
			],
			"typeParameters": [
				{
					"id": 1284,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1285,
			"name": "FilterFunc",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A functional filter definition. It provides ultimate flexibility\nfor filtering scenarios that don't conform to basic models.\n\nShould be used selectively and optimized for performance."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1287,
					"name": "func",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filter function to evaluate for each row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4222,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4222"
						}
					],
					"type": {
						"type": "reference",
						"target": 1276,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1288,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "FilterFunc.T",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1286,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type discriminator used to identify this as a function filter."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4217,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4217"
						}
					],
					"type": {
						"type": "literal",
						"value": "func"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1287,
						1286
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4213,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4213"
				}
			],
			"typeParameters": [
				{
					"id": 1288,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1289,
			"name": "FilterIn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a set-based filter that checks whether a value is included\nin (or excluded from) a set of values.\n\nOften referred to as a \"Set Filter\", this is a PRO-only feature in\nLyteNyte Grid and cannot be nested in combination filters."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1290,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type discriminator used to identify this filter as an "
							},
							{
								"kind": "code",
								"text": "`in`"
							},
							{
								"kind": "text",
								"text": " filter.\nEnsures correct handling within the filter model."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4239,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4239"
						}
					],
					"type": {
						"type": "literal",
						"value": "in"
					}
				},
				{
					"id": 1291,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies whether to include or exclude the values in the set.\nSee "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "FilterInOperator",
								"target": 1298
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4245,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4245"
						}
					],
					"type": {
						"type": "reference",
						"target": 1298,
						"name": "FilterInOperator",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1292,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The set of allowed or disallowed values to filter against.\n\nValues may include strings, numbers, or nulls. The operator\ndetermines how this set is interpreted."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4253,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4253"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1290,
						1291,
						1292
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4234,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4234"
				}
			]
		},
		{
			"id": 1293,
			"name": "FilterInFilterItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a displayable filter option for use with the "
					},
					{
						"kind": "code",
						"text": "`in`"
					},
					{
						"kind": "text",
						"text": " filter UI component.\n\nSupports grouping and human-friendly labeling for raw filter values."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1297,
					"name": "groupPath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Grouping path to organize filter values into nested structures.\n\nThis is useful for tree-based UIs where items belong to categories\n(e.g., year > month > day)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4286,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4286"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1294,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique id for the in filter item."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4267,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4267"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1295,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display label for the item in the UI. Should be human-readable\neven when the value itself is raw or technical."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4273,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4273"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1296,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to be matched in the in-filter set. Typically a string or number."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4278,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4278"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1297,
						1294,
						1295,
						1296
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4263,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4263"
				}
			]
		},
		{
			"id": 1301,
			"name": "FilterNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines a filter for numeric columns.\n\nApplies common comparison logic to include or exclude rows based on numerical values in a specified column."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1302,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant property used for type narrowing and filter dispatching.\nIdentifies this object as a number-based filter."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4323,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4323"
						}
					],
					"type": {
						"type": "literal",
						"value": "number"
					}
				},
				{
					"id": 1303,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Operator to apply in the filter condition (e.g., "
							},
							{
								"kind": "code",
								"text": "`greater_than`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`equals`"
							},
							{
								"kind": "text",
								"text": ").\n\nDetermines how the row value is compared to the provided "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4330,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4330"
						}
					],
					"type": {
						"type": "reference",
						"target": 1306,
						"name": "FilterNumberOperator",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1305,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional behavior modifiers for the filter such as absolute value comparison and null handling.\n\nThese settings enhance precision and flexibility when filtering numerical data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4344,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4344"
						}
					],
					"type": {
						"type": "reference",
						"target": 1307,
						"name": "FilterNumberOptions",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1304,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Target value for the filter.\n\nThis will be used as the right-hand operand when applying the operator to each row's value. May be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if specifically filtering for nulls."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4337,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4337"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1302,
						1303,
						1305,
						1304
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4318,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4318"
				}
			]
		},
		{
			"id": 1307,
			"name": "FilterNumberOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Optional configuration values for number filters. These options allow fine-tuning of filter behavior,\nespecially in cases involving precision or null handling."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1308,
					"name": "absolute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the filter will compare absolute values instead of signed numbers.\n\nUseful for scenarios where magnitude is more relevant than direction (e.g., distance, deviation)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4374,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4374"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1309,
					"name": "epsilon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Floating-point precision buffer when evaluating comparisons.\n\nFor example, a comparison using "
							},
							{
								"kind": "code",
								"text": "`epsilon = 0.0001`"
							},
							{
								"kind": "text",
								"text": " allows for minor rounding differences\nwhen dealing with decimal values."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4382,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4382"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1310,
					"name": "nullHandling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls how "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values are treated when applying the filter.\n\n- "
							},
							{
								"kind": "code",
								"text": "`\"ignore\"`"
							},
							{
								"kind": "text",
								"text": ": Excludes rows where the value is "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "code",
								"text": "`\"include\"`"
							},
							{
								"kind": "text",
								"text": ": Retains rows with "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values\n\n**Note:** Actual behavior depends on the row data source. Properly implemented sources will\nrespect this setting, but others may not. Additionally, this setting may be ignored by some\nfilter operators. For instance, equality checks may treat "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " as a valid match if it's\nexplicitly passed as the filter value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4395,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4395"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "ignore"
							},
							{
								"type": "literal",
								"value": "include"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1308,
						1309,
						1310
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4368,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4368"
				}
			]
		},
		{
			"id": 1312,
			"name": "FilterString",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filter configuration for string-based column data.\n\nSupports a wide range of operators such as exact match, substring containment, regex matching, and string length comparisons."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1313,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type discriminant used internally to identify this as a string filter.\nUseful when filters are stored in a mixed array."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4422,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4422"
						}
					],
					"type": {
						"type": "literal",
						"value": "string"
					}
				},
				{
					"id": 1314,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtering operator (e.g., \"contains\", \"equals\", \"length_greater_than\")."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4427,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4427"
						}
					],
					"type": {
						"type": "reference",
						"target": 1320,
						"name": "FilterStringOperator",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1316,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional modifiers to control filter behavior including case sensitivity, whitespace, punctuation,\nand locale-sensitive matching."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4443,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4443"
						}
					],
					"type": {
						"type": "reference",
						"target": 1321,
						"name": "FilterStringOptions",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1315,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to compare against.\n\nMay be:\n- "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": ": for most text comparisons\n- "
							},
							{
								"kind": "code",
								"text": "`number`"
							},
							{
								"kind": "text",
								"text": ": for length-based operators\n- "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": ": when matching absence of value"
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4437,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4437"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1313,
						1314,
						1316,
						1315
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4417,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4417"
				}
			]
		},
		{
			"id": 1317,
			"name": "FilterStringCollation",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Collation configuration for locale-sensitive string comparisons.\n\nUsed to construct an "
					},
					{
						"kind": "code",
						"text": "`Intl.Collator`"
					},
					{
						"kind": "text",
						"text": " instance, which enables proper handling of language and region-specific rules."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1318,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The locale string to apply during comparisons (e.g., \"en\", \"de\", \"zh-CN\").\nThis determines how values are interpreted for culturally appropriate sorting."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4458,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4458"
						}
					],
					"type": {
						"type": "reference",
						"target": 1328,
						"name": "Locale",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1319,
					"name": "sensitivity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the sensitivity of character comparisons (e.g., case vs. accent differences).\n\nSee the [Intl.Collator documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator)\nfor details on supported sensitivity levels."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4466,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4466"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "base"
							},
							{
								"type": "literal",
								"value": "accent"
							},
							{
								"type": "literal",
								"value": "case"
							},
							{
								"type": "literal",
								"value": "variant"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1318,
						1319
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4453,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4453"
				}
			]
		},
		{
			"id": 1321,
			"name": "FilterStringOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Optional settings to modify the behavior of string filter evaluation.\n\nThese provide control over how string values are matched, such as case sensitivity, whitespace trimming,\nregular expression flags, and locale-based collation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1324,
					"name": "caseInsensitive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, string comparisons are case-insensitive.\n\nNote: Some locales may implicitly perform case-insensitive comparisons depending on "
							},
							{
								"kind": "code",
								"text": "`sensitivity`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4526,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4526"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1327,
					"name": "collation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Collation options to apply locale-sensitive sorting and comparison behavior using "
							},
							{
								"kind": "code",
								"text": "`Intl.Collator`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4549,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4549"
						}
					],
					"type": {
						"type": "reference",
						"target": 1317,
						"name": "FilterStringCollation",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1325,
					"name": "ignorePunctuation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, removes punctuation from strings before evaluating the comparison."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4531,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4531"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1326,
					"name": "nullHandling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls how "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values are treated when applying the filter.\n\n- "
							},
							{
								"kind": "code",
								"text": "`\"ignore\"`"
							},
							{
								"kind": "text",
								"text": ": Excludes rows where the value is "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "code",
								"text": "`\"include\"`"
							},
							{
								"kind": "text",
								"text": ": Retains rows with "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " values\n\n**Note:** Actual behavior depends on the row data source. Properly implemented sources will\nrespect this setting, but others may not. Additionally, this setting may be ignored by some\nfilter operators. For instance, equality checks may treat "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " as a valid match if it's\nexplicitly passed as the filter value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4544,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4544"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "ignore"
							},
							{
								"type": "literal",
								"value": "include"
							}
						]
					}
				},
				{
					"id": 1322,
					"name": "regexOpts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags to apply when using the "
							},
							{
								"kind": "code",
								"text": "`matches`"
							},
							{
								"kind": "text",
								"text": " operator (e.g., \"i\" for case-insensitive, \"g\" for global).\n\nSee the [MDN RegExp flags guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions#advanced_searching_with_flags)\nfor details."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4514,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4514"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1323,
					"name": "trimWhitespace",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, trims leading and trailing whitespace from both the value and target before comparing."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4519,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4519"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1324,
						1327,
						1325,
						1326,
						1322,
						1323
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4507,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4507"
				}
			]
		},
		{
			"id": 1732,
			"name": "GetDragDataParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the input parameters for the function\n  that provides data during a drag operation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1733,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6210,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6210"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1735,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GetDragDataParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1734,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6215,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6215"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1735,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GetDragDataParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1733,
						1734
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6206,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6206"
				}
			],
			"typeParameters": [
				{
					"id": 1735,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 185,
			"name": "Grid",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The grid object encapsulates the full LyteNyte Grid instance, including its state, view, and imperative API.\n  It is returned by the "
					},
					{
						"kind": "code",
						"text": "`useLyteNyte`"
					},
					{
						"kind": "text",
						"text": " hook and serves as the primary interface for interacting with the grid programmatically."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid State"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 188,
					"name": "api",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The imperative API of LyteNyte Grid for triggering actions such\n      as column resizing, row expansion, and selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 878,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L878"
						}
					],
					"type": {
						"type": "reference",
						"target": 992,
						"typeArguments": [
							{
								"type": "reference",
								"target": 189,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Grid.T",
								"refersToTypeParameter": true
							}
						],
						"name": "GridApi",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 186,
					"name": "state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The declarative state of LyteNyte Grid. This contains all core\n      and optional features represented as atoms."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 866,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L866"
						}
					],
					"type": {
						"type": "reference",
						"target": 71,
						"typeArguments": [
							{
								"type": "reference",
								"target": 189,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "Grid.T",
								"refersToTypeParameter": true
							}
						],
						"name": "GridState",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 187,
					"name": "view",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current layout view of the grid, reflecting visible headers and rows\n      based on virtualization and scroll position."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 872,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L872"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "reference",
								"target": 190,
								"typeArguments": [
									{
										"type": "reference",
										"target": 189,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "Grid.T",
										"refersToTypeParameter": true
									}
								],
								"name": "GridView",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						188,
						186,
						187
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 861,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L861"
				}
			],
			"typeParameters": [
				{
					"id": 189,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 992,
			"name": "GridApi",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The LyteNyte Grid API provides a comprehensive set of methods that allow developers\n  to programmatically query, update, and manipulate grid state and data."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid API"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1148,
					"name": "cellRoot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the root cell for the provided row and column index. This may be:\n\n- A cell that is not covered by the row or column span of another cell, in this case the root cell\n  is the cell itself\n- A cell that is covered by the row or column span of another cell, in this case the root cell is the\n  spanning cell\n- A full width row, in this case the root cell is the row itself. Note that full width rows cannot be\n  spanned over, so it is not possible for a spanning cell to continue past a full width row, even if the\n  span amount would allow it"
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3634,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3634"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1149,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3634,
									"character": 21,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3634"
								}
							],
							"signatures": [
								{
									"id": 1150,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3634,
											"character": 21,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3634"
										}
									],
									"parameters": [
										{
											"id": 1151,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1152,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1646,
												"name": "PositionGridCell",
												"package": "@1771technologies/lytenyte-pro"
											},
											{
												"type": "reference",
												"target": 1642,
												"name": "PositionFullWidthRow",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1158,
					"name": "columnAutosize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Automatically adjusts the widths of columns based on their content. Accepts optional parameters to control the behavior."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3651,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3651"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1159,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3651,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3651"
								}
							],
							"signatures": [
								{
									"id": 1160,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3651,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3651"
										}
									],
									"parameters": [
										{
											"id": 1161,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 976,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "ColumnAutosizeParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1136,
					"name": "columnById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the column with the specified id. If no matching column is found, returns "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3608,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3608"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1137,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3608,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3608"
								}
							],
							"signatures": [
								{
									"id": 1138,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3608,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3608"
										}
									],
									"parameters": [
										{
											"id": 1139,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 998,
					"name": "columnByIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the column at the specified visible index. If the index is out of bounds or\n  the column is hidden (due to visibility rules or collapsed groups), this will return null."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3422,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3422"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 999,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3422,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3422"
								}
							],
							"signatures": [
								{
									"id": 1000,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3422,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3422"
										}
									],
									"parameters": [
										{
											"id": 1001,
											"name": "columnIndex",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 993,
					"name": "columnField",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the calculated value for a specific column and row. Useful in cases where the column's\n  field is not a direct path, or when additional logic is involved in determining cell values.\n  It provides access to LyteNyte Grid's internal field evaluation pipeline."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3413,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3413"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 994,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3413,
									"character": 24,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3413"
								}
							],
							"signatures": [
								{
									"id": 995,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3413,
											"character": 24,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3413"
										}
									],
									"parameters": [
										{
											"id": 996,
											"name": "columnOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 355,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1197,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "GridApi.T",
																"refersToTypeParameter": true
															}
														],
														"name": "Column",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										},
										{
											"id": 997,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 926,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FieldDataParam",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					}
				},
				{
					"id": 1002,
					"name": "columnIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the index of a visible column based on its id or column object.\n  Returns -1 if the column is not currently visible (e.g., hidden or inside a collapsed group)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3428,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3428"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1003,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3428,
									"character": 24,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3428"
								}
							],
							"signatures": [
								{
									"id": 1004,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3428,
											"character": 24,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3428"
										}
									],
									"parameters": [
										{
											"id": 1005,
											"name": "columnOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 355,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1197,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "GridApi.T",
																"refersToTypeParameter": true
															}
														],
														"name": "Column",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 1144,
					"name": "columnMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Moves one or more columns before or after a specified target column.\n  This operation respects column group visibility and layout rules."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3621,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3621"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1145,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3621,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3621"
								}
							],
							"signatures": [
								{
									"id": 1146,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3621,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3621"
										}
									],
									"parameters": [
										{
											"id": 1147,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 981,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "ColumnMoveParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1132,
					"name": "columnResize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resizes one or more columns by providing an object where each key is a column id and the value is the new width in pixels."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3603,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3603"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1133,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3603,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3603"
								}
							],
							"signatures": [
								{
									"id": 1134,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3603,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3603"
										}
									],
									"parameters": [
										{
											"id": 1135,
											"name": "columns",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1153,
					"name": "columnToggleGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Toggles the expansion state of one or more column groups.\n  You can also pass a boolean to directly set the expansion state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3643,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3643"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1154,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3643,
									"character": 30,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3643"
								}
							],
							"signatures": [
								{
									"id": 1155,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3643,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3643"
										}
									],
									"parameters": [
										{
											"id": 1156,
											"name": "group",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 1157,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1140,
					"name": "columnUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applies updates to one or more columns. Each key in the object is a column id, and each value is the set of updates to apply."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3613,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3613"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1141,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3613,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3613"
								}
							],
							"signatures": [
								{
									"id": 1142,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3613,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3613"
										}
									],
									"parameters": [
										{
											"id": 1143,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 355,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1197,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "GridApi.T",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Column",
																"package": "@1771technologies/lytenyte-pro"
															},
															{
																"type": "literal",
																"value": "id"
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1179,
					"name": "dialogFrameClose",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Closes dialog frames. If an id is provided, only the dialog with that id is closed;\n      otherwise, all open dialogs will be closed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3691,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3691"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1180,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3691,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3691"
								}
							],
							"signatures": [
								{
									"id": 1181,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3691,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3691"
										}
									],
									"parameters": [
										{
											"id": 1182,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1174,
					"name": "dialogFrameOpen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Opens a dialog frame by its id. You may optionally provide a context object\n      that will be passed into the dialog's renderer for dynamic configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3685,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3685"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1175,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3685,
									"character": 28,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3685"
								}
							],
							"signatures": [
								{
									"id": 1176,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3685,
											"character": 28,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3685"
										}
									],
									"parameters": [
										{
											"id": 1177,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1178,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1072,
					"name": "editBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Starts cell editing at a specified location. If the grid is set to read-only mode, this method has no effect."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3515,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3515"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1073,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3515,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3515"
								}
							],
							"signatures": [
								{
									"id": 1074,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3515,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3515"
										}
									],
									"parameters": [
										{
											"id": 1075,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1543,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "EditBeginParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1076,
					"name": "editEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Ends the currently active cell edit. If there is no active edit session, the method does nothing.\nCan optionally cancel the edit if "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " is passed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3521,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3521"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1077,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3521,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3521"
								}
							],
							"signatures": [
								{
									"id": 1078,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3521,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3521"
										}
									],
									"parameters": [
										{
											"id": 1079,
											"name": "cancel",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1080,
					"name": "editIsCellActive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if the provided cell is currently being edited. Useful for conditionally rendering custom cell UI."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3526,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3526"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1081,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3526,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3526"
								}
							],
							"signatures": [
								{
									"id": 1082,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3526,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3526"
										}
									],
									"parameters": [
										{
											"id": 1083,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1543,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "EditBeginParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1084,
					"name": "editUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applies an edit to the specified cell programmatically. This directly updates the data without going through the UI."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3531,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3531"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1085,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3531,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3531"
								}
							],
							"signatures": [
								{
									"id": 1086,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3531,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3531"
										}
									],
									"parameters": [
										{
											"id": 1087,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1593,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "EditUpdateParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1038,
					"name": "eventAddListener",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adds an event listener to the grid for a specified event.\n  Returns a function that can be called to remove the listener."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3478,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3478"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3478,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3478"
								}
							],
							"signatures": [
								{
									"id": 1040,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3478,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3478"
										}
									],
									"typeParameters": [
										{
											"id": 1041,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": 1393,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1197,
															"name": "T",
															"package": "@1771technologies/lytenyte-pro",
															"qualifiedName": "GridApi.T",
															"refersToTypeParameter": true
														}
													],
													"name": "GridEvents",
													"package": "@1771technologies/lytenyte-pro"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1042,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1041,
												"name": "K",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1043,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1044,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 3480,
															"character": 8,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3480"
														}
													],
													"signatures": [
														{
															"id": 1045,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 3480,
																	"character": 8,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3480"
																}
															],
															"parameters": [
																{
																	"id": 1046,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": 0
																		},
																		"objectType": {
																			"type": "reference",
																			"target": {
																				"packageName": "typescript",
																				"packagePath": "lib/lib.es5.d.ts",
																				"qualifiedName": "Parameters"
																			},
																			"typeArguments": [
																				{
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"target": 1041,
																						"name": "K",
																						"package": "@1771technologies/lytenyte-pro",
																						"refersToTypeParameter": true
																					},
																					"objectType": {
																						"type": "reference",
																						"target": {
																							"packageName": "typescript",
																							"packagePath": "lib/lib.es5.d.ts",
																							"qualifiedName": "Required"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 1393,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 1197,
																										"name": "T",
																										"package": "@1771technologies/lytenyte-pro",
																										"qualifiedName": "GridApi.T",
																										"refersToTypeParameter": true
																									}
																								],
																								"name": "GridEvents",
																								"package": "@1771technologies/lytenyte-pro"
																							}
																						],
																						"name": "Required",
																						"package": "typescript"
																					}
																				}
																			],
																			"name": "Parameters",
																			"package": "typescript"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1047,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 3481,
													"character": 7,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3481"
												}
											],
											"signatures": [
												{
													"id": 1048,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 3481,
															"character": 7,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3481"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1058,
					"name": "eventFire",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Manually dispatches a grid event with a given payload. This is intended for advanced usage\n  where custom behavior or testing scenarios require simulating native event lifecycles."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3495,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3495"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1059,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3495,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3495"
								}
							],
							"signatures": [
								{
									"id": 1060,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3495,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3495"
										}
									],
									"typeParameters": [
										{
											"id": 1061,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": 1393,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1197,
															"name": "T",
															"package": "@1771technologies/lytenyte-pro",
															"qualifiedName": "GridApi.T",
															"refersToTypeParameter": true
														}
													],
													"name": "GridEvents",
													"package": "@1771technologies/lytenyte-pro"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1062,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1061,
												"name": "K",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1063,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": 0
												},
												"objectType": {
													"type": "reference",
													"target": {
														"packageName": "typescript",
														"packagePath": "lib/lib.es5.d.ts",
														"qualifiedName": "Parameters"
													},
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": 1061,
																"name": "K",
																"package": "@1771technologies/lytenyte-pro",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Required"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1393,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 1197,
																				"name": "T",
																				"package": "@1771technologies/lytenyte-pro",
																				"qualifiedName": "GridApi.T",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "GridEvents",
																		"package": "@1771technologies/lytenyte-pro"
																	}
																],
																"name": "Required",
																"package": "typescript"
															}
														}
													],
													"name": "Parameters",
													"package": "typescript"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1049,
					"name": "eventRemoveListener",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes a registered event listener. The exact event and handler function must be provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3486,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3486"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1050,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3486,
									"character": 32,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3486"
								}
							],
							"signatures": [
								{
									"id": 1051,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3486,
											"character": 32,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3486"
										}
									],
									"typeParameters": [
										{
											"id": 1052,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": 1393,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1197,
															"name": "T",
															"package": "@1771technologies/lytenyte-pro",
															"qualifiedName": "GridApi.T",
															"refersToTypeParameter": true
														}
													],
													"name": "GridEvents",
													"package": "@1771technologies/lytenyte-pro"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 1053,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1052,
												"name": "K",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 1054,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1055,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 3488,
															"character": 8,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3488"
														}
													],
													"signatures": [
														{
															"id": 1056,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 3488,
																	"character": 8,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3488"
																}
															],
															"parameters": [
																{
																	"id": 1057,
																	"name": "event",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": 0
																		},
																		"objectType": {
																			"type": "reference",
																			"target": {
																				"packageName": "typescript",
																				"packagePath": "lib/lib.es5.d.ts",
																				"qualifiedName": "Parameters"
																			},
																			"typeArguments": [
																				{
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"target": 1052,
																						"name": "K",
																						"package": "@1771technologies/lytenyte-pro",
																						"refersToTypeParameter": true
																					},
																					"objectType": {
																						"type": "reference",
																						"target": {
																							"packageName": "typescript",
																							"packagePath": "lib/lib.es5.d.ts",
																							"qualifiedName": "Required"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 1393,
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 1197,
																										"name": "T",
																										"package": "@1771technologies/lytenyte-pro",
																										"qualifiedName": "GridApi.T",
																										"refersToTypeParameter": true
																									}
																								],
																								"name": "GridEvents",
																								"package": "@1771technologies/lytenyte-pro"
																							}
																						],
																						"name": "Required",
																						"package": "typescript"
																					}
																				}
																			],
																			"name": "Parameters",
																			"package": "typescript"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1166,
					"name": "exportCsv",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exports the cell data for a given rectangle of the grid as a CSV-formatted string.\n  The rectangle can be customized through parameters such as selected rows, columns, or cell ranges."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3671,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3671"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1167,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3671,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3671"
								}
							],
							"signatures": [
								{
									"id": 1168,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3671,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3671"
										}
									],
									"parameters": [
										{
											"id": 1169,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1748,
												"name": "ExportCsvParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1170,
					"name": "exportCsvFile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generates a downloadable CSV "
							},
							{
								"kind": "code",
								"text": "`Blob`"
							},
							{
								"kind": "text",
								"text": " from the selected rectangular area of grid cell data.\n  Can be used to trigger a file download in the browser."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3679,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3679"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1171,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3679,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3679"
								}
							],
							"signatures": [
								{
									"id": 1172,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3679,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3679"
										}
									],
									"parameters": [
										{
											"id": 1173,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1748,
												"name": "ExportCsvParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "Blob"
												},
												"name": "Blob",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1162,
					"name": "exportDataRect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the raw cell data within a rectangular selection of the grid.\n  This can be useful for custom data processing or exporting workflows."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid API"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3661,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3661"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1163,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3661,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3661"
								}
							],
							"signatures": [
								{
									"id": 1164,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3661,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3661"
										}
									],
									"parameters": [
										{
											"id": 1165,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1759,
												"name": "ExportDataRectParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1762,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportDataRectResult",
												"package": "@1771technologies/lytenyte-pro"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1068,
					"name": "focusCell",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets focus to a specific cell or navigates the focus based on a direction keyword.\nUseful for keyboard-driven navigation and programmatic focus management."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3510,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3510"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1069,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3510,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3510"
								}
							],
							"signatures": [
								{
									"id": 1070,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3510,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3510"
										}
									],
									"parameters": [
										{
											"id": 1071,
											"name": "position",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 987,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FocusCellParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1189,
					"name": "popoverFrameClose",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Closes popover frames. If an id is provided, only the corresponding frame is closed;\n      otherwise, all popover frames will be dismissed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3707,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3707"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1190,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3707,
									"character": 30,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3707"
								}
							],
							"signatures": [
								{
									"id": 1191,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3707,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3707"
										}
									],
									"parameters": [
										{
											"id": 1192,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1183,
					"name": "popoverFrameOpen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Opens a popover frame at the specified target element or virtual target.\n      An optional context can be passed into the popover renderer for configuration."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3697,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3697"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1184,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3697,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3697"
								}
							],
							"signatures": [
								{
									"id": 1185,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3697,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3697"
										}
									],
									"parameters": [
										{
											"id": 1186,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1187,
											"name": "target",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.dom.d.ts",
															"qualifiedName": "HTMLElement"
														},
														"name": "HTMLElement",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 1206,
														"name": "VirtualTarget",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										},
										{
											"id": 1188,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1193,
					"name": "positionFromElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the grid-relative position of the specified HTML element.\n      This can help determine if an element belongs to a specific grid cell,\n      header, or other region—useful for anchoring popovers or tooltips."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3714,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3714"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3714,
									"character": 32,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3714"
								}
							],
							"signatures": [
								{
									"id": 1195,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3714,
											"character": 32,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3714"
										}
									],
									"parameters": [
										{
											"id": 1196,
											"name": "el",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "HTMLElement"
												},
												"name": "HTMLElement",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1665,
												"name": "PositionUnion",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1101,
					"name": "rowById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves a row by its unique id. Returns "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if the row doesn't exist or\nis not currently available in the data source."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3555,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3555"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1102,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3555,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3555"
								}
							],
							"signatures": [
								{
									"id": 1103,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3555,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3555"
										}
									],
									"parameters": [
										{
											"id": 1104,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1105,
					"name": "rowByIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves a row based on its index and optional section (body, pinned top, or pinned bottom).\nReturns "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if the index is out of range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3561,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3561"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1106,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3561,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3561"
								}
							],
							"signatures": [
								{
									"id": 1107,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3561,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3561"
										}
									],
									"parameters": [
										{
											"id": 1108,
											"name": "index",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1109,
											"name": "section",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 914,
												"name": "RowSection",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1088,
					"name": "rowDetailIsExpanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks whether the detail panel for the given row is currently expanded. Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3536,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3536"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1089,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3536,
									"character": 32,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3536"
								}
							],
							"signatures": [
								{
									"id": 1090,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3536,
											"character": 32,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3536"
										}
									],
									"parameters": [
										{
											"id": 1091,
											"name": "rowOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 911,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1197,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "GridApi.T",
																"refersToTypeParameter": true
															}
														],
														"name": "RowNode",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1097,
					"name": "rowDetailRenderedHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the rendered height of the row's detail section only. Does not include the standard row height."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3549,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3549"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1098,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3549,
									"character": 36,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3549"
								}
							],
							"signatures": [
								{
									"id": 1099,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3549,
											"character": 36,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3549"
										}
									],
									"parameters": [
										{
											"id": 1100,
											"name": "rowOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 911,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1197,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "GridApi.T",
																"refersToTypeParameter": true
															}
														],
														"name": "RowNode",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 1092,
					"name": "rowDetailToggle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Toggles the detail expansion for the specified row. Optionally provide a boolean to explicitly set the expansion state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3541,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3541"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1093,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3541,
									"character": 28,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3541"
								}
							],
							"signatures": [
								{
									"id": 1094,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3541,
											"character": 28,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3541"
										}
									],
									"parameters": [
										{
											"id": 1095,
											"name": "rowOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 911,
														"typeArguments": [
															{
																"type": "reference",
																"target": 1197,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "GridApi.T",
																"refersToTypeParameter": true
															}
														],
														"name": "RowNode",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										},
										{
											"id": 1096,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1030,
					"name": "rowGroupApplyExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applies multiple group row expansion states using a mapping of row ids to expansion booleans.\n  Useful when restoring or syncing expansion state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3465,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3465"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1031,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3465,
									"character": 36,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3465"
								}
							],
							"signatures": [
								{
									"id": 1032,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3465,
											"character": 36,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3465"
										}
									],
									"parameters": [
										{
											"id": 1033,
											"name": "expansions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1021,
					"name": "rowGroupColumnIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the group index associated with a group column. Useful in header or cell renderers\n  dealing with auto-generated group columns in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3453,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3453"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1022,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3453,
									"character": 32,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3453"
								}
							],
							"signatures": [
								{
									"id": 1023,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3453,
											"character": 32,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3453"
										}
									],
									"parameters": [
										{
											"id": 1024,
											"name": "c",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 1034,
					"name": "rowGroupIsExpanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a boolean indicating if the specified group row is currently expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3472,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3472"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1035,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3472,
									"character": 31,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3472"
								}
							],
							"signatures": [
								{
									"id": 1036,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3472,
											"character": 31,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3472"
										}
									],
									"parameters": [
										{
											"id": 1037,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 892,
												"name": "RowGroup",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1025,
					"name": "rowGroupToggle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Toggles the expansion state of a group row. Optionally accepts a boolean state to set\n  expansion explicitly. This method triggers the row group expansion lifecycle."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3459,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3459"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1026,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3459,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3459"
								}
							],
							"signatures": [
								{
									"id": 1027,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3459,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3459"
										}
									],
									"parameters": [
										{
											"id": 1028,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 892,
												"name": "RowGroup",
												"package": "@1771technologies/lytenyte-pro"
											}
										},
										{
											"id": 1029,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1121,
					"name": "rowHandleSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A method that may be used in DOM event handlers to trigger row selection logic.\n  Ideal for integrating checkbox-based or custom selection workflows. Also supports bulk row selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3588,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3588"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1122,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3588,
									"character": 28,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3588"
								}
							],
							"signatures": [
								{
									"id": 1123,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3588,
											"character": 28,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3588"
										}
									],
									"parameters": [
										{
											"id": 1124,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1198,
												"name": "RowHandleSelectParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1017,
					"name": "rowIsGroup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type guard that checks if a row node is a group. Helps distinguish between leaf and group rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3447,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3447"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1018,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3447,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3447"
								}
							],
							"signatures": [
								{
									"id": 1019,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3447,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3447"
										}
									],
									"parameters": [
										{
											"id": 1020,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "row",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 892,
											"name": "RowGroup",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1013,
					"name": "rowIsLeaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type guard that determines whether a row node is a leaf node (i.e., not a group).\n  Useful when working with union row types such as RowLeaf and RowGroup."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3442,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3442"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1014,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3442,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3442"
								}
							],
							"signatures": [
								{
									"id": 1015,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3442,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3442"
										}
									],
									"parameters": [
										{
											"id": 1016,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "row",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 904,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1197,
													"name": "T",
													"package": "@1771technologies/lytenyte-pro",
													"qualifiedName": "GridApi.T",
													"refersToTypeParameter": true
												}
											],
											"name": "RowLeaf",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1110,
					"name": "rowSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Selects a specific set of rows based on the provided "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RowSelectOptions",
								"target": 1679
							},
							{
								"kind": "text",
								"text": ".\nTriggers corresponding selection-related grid events."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3570,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3570"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1111,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3570,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3570"
								}
							],
							"signatures": [
								{
									"id": 1112,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3570,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3570"
										}
									],
									"parameters": [
										{
											"id": 1113,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1679,
												"name": "RowSelectOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1114,
					"name": "rowSelectAll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Selects all rows in the current grid view. Accepts "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RowSelectAllOptions",
								"target": 1677
							},
							{
								"kind": "text",
								"text": " for fine-grained control.\nTriggers selection-related events."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3576,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3576"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1115,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3576,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3576"
								}
							],
							"signatures": [
								{
									"id": 1116,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3576,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3576"
										}
									],
									"parameters": [
										{
											"id": 1117,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1677,
												"name": "RowSelectAllOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1118,
					"name": "rowSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the list of currently selected row nodes.\nNote that some returned rows may not be part of the visible grid, depending on the data state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3582,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3582"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1119,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3582,
									"character": 24,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3582"
								}
							],
							"signatures": [
								{
									"id": 1120,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3582,
											"character": 24,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3582"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 911,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1197,
													"name": "T",
													"package": "@1771technologies/lytenyte-pro",
													"qualifiedName": "GridApi.T",
													"refersToTypeParameter": true
												}
											],
											"name": "RowNode",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 1064,
					"name": "scrollIntoView",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Ensures the specified row and/or column is scrolled into view.\nAccepts a configuration object that controls the scroll behavior."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3504,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3504"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1065,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3504,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3504"
								}
							],
							"signatures": [
								{
									"id": 1066,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3504,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3504"
										}
									],
									"parameters": [
										{
											"id": 1067,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1201,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "ScrollIntoViewOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1006,
					"name": "sortForColumn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the current sort object and its index from the sort model for a given column.\n  If no sort applies to the column, returns null."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3434,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3434"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1007,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3434,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3434"
								}
							],
							"signatures": [
								{
									"id": 1008,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3434,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3434"
										}
									],
									"parameters": [
										{
											"id": 1009,
											"name": "columnOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1010,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1012,
															"name": "index",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 3436,
																	"character": 33,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3436"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1011,
															"name": "sort",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 3436,
																	"character": 9,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3436"
																}
															],
															"type": {
																"type": "reference",
																"target": 1241,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1197,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "GridApi.T",
																		"refersToTypeParameter": true
																	}
																],
																"name": "SortModelItem",
																"package": "@1771technologies/lytenyte-pro"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1012,
																1011
															]
														}
													],
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 3436,
															"character": 7,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3436"
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 1125,
					"name": "useRowDrag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A React hook that returns props and state for row dragging support.\n  These props can be attached to a drag handle in your component to initiate drag behavior.\n  This must follow React’s hook rules."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3595,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3595"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1126,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3595,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3595"
								}
							],
							"signatures": [
								{
									"id": 1127,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3595,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3595"
										}
									],
									"parameters": [
										{
											"id": 1128,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1736,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1197,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridApi.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UseRowDragParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1129,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1130,
													"name": "dragProps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 3596,
															"character": 4,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3596"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1131,
													"name": "isDragging",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 3597,
															"character": 4,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3597"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1130,
														1131
													]
												}
											],
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 3595,
													"character": 56,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3595"
												}
											]
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1148,
						1158,
						1136,
						998,
						993,
						1002,
						1144,
						1132,
						1153,
						1140,
						1179,
						1174,
						1072,
						1076,
						1080,
						1084,
						1038,
						1058,
						1049,
						1068,
						1189,
						1183,
						1193,
						1101,
						1105,
						1088,
						1097,
						1092,
						1030,
						1021,
						1034,
						1025,
						1121,
						1017,
						1013,
						1110,
						1114,
						1118,
						1064,
						1006,
						1125
					]
				},
				{
					"title": "Grid API",
					"children": [
						1166,
						1170,
						1162
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3407,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3407"
				}
			],
			"typeParameters": [
				{
					"id": 1197,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 823,
			"name": "GridAtom",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a mutable piece of reactive grid state. This atom allows reading,\n  updating, watching, and consuming its value reactively within React components."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid Atom"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 824,
					"name": "get",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the current value stored in the atom. This method provides read access\n  to the state managed by the atom."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2773,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2773"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 825,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2773,
									"character": 16,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2773"
								}
							],
							"signatures": [
								{
									"id": 826,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2773,
											"character": 16,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2773"
										}
									],
									"type": {
										"type": "reference",
										"target": 845,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridAtom.T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 827,
					"name": "set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Updates the atom's value. Accepts either a new value or a function that receives\n  the current value and returns the updated value."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2781,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2781"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 828,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2781,
									"character": 16,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2781"
								}
							],
							"signatures": [
								{
									"id": 829,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2781,
											"character": 16,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2781"
										}
									],
									"parameters": [
										{
											"id": 830,
											"name": "v",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 845,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridAtom.T",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 831,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2781,
																	"character": 25,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2781"
																}
															],
															"signatures": [
																{
																	"id": 832,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "+types.ts",
																			"line": 2781,
																			"character": 25,
																			"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2781"
																		}
																	],
																	"parameters": [
																		{
																			"id": 833,
																			"name": "p",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 845,
																				"name": "T",
																				"package": "@1771technologies/lytenyte-pro",
																				"qualifiedName": "GridAtom.T",
																				"refersToTypeParameter": true
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 845,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "GridAtom.T",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 842,
					"name": "useValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A React hook that subscribes to the atom's value and causes the component to re-render\n  whenever the atom changes."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2797,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2797"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 843,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2797,
									"character": 21,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2797"
								}
							],
							"signatures": [
								{
									"id": 844,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2797,
											"character": 21,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2797"
										}
									],
									"type": {
										"type": "reference",
										"target": 845,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridAtom.T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 834,
					"name": "watch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Registers a listener function to be invoked whenever the atom's value changes.\n  Returns a cleanup function to remove the listener."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2789,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 835,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2789,
									"character": 18,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
								}
							],
							"signatures": [
								{
									"id": 836,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2789,
											"character": 18,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
										}
									],
									"parameters": [
										{
											"id": 837,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 838,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2789,
															"character": 23,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
														}
													],
													"signatures": [
														{
															"id": 839,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2789,
																	"character": 23,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 840,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 2789,
													"character": 38,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
												}
											],
											"signatures": [
												{
													"id": 841,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2789,
															"character": 38,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2789"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Grid Atom",
					"children": [
						824,
						827,
						842,
						834
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2766,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2766"
				}
			],
			"typeParameters": [
				{
					"id": 845,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 846,
			"name": "GridAtomReadonly",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an immutable version of a grid atom that supports read, watch, and reactive\n  usage but does not allow updates."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid Atom"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 847,
					"name": "get",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the current value stored in the atom. This method provides read access\n  to the state managed by the atom."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2813,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2813"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 848,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2813,
									"character": 16,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2813"
								}
							],
							"signatures": [
								{
									"id": 849,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2813,
											"character": 16,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2813"
										}
									],
									"type": {
										"type": "reference",
										"target": 861,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridAtomReadonly.T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 858,
					"name": "useValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A React hook that subscribes to the atom's value and causes the component to re-render\n  whenever the atom changes."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2829,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2829"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 859,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2829,
									"character": 21,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2829"
								}
							],
							"signatures": [
								{
									"id": 860,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2829,
											"character": 21,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2829"
										}
									],
									"type": {
										"type": "reference",
										"target": 861,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridAtomReadonly.T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 850,
					"name": "watch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Registers a listener function to be invoked whenever the atom's value changes.\n  Returns a cleanup function to remove the listener."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2821,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 851,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2821,
									"character": 18,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
								}
							],
							"signatures": [
								{
									"id": 852,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2821,
											"character": 18,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
										}
									],
									"parameters": [
										{
											"id": 853,
											"name": "fn",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 854,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2821,
															"character": 23,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
														}
													],
													"signatures": [
														{
															"id": 855,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2821,
																	"character": 23,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 856,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 2821,
													"character": 38,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
												}
											],
											"signatures": [
												{
													"id": 857,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2821,
															"character": 38,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2821"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Grid Atom",
					"children": [
						847,
						858,
						850
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2806,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2806"
				}
			],
			"typeParameters": [
				{
					"id": 861,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 862,
			"name": "GridAtomReadonlyUnwatchable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the most minimal read-only version of a grid atom. It supports value\n  retrieval and reactive consumption, but not watching or updates."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid Atom"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 863,
					"name": "get",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the current value stored in the atom. This method provides read access\n  to the state managed by the atom."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2845,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2845"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 864,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2845,
									"character": 16,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2845"
								}
							],
							"signatures": [
								{
									"id": 865,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2845,
											"character": 16,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2845"
										}
									],
									"type": {
										"type": "reference",
										"target": 869,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridAtomReadonlyUnwatchable.T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 866,
					"name": "useValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A React hook that subscribes to the atom's value and causes the component to re-render\n  whenever the atom changes."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Grid Atom"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2853,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2853"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 867,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2853,
									"character": 21,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2853"
								}
							],
							"signatures": [
								{
									"id": 868,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2853,
											"character": 21,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2853"
										}
									],
									"type": {
										"type": "reference",
										"target": 869,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridAtomReadonlyUnwatchable.T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Grid Atom",
					"children": [
						863,
						866
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2838,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2838"
				}
			],
			"typeParameters": [
				{
					"id": 869,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1393,
			"name": "GridEvents",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A comprehensive map of all possible events that LyteNyte Grid may emit during its lifecycle."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1409,
					"name": "columnMoveBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a column move operation begins, not necessarily via drag."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4895,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4895"
						}
					],
					"type": {
						"type": "reference",
						"target": 1346,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnMoveBeginFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1407,
					"name": "columnMoveDragBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a column drag move operation begins."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4885,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4885"
						}
					],
					"type": {
						"type": "reference",
						"target": 1346,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnMoveBeginFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1408,
					"name": "columnMoveDragEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a column drag move operation finishes."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4890,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4890"
						}
					],
					"type": {
						"type": "reference",
						"target": 1361,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnMoveEndFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1410,
					"name": "columnMoveEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a column move operation completes."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4900,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4900"
						}
					],
					"type": {
						"type": "reference",
						"target": 1361,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnMoveEndFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1397,
					"name": "editBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a cell begins editing. Provides an opportunity to cancel the edit action."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4835,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4835"
						}
					],
					"type": {
						"type": "reference",
						"target": 1373,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditBegin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1399,
					"name": "editCancel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when cell editing is canceled, typically via keyboard action like Escape."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4845,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4845"
						}
					],
					"type": {
						"type": "reference",
						"target": 1378,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditCancel",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1398,
					"name": "editEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a cell edit is successfully completed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4840,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4840"
						}
					],
					"type": {
						"type": "reference",
						"target": 1383,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditEnd",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1400,
					"name": "editError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired if an error occurs during cell editing, such as validation failure or exception."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4850,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4850"
						}
					],
					"type": {
						"type": "reference",
						"target": 1388,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditError",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1401,
					"name": "rowDetailExpansionBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a row detail expansion is about to begin. Can be canceled."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4855,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4855"
						}
					],
					"type": {
						"type": "reference",
						"target": 1412,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowDetailExpansionBegin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1402,
					"name": "rowDetailExpansionEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a row detail expansion has successfully completed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4860,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4860"
						}
					],
					"type": {
						"type": "reference",
						"target": 1424,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowDetailExpansionEnd",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1395,
					"name": "rowExpand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired once a row group expansion has successfully completed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4825,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4825"
						}
					],
					"type": {
						"type": "reference",
						"target": 1433,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowExpandFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1394,
					"name": "rowExpandBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a row group expansion is about to begin. This allows canceling the expansion via preventDefault."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4820,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4820"
						}
					],
					"type": {
						"type": "reference",
						"target": 1438,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowExpandBeginFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1396,
					"name": "rowExpandError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired if an error occurs during the row group expansion process."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4830,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4830"
						}
					],
					"type": {
						"type": "reference",
						"target": 1453,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowExpandErrorFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1405,
					"name": "rowSelectAllBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired at the start of a \"select all rows\" operation. Can be canceled."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4875,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4875"
						}
					],
					"type": {
						"type": "reference",
						"target": 1473,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowSelectAllBegin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1406,
					"name": "rowSelectAllEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when a \"select all rows\" operation completes."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4880,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4880"
						}
					],
					"type": {
						"type": "reference",
						"target": 1485,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowSelectAllEnd",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1403,
					"name": "rowSelectBegin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when row selection starts. Allows preventing the selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4865,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4865"
						}
					],
					"type": {
						"type": "reference",
						"target": 1494,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowSelectBegin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1404,
					"name": "rowSelectEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event fired when row selection has completed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4870,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4870"
						}
					],
					"type": {
						"type": "reference",
						"target": 1507,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1411,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridEvents.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowSelectEnd",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1409,
						1407,
						1408,
						1410,
						1397,
						1399,
						1398,
						1400,
						1401,
						1402,
						1395,
						1394,
						1396,
						1405,
						1406,
						1403,
						1404
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4816,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4816"
				}
			],
			"typeParameters": [
				{
					"id": 1411,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 71,
			"name": "GridState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The declarative state object of LyteNyte Grid. This state encapsulates all mutable and observable\n  grid properties that affect layout, data, selection, and rendering. Updating any of these atoms will trigger\n  corresponding changes in the grid UI. These state values can also be used to create and synchronize external\n  components such as toolbars, panels, or widgets."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid State"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 112,
					"name": "aggModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The aggregation model configuration for the grid. Each entry maps a column id to its associated\n  aggregation function. Aggregation results are typically displayed in group or summary rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 528,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L528"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 113,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 528,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L528"
										}
									],
									"indexSignatures": [
										{
											"id": 114,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 528,
													"character": 32,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L528"
												}
											],
											"parameters": [
												{
													"id": 115,
													"name": "columnId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 116,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 117,
															"name": "fn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 528,
																	"character": 54,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L528"
																}
															],
															"type": {
																"type": "reference",
																"target": 1335,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 169,
																		"name": "T",
																		"package": "@1771technologies/lytenyte-pro",
																		"qualifiedName": "GridState.T",
																		"refersToTypeParameter": true
																	}
																],
																"name": "AggModelFn",
																"package": "@1771technologies/lytenyte-pro"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																117
															]
														}
													],
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 528,
															"character": 52,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L528"
														}
													]
												}
											}
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 108,
					"name": "cellRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A registry of named cell renderer functions. These can be referenced by name in\n  individual column definitions to customize cell rendering behavior."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 506,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L506"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 961,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "CellRendererFn",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 168,
					"name": "cellSelectionMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the grid's current cell selection mode. This determines how users may interact with\n  and select individual or grouped cells."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 774,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L774"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1814,
								"name": "CellSelectionMode",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 167,
					"name": "cellSelections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of cell selections currently active in the grid. Each selection is a rectangular\n  range of selected cells, useful for bulk editing, clipboard actions, or analytics."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 768,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L768"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1743,
									"name": "DataRect",
									"package": "@1771technologies/lytenyte-pro"
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 101,
					"name": "colOverscanEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the number of extra columns to render after the last visible column. Helps with\n  smoother horizontal scrolling to the right."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 486,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L486"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 100,
					"name": "colOverscanStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the number of extra columns to render before the first visible column. Helps with\n  smoother horizontal scrolling to the left."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 480,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L480"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 97,
					"name": "colScanDistance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls how many columns back the grid should look when computing layout for column-spanning\n  cells. Larger values allow broader spans but can reduce rendering efficiency."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 462,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L462"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 74,
					"name": "columnBase",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A base column configuration object used as a fallback for individual columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 337,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L337"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 319,
								"typeArguments": [
									{
										"type": "reference",
										"target": 169,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridState.T",
										"refersToTypeParameter": true
									}
								],
								"name": "ColumnBase",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 139,
					"name": "columnDoubleClickToAutosize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, double-clicking on a column's resize handle will trigger an autosize\n  for that column based on its content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 632,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L632"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 75,
					"name": "columnGroupDefaultExpansion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default expansion state for column groups when no specific state has been set."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 342,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L342"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 76,
					"name": "columnGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map of column group ids to their expansion state. This controls whether individual groups\n  are expanded or collapsed. Direct mutation bypasses grid events."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 348,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L348"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 77,
					"name": "columnGroupJoinDelimiter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The delimiter string used to construct hierarchical column group ids by joining nested keys."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 353,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L353"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 78,
					"name": "columnGroupMeta",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Computed metadata about the column group structure in the grid. This is used internally for\n  layout and interaction logic involving grouped headers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 359,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L359"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "reference",
								"target": 406,
								"name": "ColumnGroupMeta",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 137,
					"name": "columnMarker",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configuration object for the marker column, which is often used to indicate row-specific states\n  like expansion or editing."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 621,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L621"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 336,
								"typeArguments": [
									{
										"type": "reference",
										"target": 169,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridState.T",
										"refersToTypeParameter": true
									}
								],
								"name": "ColumnMarker",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 138,
					"name": "columnMarkerEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enables or disables the marker column in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 626,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L626"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 73,
					"name": "columnMeta",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Computed metadata for each column in the grid, including rendering metrics and positional\n  information. Useful for custom layout or advanced plugin behavior."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 332,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L332"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "reference",
								"target": 343,
								"typeArguments": [
									{
										"type": "reference",
										"target": 169,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridState.T",
										"refersToTypeParameter": true
									}
								],
								"name": "ColumnMeta",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 163,
					"name": "columnPivotColumnGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tracks the expansion state of column groups generated by pivot operations. Each key is\n  a group id, and the value indicates whether it's expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 743,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L743"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 158,
					"name": "columnPivotColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The generated columns from the current pivot model. These columns represent data values\n  derived from pivot operations. They may be updated, but changes may be overridden if the pivot model changes."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 729,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L729"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 355,
									"typeArguments": [
										{
											"type": "reference",
											"target": 169,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "GridState.T",
											"refersToTypeParameter": true
										}
									],
									"name": "Column",
									"package": "@1771technologies/lytenyte-pro"
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 157,
					"name": "columnPivotMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether column pivoting is enabled in the grid. When true, pivot columns will be\n  generated based on the active pivot model."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 723,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L723"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 156,
					"name": "columnPivotModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current column pivot model in use. This model defines how column pivoting is structured\n  in the grid and which columns are used to generate pivot dimensions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 717,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L717"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1771,
								"typeArguments": [
									{
										"type": "reference",
										"target": 169,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridState.T",
										"refersToTypeParameter": true
									}
								],
								"name": "ColumnPivotModel",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 159,
					"name": "columnPivotRowGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tracks the expansion state of row groups generated by the current pivot model. Each key is\n  a row group id, and the value determines its expansion state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 735,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L735"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 160,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 735,
											"character": 51,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L735"
										}
									],
									"indexSignatures": [
										{
											"id": 161,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 736,
													"character": 4,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L736"
												}
											],
											"parameters": [
												{
													"id": 162,
													"name": "rowId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 72,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "All column definitions registered in the grid, including both visible and hidden columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 326,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L326"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 355,
									"typeArguments": [
										{
											"type": "reference",
											"target": 169,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "GridState.T",
											"refersToTypeParameter": true
										}
									],
									"name": "Column",
									"package": "@1771technologies/lytenyte-pro"
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 79,
					"name": "columnSizeToFit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether columns should automatically resize to fit the available width of the grid viewport."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 364,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L364"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 165,
					"name": "dialogFrames",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A dictionary of dialog frames currently managed by the grid. These frames can be programmatically\n  opened or closed using the "
							},
							{
								"kind": "code",
								"text": "`dialogFrameOpen`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`dialogFrameClose`"
							},
							{
								"kind": "text",
								"text": " API methods."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 756,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L756"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1787,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "DialogFrame",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 136,
					"name": "editActivePosition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the current active edit position in the grid. If no edit is active, this is null."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 615,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L615"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 1539,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "EditActivePosition",
										"package": "@1771technologies/lytenyte-pro"
									}
								]
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 135,
					"name": "editCellMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines the cell edit mode for the grid. Modes include read-only and editable states."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 610,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L610"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1548,
								"name": "EditCellMode",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 134,
					"name": "editClickActivator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the mouse interaction pattern (e.g., single click, double click) required to\n  activate a cell edit."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 605,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L605"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1549,
								"name": "EditClickActivator",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 130,
					"name": "editRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map of named edit renderers. These renderers are used to customize the editing\n  experience for cells in editable columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 593,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L593"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1552,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "EditRendererFn",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 131,
					"name": "editRowValidatorFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function used to validate updates to a row during an edit. This validator can prevent\n  invalid edits before they are applied to the grid state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 599,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L599"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 132,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 133,
											"name": "fn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 599,
													"character": 42,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L599"
												}
											],
											"type": {
												"type": "reference",
												"target": 1569,
												"typeArguments": [
													{
														"type": "reference",
														"target": 169,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridState.T",
														"refersToTypeParameter": true
													}
												],
												"name": "EditRowValidatorFn",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												133
											]
										}
									],
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 599,
											"character": 40,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L599"
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 164,
					"name": "filterInModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The in (set) filter model to apply to LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 750,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L750"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1289,
										"name": "FilterIn",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 111,
					"name": "filterModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters currently applied to the grid. If empty, no filters are active."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 522,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L522"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1299,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "FilterModelItem",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 128,
					"name": "floatingCellRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map of named floating row cell renderers. These renderers can be assigned by name\n  in the floating row column configurations."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 577,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L577"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1526,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "HeaderFloatingCellRendererFn",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 126,
					"name": "floatingRowEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether the floating row is enabled in the grid. When enabled, the floating row\n  appears fixed below the column headers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 566,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L566"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 127,
					"name": "floatingRowHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the height, in pixels, of the floating row when enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 571,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L571"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 80,
					"name": "gridId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier associated with the grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 369,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L369"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 129,
					"name": "headerCellRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map of named header cell renderers. These can be referenced in column definitions to\n  customize how column headers are displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 585,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L585"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1517,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "HeaderCellRendererFn",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 91,
					"name": "headerGroupHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The vertical height (in pixels) allocated for grouped header rows, if present."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 426,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L426"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 90,
					"name": "headerHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The vertical height (in pixels) allocated for the header row of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 421,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L421"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 84,
					"name": "heightTotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total height (in pixels) of all rows currently present in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 391,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L391"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 166,
					"name": "popoverFrames",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A dictionary of popover frames currently managed by the grid. These can be dynamically shown\n  or hidden using the "
							},
							{
								"kind": "code",
								"text": "`popoverFrameOpen`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`popoverFrameClose`"
							},
							{
								"kind": "text",
								"text": " API methods."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 762,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L762"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 1800,
										"typeArguments": [
											{
												"type": "reference",
												"target": 169,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "GridState.T",
												"refersToTypeParameter": true
											}
										],
										"name": "PopoverFrame",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 154,
					"name": "quickSearch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the current quick search input applied to the grid. When set, rows will be filtered\n  using this value. If null or an empty string, no quick search filtering will be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 705,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L705"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 155,
					"name": "quickSearchSensitivity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies whether the quick search is case-sensitive or insensitive. Controls how text is matched\n  during quick search filtering."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 711,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L711"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1311,
								"name": "FilterQuickSearchSensitivity",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 94,
					"name": "rowAutoHeightGuess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A fallback row height (in pixels) used before actual row heights are measured.\n  Especially useful when rendering rows with dynamic or unknown content heights."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 444,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L444"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 93,
					"name": "rowDataSource",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configured row data source for the grid. This defines how rows are fetched, paged, or\n  streamed into the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 438,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L438"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 629,
								"typeArguments": [
									{
										"type": "reference",
										"target": 169,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridState.T",
										"refersToTypeParameter": true
									}
								],
								"name": "RowDataSource",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 92,
					"name": "rowDataStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The backing store for row data within the grid. This is managed internally and should not be\n  mutated directly unless implementing a custom data source."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 432,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L432"
						}
					],
					"type": {
						"type": "reference",
						"target": 800,
						"typeArguments": [
							{
								"type": "reference",
								"target": 169,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridState.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowDataStore",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 144,
					"name": "rowDetailAutoHeightGuess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default estimated height for row detail sections before their actual height has\n  been measured."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 648,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L648"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 145,
					"name": "rowDetailExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the set of row ids with expanded row detail sections."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 653,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L653"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Set"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 143,
					"name": "rowDetailHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the height of the row detail section when expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 642,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L642"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1666,
								"name": "RowDetailHeight",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 140,
					"name": "rowDetailRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The function that renders additional row detail content when a row is expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 637,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L637"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 141,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 142,
											"name": "fn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 637,
													"character": 41,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L637"
												}
											],
											"type": {
												"type": "reference",
												"target": 1667,
												"typeArguments": [
													{
														"type": "reference",
														"target": 169,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridState.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowDetailRendererFn",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												142
											]
										}
									],
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 637,
											"character": 39,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L637"
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 102,
					"name": "rowFullWidthPredicate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A predicate function used to determine whether a given row should be rendered as a\n  full-width row. Full-width rows span across all columns and bypass standard cell layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 492,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L492"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 103,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 104,
											"name": "fn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 493,
													"character": 4,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L493"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 870,
														"typeArguments": [
															{
																"type": "reference",
																"target": 169,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "GridState.T",
																"refersToTypeParameter": true
															}
														],
														"name": "RowFullWidthPredicate",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												104
											]
										}
									],
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 492,
											"character": 43,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L492"
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 105,
					"name": "rowFullWidthRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The component function that renders full-width rows in the grid. This renderer is called\n  whenever a row matches the full-width predicate."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 500,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L500"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 106,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 107,
											"name": "fn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 500,
													"character": 44,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L500"
												}
											],
											"type": {
												"type": "reference",
												"target": 880,
												"typeArguments": [
													{
														"type": "reference",
														"target": 169,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "GridState.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowFullWidthRendererFn",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												107
											]
										}
									],
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 500,
											"character": 42,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L500"
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 119,
					"name": "rowGroupColumn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the template or configuration for the automatically generated row group column.\n  This controls its appearance and behavior."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 540,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L540"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "reference",
										"target": 169,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "GridState.T",
										"refersToTypeParameter": true
									}
								],
								"name": "RowGroupColumn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 121,
					"name": "rowGroupDefaultExpansion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the default expansion state of all row groups. If a number is provided, groups up to that\n  depth will be expanded by default."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 552,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L552"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 120,
					"name": "rowGroupDisplayMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies how automatically generated row group columns should be displayed in the grid.\n  This controls their visibility and layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 546,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L546"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1337,
								"name": "RowGroupDisplayMode",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 122,
					"name": "rowGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object mapping row group ids to their expansion state. Updating this directly will not trigger\n  grid events and should be done with care."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 558,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L558"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 123,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 558,
											"character": 40,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L558"
										}
									],
									"indexSignatures": [
										{
											"id": 124,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 559,
													"character": 4,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L559"
												}
											],
											"parameters": [
												{
													"id": 125,
													"name": "rowId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												]
											}
										}
									]
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 118,
					"name": "rowGroupModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array representing the fields or columns being used to group rows. An empty array\n  disables row grouping."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 534,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L534"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1344,
									"typeArguments": [
										{
											"type": "reference",
											"target": 169,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "GridState.T",
											"refersToTypeParameter": true
										}
									],
									"name": "RowGroupModelItem",
									"package": "@1771technologies/lytenyte-pro"
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 95,
					"name": "rowHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height configuration for rows in the grid. This may be a fixed number, a function, or a\n  configuration object."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 450,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L450"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 900,
								"name": "RowHeight",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 99,
					"name": "rowOverscanBottom",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the number of additional rows to render below the visible viewport. Increasing this\n  value can reduce flickering when scrolling downward, but may negatively impact rendering performance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 474,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L474"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 98,
					"name": "rowOverscanTop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the number of additional rows to render above the visible viewport. Increasing this\n  value can reduce visible loading artifacts when scrolling upward, at the cost of performance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 468,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L468"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 96,
					"name": "rowScanDistance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls how many rows back the grid should look when computing layout for row-spanning cells.\n  Higher values allow larger spans but impact performance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 456,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L456"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 150,
					"name": "rowSelectChildren",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, selecting a parent row will automatically select its child rows. Useful for hierarchical\n  or grouped data selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 681,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L681"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 146,
					"name": "rowSelectedIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A set of selected row ids in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 658,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L658"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Set"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set",
								"package": "typescript"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 149,
					"name": "rowSelectionActivator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the interaction pattern or input trigger that initiates row selection,\n  such as clicks or keyboard inputs."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 675,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L675"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1685,
								"name": "RowSelectionActivator",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 147,
					"name": "rowSelectionMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the selection mode of the grid, such as single or multiple row selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 663,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L663"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1686,
								"name": "RowSelectionMode",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 148,
					"name": "rowSelectionPivot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the anchor row used for shift-based range selections. Defines the selection\n  starting point."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 669,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L669"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 109,
					"name": "rtl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Boolean flag that determines whether the grid renders in right-to-left (RTL) mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 511,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L511"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 110,
					"name": "sortModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array representing the current sort state of the grid. Each entry defines\n  a column and its sort direction. An empty array means no active sorting."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 517,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L517"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1241,
									"typeArguments": [
										{
											"type": "reference",
											"target": 169,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "GridState.T",
											"refersToTypeParameter": true
										}
									],
									"name": "SortModelItem",
									"package": "@1771technologies/lytenyte-pro"
								}
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 151,
					"name": "viewBounds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current view bounds of the grid, representing the row and column segments\n  that should be rendered based on scroll position and viewport."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 687,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L687"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "reference",
								"target": 170,
								"name": "ViewBounds",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 85,
					"name": "viewport",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HTML element representing the viewport of the grid. May be null before initialization."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 396,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L396"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.dom.d.ts",
											"qualifiedName": "HTMLElement"
										},
										"name": "HTMLElement",
										"package": "typescript"
									}
								]
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 88,
					"name": "viewportHeightInner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The internal height of the viewport, typically matching the clientHeight of the viewport element."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 411,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L411"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 89,
					"name": "viewportHeightOuter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The outer height of the viewport, corresponding to its offsetHeight."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 416,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L416"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 86,
					"name": "viewportWidthInner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The internal width of the viewport, usually equal to the clientWidth of the viewport element."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 401,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L401"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 87,
					"name": "viewportWidthOuter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The outer width of the viewport, corresponding to its offsetWidth."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 406,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L406"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 152,
					"name": "virtualizeCols",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether columns should be virtualized. Improves performance for large column\n  sets by only rendering visible columns. Enabled by default."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 693,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L693"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 153,
					"name": "virtualizeRows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether rows should be virtualized. Improves performance for large datasets\n  by only rendering visible rows. Enabled by default."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 699,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L699"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 83,
					"name": "widthTotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total combined width (in pixels) of all visible columns in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 386,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L386"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 81,
					"name": "xPositions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The horizontal (x-axis) pixel positions of each visible column in the grid. Used to determine\n  where each column should render on screen."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 375,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L375"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Uint32Array"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "ArrayBufferLike"
										},
										"name": "ArrayBufferLike",
										"package": "typescript"
									}
								],
								"name": "Uint32Array",
								"package": "typescript"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 82,
					"name": "yPositions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The vertical (y-axis) pixel positions of rows in the grid. Determines how each row is positioned\n  within the scrollable area."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 381,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L381"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Uint32Array"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "ArrayBufferLike"
										},
										"name": "ArrayBufferLike",
										"package": "typescript"
									}
								],
								"name": "Uint32Array",
								"package": "typescript"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						112,
						108,
						168,
						167,
						101,
						100,
						97,
						74,
						139,
						75,
						76,
						77,
						78,
						137,
						138,
						73,
						163,
						158,
						157,
						156,
						159,
						72,
						79,
						165,
						136,
						135,
						134,
						130,
						131,
						164,
						111,
						128,
						126,
						127,
						80,
						129,
						91,
						90,
						84,
						166,
						154,
						155,
						94,
						93,
						92,
						144,
						145,
						143,
						140,
						102,
						105,
						119,
						121,
						120,
						122,
						118,
						95,
						99,
						98,
						96,
						150,
						146,
						149,
						147,
						148,
						109,
						110,
						151,
						85,
						88,
						89,
						86,
						87,
						152,
						153,
						83,
						81,
						82
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 322,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L322"
				}
			],
			"typeParameters": [
				{
					"id": 169,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 190,
			"name": "GridView",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the current visual layout of the grid including headers and rows.\n  This structure is used by LyteNyte Grid headless components\n  or for building custom visualizations."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 191,
					"name": "header",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Header layout structure currently being rendered in the viewport."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 892,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L892"
						}
					],
					"type": {
						"type": "reference",
						"target": 241,
						"typeArguments": [
							{
								"type": "reference",
								"target": 193,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridView.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderLayout",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 192,
					"name": "rows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Row layout sections (top, center, bottom) rendered in the viewport."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 897,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L897"
						}
					],
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 193,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "GridView.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowSectionLayouts",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						191,
						192
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 888,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L888"
				}
			],
			"typeParameters": [
				{
					"id": 193,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 208,
			"name": "HeaderCellFloating",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes a floating header cell layout, which remains fixed during scroll operations."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 213,
					"name": "colEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive ending column index in the visible layout this header covers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 996,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L996"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 216,
					"name": "colFirstEndPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the first column in the set of columns pinned to the end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1011,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1011"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 217,
					"name": "colLastStartPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the last column in the set of columns pinned to the start."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1016,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1016"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 215,
					"name": "colPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates which pin section this column belongs to: 'start', 'end', or 'center'."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1006,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1006"
						}
					],
					"type": {
						"type": "reference",
						"target": 350,
						"name": "ColumnPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 214,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns this header spans horizontally."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1001,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1001"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 212,
					"name": "colStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting column index in the visible layout this header covers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 991,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L991"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 220,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1031,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1031"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 221,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "HeaderCellFloating.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 218,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier that can be used for rendering keys or tracking elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1021,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1021"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 219,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A discriminator indicating this is a floating (sticky) header cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1026,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1026"
						}
					],
					"type": {
						"type": "literal",
						"value": "floating"
					}
				},
				{
					"id": 210,
					"name": "rowEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive ending row index in the header hierarchy for this cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 981,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L981"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 211,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of header rows this header spans vertically."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 986,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L986"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 209,
					"name": "rowStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting row index in the header hierarchy for this cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 976,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L976"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						213,
						216,
						217,
						215,
						214,
						212,
						220,
						218,
						219,
						210,
						211,
						209
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 972,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L972"
				}
			],
			"typeParameters": [
				{
					"id": 221,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 194,
			"name": "HeaderCellLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes a standard header cell layout in the grid, used to position and render individual column headers."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 199,
					"name": "colEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive ending column index in the visible layout this header covers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 929,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L929"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 202,
					"name": "colFirstEndPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the first column in the set of columns pinned to the end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 944,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L944"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 203,
					"name": "colLastStartPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the last column in the set of columns pinned to the start."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 949,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L949"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 201,
					"name": "colPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates which pin section this column belongs to: 'start', 'end', or 'center'."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 939,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L939"
						}
					],
					"type": {
						"type": "reference",
						"target": 350,
						"name": "ColumnPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 200,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns this header spans horizontally."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 934,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L934"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 198,
					"name": "colStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting column index in the visible layout this header covers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 924,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L924"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 206,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 964,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L964"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 207,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "HeaderCellLayout.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 204,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier that can be used for rendering keys or tracking elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 954,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L954"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 205,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A discriminator indicating this is a standard header cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 959,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L959"
						}
					],
					"type": {
						"type": "literal",
						"value": "cell"
					}
				},
				{
					"id": 196,
					"name": "rowEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive ending row index in the header hierarchy for this cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 914,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L914"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 197,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of header rows this header spans vertically."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 919,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L919"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 195,
					"name": "rowStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting row index in the header hierarchy for this cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 909,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L909"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						199,
						202,
						203,
						201,
						200,
						198,
						206,
						204,
						205,
						196,
						197,
						195
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 905,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L905"
				}
			],
			"typeParameters": [
				{
					"id": 207,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1522,
			"name": "HeaderCellRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the header cell renderer function. This\n  provides access to the grid and column for rendering context."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Header"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1524,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5234,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5234"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1525,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "HeaderCellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1523,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5229,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5229"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1525,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "HeaderCellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1524,
						1523
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5225,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5225"
				}
			],
			"typeParameters": [
				{
					"id": 1525,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1531,
			"name": "HeaderFloatingCellRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the floating cell renderer. Provides grid\n  and column context to determine what should be rendered."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Header"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1533,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5265,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5265"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1534,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "HeaderFloatingCellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1532,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5260,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5260"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1534,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "HeaderFloatingCellRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1533,
						1532
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5256,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5256"
				}
			],
			"typeParameters": [
				{
					"id": 1534,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 222,
			"name": "HeaderGroupCellLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes a group of columns within the header. Used by LyteNyte\n  Grid to render grouped column headers with optional collapsibility and structural metadata."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 227,
					"name": "colEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive ending column index in the visible layout this header covers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1064,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1064"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 230,
					"name": "colFirstEndPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the first column in the set of columns pinned to the end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1079,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1079"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 231,
					"name": "colLastStartPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the last column in the set of columns pinned to the start."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1084,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1084"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 229,
					"name": "colPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates which pin section this column belongs to: 'start', 'end', or 'center'."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1074,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1074"
						}
					],
					"type": {
						"type": "reference",
						"target": 350,
						"name": "ColumnPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 228,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns this header spans horizontally."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1069,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1069"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 226,
					"name": "colStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting column index in the visible layout this header covers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1059,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1059"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 237,
					"name": "columnIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column ids that are included within this header group."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1115,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1115"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 239,
					"name": "end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exclusive end index of the group in the column layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1125,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1125"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 236,
					"name": "groupPath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hierarchy path representing this column group's position and ancestry."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1110,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1110"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 234,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id for the header group. Note this is not unique across all header groups. In particular\n      split header groups with the same path will share the same id. Prefer "
							},
							{
								"kind": "code",
								"text": "`idOccurrence`"
							},
							{
								"kind": "text",
								"text": " for unique keys."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1100,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1100"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 235,
					"name": "idOccurrence",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique identifier that includes header split occurrence information."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1105,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 233,
					"name": "isCollapsible",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether this column group can be collapsed in the UI."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1094,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1094"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 240,
					"name": "isHiddenMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that this is a temporary placeholder group for drag-and-drop movement.\n      Should be ignored for typical rendering."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1131,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1131"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 232,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant indicating this layout item is a header group."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1089,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1089"
						}
					],
					"type": {
						"type": "literal",
						"value": "group"
					}
				},
				{
					"id": 224,
					"name": "rowEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive ending row index in the header hierarchy for this cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1049,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1049"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 225,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of header rows this header spans vertically."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1054,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1054"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 223,
					"name": "rowStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting row index in the header hierarchy for this cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1044,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1044"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 238,
					"name": "start",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Start index of the group in the column layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1120,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1120"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						227,
						230,
						231,
						229,
						228,
						226,
						237,
						239,
						236,
						234,
						235,
						233,
						240,
						232,
						224,
						225,
						223,
						238
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1040,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1040"
				}
			]
		},
		{
			"id": 241,
			"name": "HeaderLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the overall structure of header rows in the grid.\n  This layout is recalculated based on viewport changes and virtualized rendering."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 244,
					"name": "layout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Two-dimensional array of header layout cells organized by row hierarchy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1154,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1154"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 246,
								"typeArguments": [
									{
										"type": "reference",
										"target": 245,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "HeaderLayout.T",
										"refersToTypeParameter": true
									}
								],
								"name": "HeaderLayoutCell",
								"package": "@1771technologies/lytenyte-pro"
							}
						}
					}
				},
				{
					"id": 243,
					"name": "maxCol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Total number of columns involved in the header layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1149,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1149"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 242,
					"name": "maxRow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Total number of header rows rendered, including groups and nested headers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1144,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1144"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						244,
						243,
						242
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1140,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1140"
				}
			],
			"typeParameters": [
				{
					"id": 245,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1611,
			"name": "OnEditBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters dispatched with the "
					},
					{
						"kind": "code",
						"text": "`onEditBegin`"
					},
					{
						"kind": "text",
						"text": " event, triggered when editing starts."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1612,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5623,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5623"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1617,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "OnEditBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1614,
					"name": "preventDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call this method to cancel edit initiation. Editing will not start if called."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5633,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5633"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1615,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5633,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5633"
								}
							],
							"signatures": [
								{
									"id": 1616,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5633,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5633"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1613,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5628,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5628"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1612,
						1614,
						1613
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5619,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5619"
				}
			],
			"typeParameters": [
				{
					"id": 1617,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1618,
			"name": "OnEditCancelParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`onEditCancel`"
					},
					{
						"kind": "text",
						"text": " event, triggered when editing is aborted (e.g., Escape key)."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1619,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5645,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5645"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1622,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "OnEditCancelParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1621,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current value of the cell during an edit interaction."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5657,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5657"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1620,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5650,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5650"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1619,
						1620
					]
				},
				{
					"title": "Events",
					"children": [
						1621
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5641,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5641"
				}
			],
			"typeParameters": [
				{
					"id": 1622,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1623,
			"name": "OnEditEndParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`onEditEnd`"
					},
					{
						"kind": "text",
						"text": " event, triggered when editing successfully completes."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1624,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5669,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5669"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1627,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "OnEditEndParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1626,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current value of the cell during an edit interaction."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5681,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5681"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1625,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5674,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5674"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1624,
						1625
					]
				},
				{
					"title": "Events",
					"children": [
						1626
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5665,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5665"
				}
			],
			"typeParameters": [
				{
					"id": 1627,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1628,
			"name": "OnEditErrorParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`onEditError`"
					},
					{
						"kind": "text",
						"text": " event, triggered when validation or logic errors occur during editing."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1629,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5693,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5693"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1634,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "OnEditErrorParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1631,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current value of the cell during an edit interaction."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5705,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5705"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1633,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Any uncaught exception encountered while applying the edit."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5716,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5716"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 1630,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5698,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5698"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1632,
					"name": "validation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Outcome of the row validator.\nCan be "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " (invalid) or a record describing per-column issues."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5711,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5711"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1629,
						1633,
						1630,
						1632
					]
				},
				{
					"title": "Events",
					"children": [
						1631
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5689,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5689"
				}
			],
			"typeParameters": [
				{
					"id": 1634,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1800,
			"name": "PopoverFrame",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes a popover frame and the component renderer used to display it.\n\n  The popover frame is triggered by LyteNyte Grid interactions and used to display\n  contextual information, editors, or auxiliary UI near a cell or element."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1801,
					"name": "component",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Renderer function to generate the popover content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6568,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6568"
						}
					],
					"type": {
						"type": "reference",
						"target": 1803,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1802,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "PopoverFrame.T",
								"refersToTypeParameter": true
							}
						],
						"name": "PopoverFrameRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1801
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6564,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6564"
				}
			],
			"typeParameters": [
				{
					"id": 1802,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1808,
			"name": "PopoverFrameRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the popover frame renderer function.\n\n  Includes information about the grid, the target HTML element or virtual\n  target to anchor the popover, and the frame being rendered."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1810,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom context data passed to the frame being rendered.\n\n  This context is supplied programmatically at the point of invoking the frame.\n  It can contain any arbitrary information required for rendering behavior."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Frames"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6608,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6608"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1811,
					"name": "frame",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The popover frame definition that should be rendered."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6613,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6613"
						}
					],
					"type": {
						"type": "reference",
						"target": 1800,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1813,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "PopoverFrameRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "PopoverFrame",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1809,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6598,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6598"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1813,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "PopoverFrameRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1812,
					"name": "target",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target element or virtual position where the popover should be anchored."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6618,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6618"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 1206,
								"name": "VirtualTarget",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1811,
						1809,
						1812
					]
				},
				{
					"title": "Frames",
					"children": [
						1810
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6594,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6594"
				}
			],
			"typeParameters": [
				{
					"id": 1813,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1635,
			"name": "PositionDetailCell",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The position value type when the current focus position of the grid is within a detail cell."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1638,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5738,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5738"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1636,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant indicating this position refers to a detail cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5728,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5728"
						}
					],
					"type": {
						"type": "literal",
						"value": "detail"
					}
				},
				{
					"id": 1637,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5733,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5733"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1638,
						1636,
						1637
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5724,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5724"
				}
			]
		},
		{
			"id": 1639,
			"name": "PositionFloatingCell",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the focus position of a floating header cell."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1641,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5755,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5755"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1640,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for identifying this as a floating header cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5750,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5750"
						}
					],
					"type": {
						"type": "literal",
						"value": "floating-cell"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1641,
						1640
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5746,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5746"
				}
			]
		},
		{
			"id": 1642,
			"name": "PositionFullWidthRow",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the focus position when a full width row is active."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1645,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5777,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5777"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1643,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant indicating this position refers to a full width row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5767,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5767"
						}
					],
					"type": {
						"type": "literal",
						"value": "full-width"
					}
				},
				{
					"id": 1644,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5772,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5772"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1645,
						1643,
						1644
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5763,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5763"
				}
			]
		},
		{
			"id": 1646,
			"name": "PositionGridCell",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the current focus position of a regular cell in the grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1649,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5799,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5799"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1647,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for identifying this as a regular grid cell position."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5789,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5789"
						}
					],
					"type": {
						"type": "literal",
						"value": "cell"
					}
				},
				{
					"id": 1650,
					"name": "root",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reference to the root cell. If "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": ", this cell is not hidden by spanning and is its own root."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5804,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5804"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1651,
								"name": "PositionGridCellRoot",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 1648,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5794,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5794"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1649,
						1647,
						1650,
						1648
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5785,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5785"
				}
			]
		},
		{
			"id": 1651,
			"name": "PositionGridCellRoot",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The root reference of a grid cell. If a cell is obscured by a rowspan\n  or colspan, it points to the actual root cell containing the data."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1652,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5817,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5817"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1655,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns spanned by the root cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5832,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5832"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1653,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5822,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5822"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1654,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rows spanned by the root cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5827,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5827"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1652,
						1655,
						1653,
						1654
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5813,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5813"
				}
			]
		},
		{
			"id": 1656,
			"name": "PositionHeaderCell",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the focus position of a standard header cell."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1658,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5849,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5849"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1657,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for identifying this as a header cell position."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5844,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5844"
						}
					],
					"type": {
						"type": "literal",
						"value": "header-cell"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1658,
						1657
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5840,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5840"
				}
			]
		},
		{
			"id": 1659,
			"name": "PositionHeaderGroupCell",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the focus position of a header group cell in the column hierarchy."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1664,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5881,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5881"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1662,
					"name": "columnEndIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exclusive end index of the group column range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5871,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5871"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1661,
					"name": "columnStartIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inclusive start index of the group column range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5866,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5866"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1663,
					"name": "hierarchyRowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The header hierarchy row index of the group."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5876,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5876"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1660,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant indicating this is a header group cell."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5861,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5861"
						}
					],
					"type": {
						"type": "literal",
						"value": "header-group-cell"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1664,
						1662,
						1661,
						1663,
						1660
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5857,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5857"
				}
			]
		},
		{
			"id": 817,
			"name": "RdsRowSelectParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters passed to the row selection handler within the row data source."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 821,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the action should deselect the specified rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2752,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2752"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 819,
					"name": "endId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ending row id of the selection range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2742,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2742"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 822,
					"name": "mode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current selection mode applied to the row operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2757,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2757"
						}
					],
					"type": {
						"type": "reference",
						"target": 1686,
						"name": "RowSelectionMode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 820,
					"name": "selectChildren",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether to include child rows in the selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2747,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2747"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 818,
					"name": "startId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting row id of the selection range."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2737,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2737"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						821,
						819,
						822,
						820,
						818
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2733,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2733"
				}
			]
		},
		{
			"id": 248,
			"name": "RowCellLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the layout metadata for a single cell within a row, including span and contextual info."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 261,
					"name": "colFirstEndPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the first column in the set of columns pinned to the end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1237,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1237"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 256,
					"name": "colIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1212,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1212"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 262,
					"name": "colLastStartPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this column is the last column in the set of columns pinned to the start."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1242,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1242"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 259,
					"name": "colPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pinning state of a column, used to fix it to the left or right side."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1227,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1227"
						}
					],
					"type": {
						"type": "reference",
						"target": 350,
						"name": "ColumnPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 250,
					"name": "colSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of columns this cell spans across."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1182,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1182"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 258,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to a column definition in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1222,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1222"
						}
					],
					"type": {
						"type": "reference",
						"target": 355,
						"typeArguments": [
							{
								"type": "reference",
								"target": 266,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowCellLayout.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Column",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 254,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier that can be used for rendering keys or tracking elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1202,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1202"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 253,
					"name": "isDeadCol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if this cell is column spanned over and will not be rendered"
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1197,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1197"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 252,
					"name": "isDeadRow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if this cell is row spanned over and will not be rendered"
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1192,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 249,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator to identify a standard cell layout object."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1177,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1177"
						}
					],
					"type": {
						"type": "literal",
						"value": "cell"
					}
				},
				{
					"id": 257,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reactive atom for the row node, allowing updates without subscriptions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1217,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1217"
						}
					],
					"type": {
						"type": "reference",
						"target": 862,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 911,
										"typeArguments": [
											{
												"type": "reference",
												"target": 266,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "RowCellLayout.T",
												"refersToTypeParameter": true
											}
										],
										"name": "RowNode",
										"package": "@1771technologies/lytenyte-pro"
									}
								]
							}
						],
						"name": "GridAtomReadonlyUnwatchable",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 264,
					"name": "rowFirstPinBottom",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row is the first row pinned to the bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1252,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1252"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 255,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1207,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1207"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 265,
					"name": "rowIsFocusRow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row contains the currently focused cell and should be included in layout calculation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1257,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1257"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 263,
					"name": "rowLastPinTop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row is the last row pinned to the top of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1247,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1247"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 260,
					"name": "rowPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pinning state of a row, used to fix it to the top or bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1232,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1232"
						}
					],
					"type": {
						"type": "reference",
						"target": 913,
						"name": "RowPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 251,
					"name": "rowSpan",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of rows this cell spans across."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1187,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1187"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						261,
						256,
						262,
						259,
						250,
						258,
						254,
						253,
						252,
						249,
						257,
						264,
						255,
						265,
						263,
						260,
						251
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1173,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1173"
				}
			],
			"typeParameters": [
				{
					"id": 266,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 629,
			"name": "RowDataSource",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The row data source interface used by LyteNyte Grid to retrieve and manage row data.\n  This includes functionality for row expansion, selection, and CRUD operations."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 691,
					"name": "inFilterItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the available in-filter items for the specified column.\n  May return items synchronously or as a Promise."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Row Data Source"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2506,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2506"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 692,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2506,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2506"
								}
							],
							"signatures": [
								{
									"id": 693,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2506,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2506"
										}
									],
									"parameters": [
										{
											"id": 694,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 695,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSource.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1293,
													"name": "FilterInFilterItem",
													"package": "@1771technologies/lytenyte-pro"
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1293,
															"name": "FilterInFilterItem",
															"package": "@1771technologies/lytenyte-pro"
														}
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 630,
					"name": "init",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initializes the row data source. Called by LyteNyte Grid when the grid is ready."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2425,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2425"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 631,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2425,
									"character": 17,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2425"
								}
							],
							"signatures": [
								{
									"id": 632,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2425,
											"character": 17,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2425"
										}
									],
									"parameters": [
										{
											"id": 633,
											"name": "grid",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 185,
												"typeArguments": [
													{
														"type": "reference",
														"target": 695,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSource.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Grid",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 674,
					"name": "rowAdd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adds new rows to the grid optionally at a specific index, beginning, or end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2480,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2480"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 675,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2480,
									"character": 19,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2480"
								}
							],
							"signatures": [
								{
									"id": 676,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2480,
											"character": 19,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2480"
										}
									],
									"parameters": [
										{
											"id": 677,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 678,
											"name": "atIndex",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": "end"
													},
													{
														"type": "literal",
														"value": "beginning"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 662,
					"name": "rowAllChildIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the list of child row ids associated with a given parent row id."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2465,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2465"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 663,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2465,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2465"
								}
							],
							"signatures": [
								{
									"id": 664,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2465,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2465"
										}
									],
									"parameters": [
										{
											"id": 665,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 658,
					"name": "rowAreAllSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if all rows are selected, otherwise "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2460,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2460"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 659,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2460,
									"character": 30,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2460"
								}
							],
							"signatures": [
								{
									"id": 660,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2460,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2460"
										}
									],
									"parameters": [
										{
											"id": 661,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 634,
					"name": "rowById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given row id. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the id is undefined."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2430,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2430"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 635,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2430,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2430"
								}
							],
							"signatures": [
								{
									"id": 636,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2430,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2430"
										}
									],
									"parameters": [
										{
											"id": 637,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 695,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSource.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 638,
					"name": "rowByIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given index. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if index is out of bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2435,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2435"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 639,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2435,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2435"
								}
							],
							"signatures": [
								{
									"id": 640,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2435,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2435"
										}
									],
									"parameters": [
										{
											"id": 641,
											"name": "index",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 695,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSource.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 670,
					"name": "rowDelete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Deletes rows by their id or index using a provided array of keys."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2475,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2475"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 671,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2475,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2475"
								}
							],
							"signatures": [
								{
									"id": 672,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2475,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2475"
										}
									],
									"parameters": [
										{
											"id": 673,
											"name": "deletions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 646,
					"name": "rowExpand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles expansion state changes for grouped rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2445,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2445"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 647,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2445,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2445"
								}
							],
							"signatures": [
								{
									"id": 648,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2445,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2445"
										}
									],
									"parameters": [
										{
											"id": 649,
											"name": "expansion",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 650,
					"name": "rowSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles row selection updates and modifies selection state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2450,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2450"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 651,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2450,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2450"
								}
							],
							"signatures": [
								{
									"id": 652,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2450,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2450"
										}
									],
									"parameters": [
										{
											"id": 653,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 817,
												"name": "RdsRowSelectParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 654,
					"name": "rowSelectAll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Selects or deselects all rows based on the provided parameters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2455,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2455"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 655,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2455,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2455"
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2455,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2455"
										}
									],
									"parameters": [
										{
											"id": 657,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1677,
												"name": "RowSelectAllOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 687,
					"name": "rowSetBotData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the bottom section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2498,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2498"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 688,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2498,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2498"
								}
							],
							"signatures": [
								{
									"id": 689,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2498,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2498"
										}
									],
									"parameters": [
										{
											"id": 690,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 679,
					"name": "rowSetCenterData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for the center rows (scrollable rows) of the grid. Effectively replacing the current row data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2488,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2488"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 680,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2488,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2488"
								}
							],
							"signatures": [
								{
									"id": 681,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2488,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2488"
										}
									],
									"parameters": [
										{
											"id": 682,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 683,
					"name": "rowSetTopData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the top section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2493,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2493"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 684,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2493,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2493"
								}
							],
							"signatures": [
								{
									"id": 685,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2493,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2493"
										}
									],
									"parameters": [
										{
											"id": 686,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 642,
					"name": "rowToIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row index corresponding to a row id, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not found."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2440,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2440"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 643,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2440,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2440"
								}
							],
							"signatures": [
								{
									"id": 644,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2440,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2440"
										}
									],
									"parameters": [
										{
											"id": 645,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 666,
					"name": "rowUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Updates row data using a map of row ids or indexes mapped to updated values."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2470,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2470"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 667,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2470,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2470"
								}
							],
							"signatures": [
								{
									"id": 668,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2470,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2470"
										}
									],
									"parameters": [
										{
											"id": 669,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Map",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						630,
						674,
						662,
						658,
						634,
						638,
						670,
						646,
						650,
						654,
						687,
						679,
						683,
						642,
						666
					]
				},
				{
					"title": "Row Data Source",
					"children": [
						691
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2421,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2421"
				}
			],
			"typeParameters": [
				{
					"id": 695,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 558,
			"name": "RowDataSourceClient",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A client-side row data source used by LyteNyte Grid. All operations\n  are handled on the client, assuming the complete dataset is available in memory.\n\n  This implementation is suitable for small to moderately sized datasets. For large-scale datasets, such as those\n  exceeding hundreds of thousands of rows, a server-based data source\n  is recommended for performance and memory efficiency."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 620,
					"name": "inFilterItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the available in-filter items for the specified column.\n  May return items synchronously or as a Promise."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Row Data Source"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2405,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2405"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 621,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2405,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2405"
								}
							],
							"signatures": [
								{
									"id": 622,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2405,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2405"
										}
									],
									"parameters": [
										{
											"id": 623,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 628,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClient.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1293,
													"name": "FilterInFilterItem",
													"package": "@1771technologies/lytenyte-pro"
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1293,
															"name": "FilterInFilterItem",
															"package": "@1771technologies/lytenyte-pro"
														}
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 559,
					"name": "init",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initializes the row data source. Called by LyteNyte Grid when the grid is ready."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2324,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2324"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 560,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2324,
									"character": 17,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2324"
								}
							],
							"signatures": [
								{
									"id": 561,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2324,
											"character": 17,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2324"
										}
									],
									"parameters": [
										{
											"id": 562,
											"name": "grid",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 185,
												"typeArguments": [
													{
														"type": "reference",
														"target": 628,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClient.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Grid",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 603,
					"name": "rowAdd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adds new rows to the grid optionally at a specific index, beginning, or end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2379,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2379"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 604,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2379,
									"character": 19,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2379"
								}
							],
							"signatures": [
								{
									"id": 605,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2379,
											"character": 19,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2379"
										}
									],
									"parameters": [
										{
											"id": 606,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 607,
											"name": "atIndex",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": "end"
													},
													{
														"type": "literal",
														"value": "beginning"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 591,
					"name": "rowAllChildIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the list of child row ids associated with a given parent row id."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2364,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2364"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 592,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2364,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2364"
								}
							],
							"signatures": [
								{
									"id": 593,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2364,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2364"
										}
									],
									"parameters": [
										{
											"id": 594,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 587,
					"name": "rowAreAllSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if all rows are selected, otherwise "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2359,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2359"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 588,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2359,
									"character": 30,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2359"
								}
							],
							"signatures": [
								{
									"id": 589,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2359,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2359"
										}
									],
									"parameters": [
										{
											"id": 590,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 563,
					"name": "rowById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given row id. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the id is undefined."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2329,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2329"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 564,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2329,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2329"
								}
							],
							"signatures": [
								{
									"id": 565,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2329,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2329"
										}
									],
									"parameters": [
										{
											"id": 566,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 628,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClient.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 567,
					"name": "rowByIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given index. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if index is out of bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2334,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2334"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 568,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2334,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2334"
								}
							],
							"signatures": [
								{
									"id": 569,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2334,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2334"
										}
									],
									"parameters": [
										{
											"id": 570,
											"name": "index",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 628,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClient.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 624,
					"name": "rowData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A client data source method to retrieve the raw data passed to the data source."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2412,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2412"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 625,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2412,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2412"
								}
							],
							"signatures": [
								{
									"id": 626,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2412,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2412"
										}
									],
									"parameters": [
										{
											"id": 627,
											"name": "section",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 914,
												"name": "RowSection",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 628,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "RowDataSourceClient.T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 599,
					"name": "rowDelete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Deletes rows by their id or index using a provided array of keys."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2374,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2374"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 600,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2374,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2374"
								}
							],
							"signatures": [
								{
									"id": 601,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2374,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2374"
										}
									],
									"parameters": [
										{
											"id": 602,
											"name": "deletions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 575,
					"name": "rowExpand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles expansion state changes for grouped rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2344,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2344"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 576,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2344,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2344"
								}
							],
							"signatures": [
								{
									"id": 577,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2344,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2344"
										}
									],
									"parameters": [
										{
											"id": 578,
											"name": "expansion",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 579,
					"name": "rowSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles row selection updates and modifies selection state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2349,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2349"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 580,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2349,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2349"
								}
							],
							"signatures": [
								{
									"id": 581,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2349,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2349"
										}
									],
									"parameters": [
										{
											"id": 582,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 817,
												"name": "RdsRowSelectParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 583,
					"name": "rowSelectAll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Selects or deselects all rows based on the provided parameters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2354,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2354"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 584,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2354,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2354"
								}
							],
							"signatures": [
								{
									"id": 585,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2354,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2354"
										}
									],
									"parameters": [
										{
											"id": 586,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1677,
												"name": "RowSelectAllOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 616,
					"name": "rowSetBotData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the bottom section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2397,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2397"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 617,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2397,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2397"
								}
							],
							"signatures": [
								{
									"id": 618,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2397,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2397"
										}
									],
									"parameters": [
										{
											"id": 619,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 608,
					"name": "rowSetCenterData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for the center rows (scrollable rows) of the grid. Effectively replacing the current row data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2387,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2387"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 609,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2387,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2387"
								}
							],
							"signatures": [
								{
									"id": 610,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2387,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2387"
										}
									],
									"parameters": [
										{
											"id": 611,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 612,
					"name": "rowSetTopData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the top section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2392,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2392"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 613,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2392,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2392"
								}
							],
							"signatures": [
								{
									"id": 614,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2392,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2392"
										}
									],
									"parameters": [
										{
											"id": 615,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 571,
					"name": "rowToIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row index corresponding to a row id, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not found."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2339,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2339"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 572,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2339,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2339"
								}
							],
							"signatures": [
								{
									"id": 573,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2339,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2339"
										}
									],
									"parameters": [
										{
											"id": 574,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 595,
					"name": "rowUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Updates row data using a map of row ids or indexes mapped to updated values."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2369,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2369"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 596,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2369,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2369"
								}
							],
							"signatures": [
								{
									"id": 597,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2369,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2369"
										}
									],
									"parameters": [
										{
											"id": 598,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Map",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						559,
						603,
						591,
						587,
						563,
						567,
						624,
						599,
						575,
						579,
						583,
						616,
						608,
						612,
						571,
						595
					]
				},
				{
					"title": "Row Data Source",
					"children": [
						620
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2320,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2320"
				}
			],
			"typeParameters": [
				{
					"id": 628,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 554,
			"name": "RowDataSourceClientPageState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents pagination-related state for the client row data source in\n  LyteNyte Grid. These values enable pagination logic within the grid's UI and interactions."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 555,
					"name": "current",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currently active page number."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2297,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2297"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 557,
					"name": "pageCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of available pages."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2307,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2307"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 556,
					"name": "perPage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rows displayed per page."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2302,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2302"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						555,
						557,
						556
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2293,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2293"
				}
			]
		},
		{
			"id": 482,
			"name": "RowDataSourceClientPaginated",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A paginated client-side row data source for LyteNyte Grid.\n  It divides the full dataset into pages based on the configured page\n  size, reducing the number of rows rendered at any one time to\n  improve UI responsiveness and performance."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 545,
					"name": "inFilterItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the available in-filter items for the specified column.\n  May return items synchronously or as a Promise."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Row Data Source"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2277,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2277"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 546,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2277,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2277"
								}
							],
							"signatures": [
								{
									"id": 547,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2277,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2277"
										}
									],
									"parameters": [
										{
											"id": 548,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 553,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClientPaginated.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1293,
													"name": "FilterInFilterItem",
													"package": "@1771technologies/lytenyte-pro"
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1293,
															"name": "FilterInFilterItem",
															"package": "@1771technologies/lytenyte-pro"
														}
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 483,
					"name": "init",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initializes the row data source. Called by LyteNyte Grid when the grid is ready."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2191,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2191"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 484,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2191,
									"character": 17,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2191"
								}
							],
							"signatures": [
								{
									"id": 485,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2191,
											"character": 17,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2191"
										}
									],
									"parameters": [
										{
											"id": 486,
											"name": "grid",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 185,
												"typeArguments": [
													{
														"type": "reference",
														"target": 553,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClientPaginated.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Grid",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 544,
					"name": "page",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The properties of the current pagination state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2269,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2269"
						}
					],
					"type": {
						"type": "reference",
						"target": 554,
						"name": "RowDataSourceClientPageState",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 527,
					"name": "rowAdd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adds new rows to the grid optionally at a specific index, beginning, or end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2246,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2246"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 528,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2246,
									"character": 19,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2246"
								}
							],
							"signatures": [
								{
									"id": 529,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2246,
											"character": 19,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2246"
										}
									],
									"parameters": [
										{
											"id": 530,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 531,
											"name": "atIndex",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": "end"
													},
													{
														"type": "literal",
														"value": "beginning"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 515,
					"name": "rowAllChildIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the list of child row ids associated with a given parent row id."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2231,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2231"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 516,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2231,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2231"
								}
							],
							"signatures": [
								{
									"id": 517,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2231,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2231"
										}
									],
									"parameters": [
										{
											"id": 518,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 511,
					"name": "rowAreAllSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if all rows are selected, otherwise "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2226,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2226"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 512,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2226,
									"character": 30,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2226"
								}
							],
							"signatures": [
								{
									"id": 513,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2226,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2226"
										}
									],
									"parameters": [
										{
											"id": 514,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 487,
					"name": "rowById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given row id. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the id is undefined."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2196,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2196"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 488,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2196,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2196"
								}
							],
							"signatures": [
								{
									"id": 489,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2196,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2196"
										}
									],
									"parameters": [
										{
											"id": 490,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 553,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClientPaginated.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 491,
					"name": "rowByIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given index. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if index is out of bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2201,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2201"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 492,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2201,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2201"
								}
							],
							"signatures": [
								{
									"id": 493,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2201,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2201"
										}
									],
									"parameters": [
										{
											"id": 494,
											"name": "index",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 553,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceClientPaginated.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 549,
					"name": "rowData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A client data source method to retrieve the raw data passed to the data source."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2284,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2284"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 550,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2284,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2284"
								}
							],
							"signatures": [
								{
									"id": 551,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2284,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2284"
										}
									],
									"parameters": [
										{
											"id": 552,
											"name": "section",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 914,
												"name": "RowSection",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 553,
											"name": "T",
											"package": "@1771technologies/lytenyte-pro",
											"qualifiedName": "RowDataSourceClientPaginated.T",
											"refersToTypeParameter": true
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 523,
					"name": "rowDelete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Deletes rows by their id or index using a provided array of keys."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2241,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2241"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 524,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2241,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2241"
								}
							],
							"signatures": [
								{
									"id": 525,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2241,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2241"
										}
									],
									"parameters": [
										{
											"id": 526,
											"name": "deletions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 499,
					"name": "rowExpand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles expansion state changes for grouped rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2211,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2211"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 500,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2211,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2211"
								}
							],
							"signatures": [
								{
									"id": 501,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2211,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2211"
										}
									],
									"parameters": [
										{
											"id": 502,
											"name": "expansion",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 503,
					"name": "rowSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles row selection updates and modifies selection state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2216,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2216"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 504,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2216,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2216"
								}
							],
							"signatures": [
								{
									"id": 505,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2216,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2216"
										}
									],
									"parameters": [
										{
											"id": 506,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 817,
												"name": "RdsRowSelectParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 507,
					"name": "rowSelectAll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Selects or deselects all rows based on the provided parameters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2221,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2221"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 508,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2221,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2221"
								}
							],
							"signatures": [
								{
									"id": 509,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2221,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2221"
										}
									],
									"parameters": [
										{
											"id": 510,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1677,
												"name": "RowSelectAllOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 540,
					"name": "rowSetBotData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the bottom section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2264,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2264"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 541,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2264,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2264"
								}
							],
							"signatures": [
								{
									"id": 542,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2264,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2264"
										}
									],
									"parameters": [
										{
											"id": 543,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 532,
					"name": "rowSetCenterData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for the center rows (scrollable rows) of the grid. Effectively replacing the current row data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2254,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2254"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 533,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2254,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2254"
								}
							],
							"signatures": [
								{
									"id": 534,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2254,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2254"
										}
									],
									"parameters": [
										{
											"id": 535,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 536,
					"name": "rowSetTopData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the top section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2259,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2259"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 537,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2259,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2259"
								}
							],
							"signatures": [
								{
									"id": 538,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2259,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2259"
										}
									],
									"parameters": [
										{
											"id": 539,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 495,
					"name": "rowToIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row index corresponding to a row id, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not found."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2206,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2206"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 496,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2206,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2206"
								}
							],
							"signatures": [
								{
									"id": 497,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2206,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2206"
										}
									],
									"parameters": [
										{
											"id": 498,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 519,
					"name": "rowUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Updates row data using a map of row ids or indexes mapped to updated values."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2236,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2236"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 520,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2236,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2236"
								}
							],
							"signatures": [
								{
									"id": 521,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2236,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2236"
										}
									],
									"parameters": [
										{
											"id": 522,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Map",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						483,
						544,
						527,
						515,
						511,
						487,
						491,
						549,
						523,
						499,
						503,
						507,
						540,
						532,
						536,
						495,
						519
					]
				},
				{
					"title": "Row Data Source",
					"children": [
						545
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2187,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2187"
				}
			],
			"typeParameters": [
				{
					"id": 553,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 696,
			"name": "RowDataSourceServer",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A high-performance row data source for LyteNyte Grid that enables\n  server-side data loading in slices. This data source supports virtually\n  unlimited data volumes by querying only the required data ranges from a backend source.\n\n  Unlike client-side data sources, all row operations—including filtering, sorting,\n  grouping, and pagination—must be handled on the server. This design provides\n  maximum flexibility and scalability, including support for server-driven trees\n  and pagination, but requires a more complex implementation on the backend."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 758,
					"name": "inFilterItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the available in-filter items for the specified column.\n  May return items synchronously or as a Promise."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Row Data Source"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2608,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2608"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 759,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2608,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2608"
								}
							],
							"signatures": [
								{
									"id": 760,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2608,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2608"
										}
									],
									"parameters": [
										{
											"id": 761,
											"name": "column",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 799,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceServer.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1293,
													"name": "FilterInFilterItem",
													"package": "@1771technologies/lytenyte-pro"
												}
											},
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1293,
															"name": "FilterInFilterItem",
															"package": "@1771technologies/lytenyte-pro"
														}
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 697,
					"name": "init",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initializes the row data source. Called by LyteNyte Grid when the grid is ready."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2527,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2527"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 698,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2527,
									"character": 17,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2527"
								}
							],
							"signatures": [
								{
									"id": 699,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2527,
											"character": 17,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2527"
										}
									],
									"parameters": [
										{
											"id": 700,
											"name": "grid",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 185,
												"typeArguments": [
													{
														"type": "reference",
														"target": 799,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceServer.T",
														"refersToTypeParameter": true
													}
												],
												"name": "Grid",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 762,
					"name": "isLoading",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the server data source is currently fetching data.\n      This can be used to show a loading indicator in the UI."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2616,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2616"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 763,
					"name": "loadError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If the initial data load for the server data fails, the loadError will be set with the\n      error value. This is only set if the initial load failed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2622,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2622"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 785,
					"name": "pushRequests",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Triggers the data fetching pipeline with a set of requests. Can\n      optionally invoke a callback upon successful completion."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2672,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2672"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 786,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2672,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2672"
								}
							],
							"signatures": [
								{
									"id": 787,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2672,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2672"
										}
									],
									"parameters": [
										{
											"id": 788,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1846,
													"name": "DataRequest",
													"package": "@1771technologies/lytenyte-pro"
												}
											}
										},
										{
											"id": 789,
											"name": "onSuccess",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 790,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2674,
															"character": 16,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2674"
														}
													],
													"signatures": [
														{
															"id": 791,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2674,
																	"character": 16,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2674"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 792,
											"name": "onError",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 793,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2675,
															"character": 14,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2675"
														}
													],
													"signatures": [
														{
															"id": 794,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2675,
																	"character": 14,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2675"
																}
															],
															"parameters": [
																{
																	"id": 795,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 781,
					"name": "pushResponses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pushes data responses directly into the data source. Useful for\n      preloading, live updates, or streaming responses."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2666,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2666"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 782,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2666,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2666"
								}
							],
							"signatures": [
								{
									"id": 783,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2666,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2666"
										}
									],
									"parameters": [
										{
											"id": 784,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 1867,
															"name": "DataResponse",
															"package": "@1771technologies/lytenyte-pro"
														},
														{
															"type": "reference",
															"target": 1885,
															"name": "DataResponsePinned",
															"package": "@1771technologies/lytenyte-pro"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 771,
					"name": "refresh",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Refreshes the current view by re-sending the data requests that make up the view to the server.\nThis ensures that any underlying data changes are reflected in the rendered view.\n\nThis is a convenience method that combines the functionality of "
							},
							{
								"kind": "code",
								"text": "`requestsForView`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`pushRequests`"
							},
							{
								"kind": "text",
								"text": ",\nallowing you to easily re-fetch and re-render data for the current view in a single call."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2657,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2657"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 772,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2657,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2657"
								}
							],
							"signatures": [
								{
									"id": 773,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2657,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2657"
										}
									],
									"parameters": [
										{
											"id": 774,
											"name": "onSuccess",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 775,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2658,
															"character": 16,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2658"
														}
													],
													"signatures": [
														{
															"id": 776,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2658,
																	"character": 16,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2658"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 777,
											"name": "onError",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 778,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 2659,
															"character": 14,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2659"
														}
													],
													"signatures": [
														{
															"id": 779,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "+types.ts",
																	"line": 2659,
																	"character": 14,
																	"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2659"
																}
															],
															"parameters": [
																{
																	"id": 780,
																	"name": "e",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 768,
					"name": "requestsForView",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the data requests that would be sent to the server based on the current\nstate of the view.\n\nThis can be used to implement polling for cell updates, allowing the client\nto periodically fetch new or changed data without reloading the entire view.\n\nTo execute the generated requests, use the "
							},
							{
								"kind": "code",
								"text": "`pushRequests`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2648,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2648"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 769,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2648,
									"character": 28,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2648"
								}
							],
							"signatures": [
								{
									"id": 770,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2648,
											"character": 28,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2648"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1846,
											"name": "DataRequest",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 796,
					"name": "reset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resets the internal state and clears all server data previously fetched by the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2681,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2681"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 797,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2681,
									"character": 18,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2681"
								}
							],
							"signatures": [
								{
									"id": 798,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2681,
											"character": 18,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2681"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 764,
					"name": "retry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retries data loading for errored rows.\n\nBehavior depends on whether a set of row IDs is provided:\n\n  - **No "
							},
							{
								"kind": "code",
								"text": "`rowId`"
							},
							{
								"kind": "text",
								"text": " provided:**\n  Clears the error state for all rows that previously failed to load, then\n  requests new data for those rows that are both errored and currently visible in the viewport.\n\n  - **"
							},
							{
								"kind": "code",
								"text": "`rowId`"
							},
							{
								"kind": "text",
								"text": " array provided:**\n  Requests data only for the specified rows that are in an error state.\n  Error states for other rows remain unchanged."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2637,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2637"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 765,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2637,
									"character": 18,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2637"
								}
							],
							"signatures": [
								{
									"id": 766,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2637,
											"character": 18,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2637"
										}
									],
									"parameters": [
										{
											"id": 767,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 741,
					"name": "rowAdd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adds new rows to the grid optionally at a specific index, beginning, or end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2582,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2582"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 742,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2582,
									"character": 19,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2582"
								}
							],
							"signatures": [
								{
									"id": 743,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2582,
											"character": 19,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2582"
										}
									],
									"parameters": [
										{
											"id": 744,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 745,
											"name": "atIndex",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "literal",
														"value": "end"
													},
													{
														"type": "literal",
														"value": "beginning"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 729,
					"name": "rowAllChildIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the list of child row ids associated with a given parent row id."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2567,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2567"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 730,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2567,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2567"
								}
							],
							"signatures": [
								{
									"id": 731,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2567,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2567"
										}
									],
									"parameters": [
										{
											"id": 732,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 725,
					"name": "rowAreAllSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if all rows are selected, otherwise "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2562,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2562"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 726,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2562,
									"character": 30,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2562"
								}
							],
							"signatures": [
								{
									"id": 727,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2562,
											"character": 30,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2562"
										}
									],
									"parameters": [
										{
											"id": 728,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 701,
					"name": "rowById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given row id. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if the id is undefined."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2532,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2532"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 702,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2532,
									"character": 20,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2532"
								}
							],
							"signatures": [
								{
									"id": 703,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2532,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2532"
										}
									],
									"parameters": [
										{
											"id": 704,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 799,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceServer.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 705,
					"name": "rowByIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row node for a given index. May return "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if index is out of bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2537,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2537"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 706,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2537,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2537"
								}
							],
							"signatures": [
								{
									"id": 707,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2537,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2537"
										}
									],
									"parameters": [
										{
											"id": 708,
											"name": "index",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 911,
												"typeArguments": [
													{
														"type": "reference",
														"target": 799,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"qualifiedName": "RowDataSourceServer.T",
														"refersToTypeParameter": true
													}
												],
												"name": "RowNode",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 737,
					"name": "rowDelete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Deletes rows by their id or index using a provided array of keys."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2577,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2577"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 738,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2577,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2577"
								}
							],
							"signatures": [
								{
									"id": 739,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2577,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2577"
										}
									],
									"parameters": [
										{
											"id": 740,
											"name": "deletions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 713,
					"name": "rowExpand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles expansion state changes for grouped rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2547,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2547"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 714,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2547,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2547"
								}
							],
							"signatures": [
								{
									"id": 715,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2547,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2547"
										}
									],
									"parameters": [
										{
											"id": 716,
											"name": "expansion",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 717,
					"name": "rowSelect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles row selection updates and modifies selection state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2552,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2552"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 718,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2552,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2552"
								}
							],
							"signatures": [
								{
									"id": 719,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2552,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2552"
										}
									],
									"parameters": [
										{
											"id": 720,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 817,
												"name": "RdsRowSelectParams",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 721,
					"name": "rowSelectAll",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Selects or deselects all rows based on the provided parameters."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2557,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2557"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 722,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2557,
									"character": 25,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2557"
								}
							],
							"signatures": [
								{
									"id": 723,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2557,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2557"
										}
									],
									"parameters": [
										{
											"id": 724,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1677,
												"name": "RowSelectAllOptions",
												"package": "@1771technologies/lytenyte-pro"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 754,
					"name": "rowSetBotData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the bottom section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2600,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2600"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 755,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2600,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2600"
								}
							],
							"signatures": [
								{
									"id": 756,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2600,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2600"
										}
									],
									"parameters": [
										{
											"id": 757,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 746,
					"name": "rowSetCenterData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for the center rows (scrollable rows) of the grid. Effectively replacing the current row data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2590,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2590"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 747,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2590,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2590"
								}
							],
							"signatures": [
								{
									"id": 748,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2590,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2590"
										}
									],
									"parameters": [
										{
											"id": 749,
											"name": "newRows",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 750,
					"name": "rowSetTopData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the data for rows pinned to the top section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2595,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2595"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 751,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2595,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2595"
								}
							],
							"signatures": [
								{
									"id": 752,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2595,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2595"
										}
									],
									"parameters": [
										{
											"id": 753,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 709,
					"name": "rowToIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the row index corresponding to a row id, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not found."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2542,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2542"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 710,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2542,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2542"
								}
							],
							"signatures": [
								{
									"id": 711,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2542,
											"character": 23,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2542"
										}
									],
									"parameters": [
										{
											"id": 712,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 733,
					"name": "rowUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Updates row data using a map of row ids or indexes mapped to updated values."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2572,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2572"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 734,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2572,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2572"
								}
							],
							"signatures": [
								{
									"id": 735,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2572,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2572"
										}
									],
									"parameters": [
										{
											"id": 736,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Map",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						697,
						762,
						763,
						785,
						781,
						771,
						768,
						796,
						764,
						741,
						729,
						725,
						701,
						705,
						737,
						713,
						717,
						721,
						754,
						746,
						750,
						709,
						733
					]
				},
				{
					"title": "Row Data Source",
					"children": [
						758
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2523,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2523"
				}
			],
			"typeParameters": [
				{
					"id": 799,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1889,
			"name": "RowDataSourceServerParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The LyteNyte Grid server row data source provides an implementation optimized\nfor fetching data in slices from the server.\n\nThe "
					},
					{
						"kind": "code",
						"text": "`RowDataSourceServerParams`"
					},
					{
						"kind": "text",
						"text": " type defines the configuration parameters\nthat can be passed to this row data source."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1898,
					"name": "blockSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LyteNyte Grid's server data source fetches row data in slices. The "
							},
							{
								"kind": "code",
								"text": "`blockSize`"
							},
							{
								"kind": "text",
								"text": "\nproperty controls the size of each slice. A larger "
							},
							{
								"kind": "code",
								"text": "`blockSize`"
							},
							{
								"kind": "text",
								"text": " reduces the\nnumber of requests but increases the amount of data transferred per request."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7304,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7304"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1893,
					"name": "cellUpdateHandler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LyteNyte Grid supports cell editing, but the row data source must perform the\nactual update once an edit completes. For a server data source, the data is not\nstored on the client, so LyteNyte Grid calls the "
							},
							{
								"kind": "code",
								"text": "`cellUpdateHandler`"
							},
							{
								"kind": "text",
								"text": " function\nto trigger the server update.\n\nDevelopers are responsible for executing the update and handling errors. The\n"
							},
							{
								"kind": "code",
								"text": "`cellUpdateHandler`"
							},
							{
								"kind": "text",
								"text": " provides the hook for managing these updates."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7289,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7289"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1894,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 7289,
									"character": 31,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7289"
								}
							],
							"signatures": [
								{
									"id": 1895,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 7289,
											"character": 31,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7289"
										}
									],
									"parameters": [
										{
											"id": 1896,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Map"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Map",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1897,
					"name": "cellUpdateOptimistically",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, applies cell edits to the UI before the server confirms the update.\nThis is an optimistic update, assuming the server operation will succeed.\nDevelopers are responsible for reconciling server-side changes and handling\nany failures that occur."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7297,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7297"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1891,
					"name": "dataColumnPivotFetcher",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column pivots produce column definitions derived from the row data. Because the\nserver data source does not have full access to row data, it relies on a\n"
							},
							{
								"kind": "code",
								"text": "`dataColumnPivotFetcher`"
							},
							{
								"kind": "text",
								"text": " function. The server data source calls this function\nto fetch pivot column definitions whenever the pivot configuration changes."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7270,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7270"
						}
					],
					"type": {
						"type": "reference",
						"target": 1815,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1899,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDataSourceServerParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DataColumnPivotFetcherFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1890,
					"name": "dataFetcher",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`dataFetcher`"
							},
							{
								"kind": "text",
								"text": " function is required by the LyteNyte Grid server data source\nand serves as its main entry point for retrieving rows. It fetches row slices\nfrom the server based on the current grid view. LyteNyte Grid calls this function\nwhenever the view changes, which means it may be invoked frequently if the view\nupdates often."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7262,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7262"
						}
					],
					"type": {
						"type": "reference",
						"target": 1825,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1899,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDataSourceServerParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DataFetcherFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1892,
					"name": "dataInFilterItemFetcher",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`inFilter`"
							},
							{
								"kind": "text",
								"text": " in LyteNyte Grid filters rows by the unique values of a column.\nLyteNyte Grid retrieves these values from the row data source. For server data\nsources, the "
							},
							{
								"kind": "code",
								"text": "`dataInFilterItemFetcher`"
							},
							{
								"kind": "text",
								"text": " function retrieves the filter items on\ndemand. These items are then included with data requests to apply the filter."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 7278,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7278"
						}
					],
					"type": {
						"type": "reference",
						"target": 1836,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1899,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDataSourceServerParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "DataInFilterItemFetcherFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1898,
						1893,
						1897,
						1891,
						1890,
						1892
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 7254,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L7254"
				}
			],
			"typeParameters": [
				{
					"id": 1899,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 800,
			"name": "RowDataStore",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The internal row data store used by LyteNyte Grid to manage row metadata, counts, and access functions."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 804,
					"name": "rowBottomCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of rows pinned to the bottom section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2708,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2708"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 803,
					"name": "rowCenterCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of scrollable rows in the center section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2703,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2703"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 809,
					"name": "rowClearCache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Clears the cached row node data in the store."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2720,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2720"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 810,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2720,
									"character": 26,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2720"
								}
							],
							"signatures": [
								{
									"id": 811,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2720,
											"character": 26,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2720"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 801,
					"name": "rowCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Total number of rows present in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2693,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2693"
						}
					],
					"type": {
						"type": "reference",
						"target": 846,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtomReadonly",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 805,
					"name": "rowForIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the row node for the given row index."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2713,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2713"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 806,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2713,
									"character": 24,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2713"
								}
							],
							"signatures": [
								{
									"id": 807,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2713,
											"character": 24,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2713"
										}
									],
									"parameters": [
										{
											"id": 808,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 862,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 911,
														"typeArguments": [
															{
																"type": "reference",
																"target": 816,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "RowDataStore.T",
																"refersToTypeParameter": true
															}
														],
														"name": "RowNode",
														"package": "@1771technologies/lytenyte-pro"
													}
												]
											}
										],
										"name": "GridAtomReadonlyUnwatchable",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							]
						}
					}
				},
				{
					"id": 812,
					"name": "rowInvalidateIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Invalidates the row node for the given index, forcing a refresh."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2725,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2725"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 813,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2725,
									"character": 31,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2725"
								}
							],
							"signatures": [
								{
									"id": 814,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 2725,
											"character": 31,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2725"
										}
									],
									"parameters": [
										{
											"id": 815,
											"name": "row",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 802,
					"name": "rowTopCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of rows pinned to the top section."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2698,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2698"
						}
					],
					"type": {
						"type": "reference",
						"target": 823,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "GridAtom",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						804,
						803,
						809,
						801,
						805,
						812,
						802
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2689,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2689"
				}
			],
			"typeParameters": [
				{
					"id": 816,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1417,
			"name": "RowDetailExpansionBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters for the "
					},
					{
						"kind": "code",
						"text": "`rowDetailExpansionBegin`"
					},
					{
						"kind": "text",
						"text": " event. This event allows preventing expansion of row detail sections by calling "
					},
					{
						"kind": "code",
						"text": "`preventDefault()`"
					},
					{
						"kind": "text",
						"text": "."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1419,
					"name": "expansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`Set`"
							},
							{
								"kind": "text",
								"text": " containing the row ids currently marked for detail expansion."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4930,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4930"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 1418,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4925,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4925"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1423,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDetailExpansionBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1420,
					"name": "preventDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Call this function to cancel the row detail expansion."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4935,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4935"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1421,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 4935,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4935"
								}
							],
							"signatures": [
								{
									"id": 1422,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 4935,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4935"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1419,
						1418,
						1420
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4921,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4921"
				}
			],
			"typeParameters": [
				{
					"id": 1423,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1429,
			"name": "RowDetailExpansionEndParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters for the "
					},
					{
						"kind": "code",
						"text": "`rowDetailExpansionEnd`"
					},
					{
						"kind": "text",
						"text": " event, fired once a row detail expansion operation is complete."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1431,
					"name": "expansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`Set`"
							},
							{
								"kind": "text",
								"text": " of row ids that are currently expanded in the detail view."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4965,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4965"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 1430,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4960,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4960"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1432,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDetailExpansionEndParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1431,
						1430
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4956,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4956"
				}
			],
			"typeParameters": [
				{
					"id": 1432,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1672,
			"name": "RowDetailRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the parameters passed to a row detail renderer. These parameters\n  include the row index, the row node metadata,\n  and a reference to the grid instance."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1675,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5940,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5940"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1676,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDetailRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1674,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5935,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5935"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1676,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowDetailRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1673,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5930,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5930"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1675,
						1674,
						1673
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5926,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5926"
				}
			],
			"typeParameters": [
				{
					"id": 1676,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1443,
			"name": "RowExpandBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`rowExpandBegin`"
					},
					{
						"kind": "text",
						"text": " event. This event is triggered before row group expansion occurs and provides a way to cancel the action."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1445,
					"name": "expansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map representing the current expansion state of row groups. Each key corresponds to a row id, and the value indicates whether that row group is expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5006,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5006"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1446,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5006,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5006"
								}
							],
							"indexSignatures": [
								{
									"id": 1447,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5006,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5006"
										}
									],
									"parameters": [
										{
											"id": 1448,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1444,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5001,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5001"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1452,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowExpandBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1449,
					"name": "preventDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback to prevent the row group from expanding. Must be explicitly invoked within the event handler."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5011,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5011"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1450,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5011,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5011"
								}
							],
							"signatures": [
								{
									"id": 1451,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5011,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5011"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1445,
						1444,
						1449
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4997,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4997"
				}
			],
			"typeParameters": [
				{
					"id": 1452,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1458,
			"name": "RowExpandErrorParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`rowExpandError`"
					},
					{
						"kind": "text",
						"text": " event. This event is emitted when an error occurs during row group expansion."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1464,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The error that was thrown or returned during row group expansion."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5045,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5045"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 1460,
					"name": "expansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map representing the current expansion state of row groups. Each key corresponds to a row id, and the value indicates whether that row group is expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5040,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5040"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1461,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5040,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5040"
								}
							],
							"indexSignatures": [
								{
									"id": 1462,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5040,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5040"
										}
									],
									"parameters": [
										{
											"id": 1463,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1459,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5035,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5035"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1465,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowExpandErrorParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1464,
						1460,
						1459
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5031,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5031"
				}
			],
			"typeParameters": [
				{
					"id": 1465,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1466,
			"name": "RowExpandParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the parameters passed to the "
					},
					{
						"kind": "code",
						"text": "`rowExpand`"
					},
					{
						"kind": "text",
						"text": " event. This event is emitted after a row group has been successfully expanded."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1468,
					"name": "expansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map representing the current expansion state of row groups. Each key corresponds to a row id, and the value indicates whether that row group is expanded."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5062,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5062"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1469,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5062,
									"character": 23,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5062"
								}
							],
							"indexSignatures": [
								{
									"id": 1470,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5062,
											"character": 25,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5062"
										}
									],
									"parameters": [
										{
											"id": 1471,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 1467,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5057,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5057"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1472,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowExpandParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1468,
						1467
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5053,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5053"
				}
			],
			"typeParameters": [
				{
					"id": 1472,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 875,
			"name": "RowFullWidthPredicateParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters provided to the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "RowFullWidthPredicate",
						"target": 870
					},
					{
						"kind": "text",
						"text": " function to determine\nif a row should span full width of the grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 876,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2879,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2879"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 879,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowFullWidthPredicateParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 878,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2889,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2889"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 879,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowFullWidthPredicateParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 877,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2884,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2884"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						876,
						878,
						877
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2875,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2875"
				}
			],
			"typeParameters": [
				{
					"id": 879,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 885,
			"name": "RowFullWidthRendererParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters provided to the full-width row renderer.\nIncludes row metadata and selection state."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 888,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2924,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2924"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 891,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowFullWidthRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 887,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row node instance in LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2919,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2919"
						}
					],
					"type": {
						"type": "reference",
						"target": 911,
						"typeArguments": [
							{
								"type": "reference",
								"target": 891,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowFullWidthRendererParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 890,
					"name": "rowIndeterminate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the row is in an indeterminate selection state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2934,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2934"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 886,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2914,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2914"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 889,
					"name": "rowSelected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the row is currently selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2929,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2929"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						888,
						887,
						890,
						886,
						889
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2910,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2910"
				}
			],
			"typeParameters": [
				{
					"id": 891,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 267,
			"name": "RowFullWidthRowLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the layout of a full-width row which spans all columns.\n  These are typically used for summary or group rows."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 269,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier that can be used for rendering keys or tracking elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1275,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1275"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 268,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for identifying full-width row layout objects."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1270,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1270"
						}
					],
					"type": {
						"type": "literal",
						"value": "full-width"
					}
				},
				{
					"id": 271,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reactive atom for the row node, allowing updates without subscriptions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1285,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1285"
						}
					],
					"type": {
						"type": "reference",
						"target": 862,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 911,
										"typeArguments": [
											{
												"type": "reference",
												"target": 276,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "RowFullWidthRowLayout.T",
												"refersToTypeParameter": true
											}
										],
										"name": "RowNode",
										"package": "@1771technologies/lytenyte-pro"
									}
								]
							}
						],
						"name": "GridAtomReadonlyUnwatchable",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 274,
					"name": "rowFirstPinBottom",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row is the first row pinned to the bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1300,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1300"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 270,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1280,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1280"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 275,
					"name": "rowIsFocusRow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row contains the currently focused cell and should be included in layout calculation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1305,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1305"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 273,
					"name": "rowLastPinTop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row is the last row pinned to the top of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1295,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1295"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 272,
					"name": "rowPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pinning state of a row, used to fix it to the top or bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1290,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1290"
						}
					],
					"type": {
						"type": "reference",
						"target": 913,
						"name": "RowPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						269,
						268,
						271,
						274,
						270,
						275,
						273,
						272
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1266,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1266"
				}
			],
			"typeParameters": [
				{
					"id": 276,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 892,
			"name": "RowGroup",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a group (branch) row which may contain children rows (leaf or other groups).\nGroup rows are used in hierarchical views and support expansion/collapse behavior."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 898,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Group-level aggregated or summarized data. Must be an object with string keys;\nvalues may be any type depending on aggregation strategy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2976,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2976"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 899,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Depth level from the root; used to determine visual indenting and structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2981,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2981"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 895,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error object associated with this row. The type is intentionally flexible,\nand should be interpreted by the consumer based on context."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2960,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2960"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 893,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " for a given row. The "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " is generated by a given "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RowDataSource",
								"target": 629
							},
							{
								"kind": "text",
								"text": ".\nEvery row must have a unique "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2948,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2948"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 897,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The group key used to organize this branch in the hierarchy. Acts as part of the grouping path."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2970,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2970"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 896,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant used to identify this row as a "
							},
							{
								"kind": "code",
								"text": "`RowGroup`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2965,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2965"
						}
					],
					"type": {
						"type": "literal",
						"value": "branch"
					}
				},
				{
					"id": 894,
					"name": "loading",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag indicating whether the row is currently loading data.\nUseful for asynchronous data loading scenarios."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2954,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2954"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						898,
						899,
						895,
						893,
						897,
						896,
						894
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2943,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2943"
				}
			]
		},
		{
			"id": 382,
			"name": "RowGroupColumn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The internal definition used by LyteNyte Grid to automatically generate group columns\nwhen row grouping is enabled.\n\nThese columns are created behind the scenes to represent group headers and aggregations\nand can be configured via this interface."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 395,
					"name": "autosizeCellFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function that computes the ideal width for the column based on sampled cell content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1921,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1921"
						}
					],
					"type": {
						"type": "reference",
						"target": 300,
						"typeArguments": [
							{
								"type": "reference",
								"target": 397,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowGroupColumn.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AutosizeCellFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 396,
					"name": "autosizeHeaderFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function that computes the ideal width for the column header based on its content."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1926,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1926"
						}
					],
					"type": {
						"type": "reference",
						"target": 310,
						"typeArguments": [
							{
								"type": "reference",
								"target": 397,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowGroupColumn.T",
								"refersToTypeParameter": true
							}
						],
						"name": "AutosizeHeaderFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 391,
					"name": "cellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines how to render the cell content. Accepts a renderer function or a string referencing a registered renderer."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1901,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1901"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 961,
								"typeArguments": [
									{
										"type": "reference",
										"target": 397,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "RowGroupColumn.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 390,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines how the cell value should be retrieved or computed for the column. If omitted, the column's "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " is used as a fallback."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1896,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1896"
						}
					],
					"type": {
						"type": "reference",
						"target": 959,
						"typeArguments": [
							{
								"type": "reference",
								"target": 397,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowGroupColumn.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Field",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 393,
					"name": "floatingCellRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render a floating row cell. Only called when floating rows are enabled. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1911,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1911"
						}
					],
					"type": {
						"type": "reference",
						"target": 1535,
						"typeArguments": [
							{
								"type": "reference",
								"target": 397,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowGroupColumn.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderFloatingCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 392,
					"name": "headerRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function used to render the column's header. Must return a React node."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1906,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1906"
						}
					],
					"type": {
						"type": "reference",
						"target": 1537,
						"typeArguments": [
							{
								"type": "reference",
								"target": 397,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowGroupColumn.T",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellRenderer",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 384,
					"name": "hide",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the visibility of the column. When set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the column is hidden from the grid display."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1864,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1864"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 383,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A human-readable name for the column. Useful when "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " is more technical or programmatic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1859,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1859"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 389,
					"name": "pin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether the column is pinned to the start or end of the grid. Pinned columns remain visible regardless of horizontal scroll."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1891,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1891"
						}
					],
					"type": {
						"type": "reference",
						"target": 350,
						"name": "ColumnPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 394,
					"name": "uiHints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Describes the capabilities and intended UI behavior of the column. These hints are used by external UI components."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1916,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1916"
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"name": "ColumnUIHints",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 385,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the preferred width of the column. This value is ignored if flex sizing is used, or if it violates the column's min/max bounds."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1869,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1869"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 388,
					"name": "widthFlex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the flex ratio this column should take when distributing remaining space.\n\n  Similar to CSS "
							},
							{
								"kind": "code",
								"text": "`flex`"
							},
							{
								"kind": "text",
								"text": ", it controls how extra space is shared among flex-enabled columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1886,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1886"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 386,
					"name": "widthMax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum width the column is allowed to occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1874,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1874"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 387,
					"name": "widthMin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum width the column is allowed to occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1879,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1879"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						395,
						396,
						391,
						390,
						393,
						392,
						384,
						383,
						389,
						394,
						385,
						388,
						386,
						387
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1855,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1855"
				}
			],
			"typeParameters": [
				{
					"id": 397,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1338,
			"name": "RowGroupField",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines a field-based grouping configuration used to compute row group keys in the grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Grouping"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1341,
					"name": "field",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data field to be grouped by."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4655,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4655"
						}
					],
					"type": {
						"type": "reference",
						"target": 957,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1343,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowGroupField.T",
								"refersToTypeParameter": true
							}
						],
						"name": "FieldRowGroup",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1340,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique identifier for this row group field."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4650,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4650"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1339,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type identifier used for discriminating group field types."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4645,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4645"
						}
					],
					"type": {
						"type": "literal",
						"value": "field"
					}
				},
				{
					"id": 1342,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional display name for the row group field."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4660,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4660"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1341,
						1340,
						1339,
						1342
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4641,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4641"
				}
			],
			"typeParameters": [
				{
					"id": 1343,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1198,
			"name": "RowHandleSelectParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters used for the "
					},
					{
						"kind": "code",
						"text": "`rowHandleSelect`"
					},
					{
						"kind": "text",
						"text": " API method of LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid API"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1200,
					"name": "shiftKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the shift key is pressed. Required for enabling range-based (bulk) row selections."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3731,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3731"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1199,
					"name": "target",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The event target to handle."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3726,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3726"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "EventTarget"
						},
						"name": "EventTarget",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1200,
						1199
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3722,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3722"
				}
			]
		},
		{
			"id": 904,
			"name": "RowLeaf",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a leaf row in the grid. A leaf row is a terminal node that has no children.\nThese rows typically represent the raw dataset and are used for aggregations and visual representation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 909,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data payload associated with this row. Usually a plain object or array,\nthis is passed to column field logic to extract cell values."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3028,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3028"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 910,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowLeaf.T",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 907,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error object associated with this row. The type is intentionally flexible,\nand should be interpreted by the consumer based on context."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3017,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3017"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 905,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " for a given row. The "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " is generated by a given "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RowDataSource",
								"target": 629
							},
							{
								"kind": "text",
								"text": ".\nEvery row must have a unique "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3005,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3005"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 908,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant used to identify this row as a "
							},
							{
								"kind": "code",
								"text": "`RowLeaf`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3022,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3022"
						}
					],
					"type": {
						"type": "literal",
						"value": "leaf"
					}
				},
				{
					"id": 906,
					"name": "loading",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag indicating whether the row is currently loading data.\nUseful for asynchronous data loading scenarios."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3011,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3011"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						909,
						907,
						905,
						908,
						906
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3000,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3000"
				}
			],
			"typeParameters": [
				{
					"id": 910,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 279,
			"name": "RowNormalRowLayout",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the layout of a standard row in LyteNyte Grid,\n  including cell arrangement and row-level metadata."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 288,
					"name": "cells",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of cell layout metadata for this row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1365,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1365"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 248,
							"typeArguments": [
								{
									"type": "reference",
									"target": 289,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "RowNormalRowLayout.T",
									"refersToTypeParameter": true
								}
							],
							"name": "RowCellLayout",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 287,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier that can be used for rendering keys or tracking elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1360,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1360"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 280,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator identifying this layout as a normal row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1325,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1325"
						}
					],
					"type": {
						"type": "literal",
						"value": "row"
					}
				},
				{
					"id": 282,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reactive atom for the row node, allowing updates without subscriptions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1335,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1335"
						}
					],
					"type": {
						"type": "reference",
						"target": 862,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 911,
										"typeArguments": [
											{
												"type": "reference",
												"target": 289,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"qualifiedName": "RowNormalRowLayout.T",
												"refersToTypeParameter": true
											}
										],
										"name": "RowNode",
										"package": "@1771technologies/lytenyte-pro"
									}
								]
							}
						],
						"name": "GridAtomReadonlyUnwatchable",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 285,
					"name": "rowFirstPinBottom",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row is the first row pinned to the bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1350,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1350"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 281,
					"name": "rowIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The zero-based index of the row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1330,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1330"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 286,
					"name": "rowIsFocusRow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row contains the currently focused cell and should be included in layout calculation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1355,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1355"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 284,
					"name": "rowLastPinTop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if this row is the last row pinned to the top of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1345,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1345"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 283,
					"name": "rowPin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pinning state of a row, used to fix it to the top or bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1340,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1340"
						}
					],
					"type": {
						"type": "reference",
						"target": 913,
						"name": "RowPin",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						288,
						287,
						280,
						282,
						285,
						281,
						286,
						284,
						283
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1321,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1321"
				}
			],
			"typeParameters": [
				{
					"id": 289,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 290,
			"name": "RowSectionLayouts",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Organizes the rows into three separate sections: top (pinned), center (scrollable),\n  and bottom (pinned). Used to optimize row virtualization and rendering."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 293,
					"name": "bottom",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Layout information for pinned rows at the bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1388,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1388"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 277,
							"typeArguments": [
								{
									"type": "reference",
									"target": 299,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "RowSectionLayouts.T",
									"refersToTypeParameter": true
								}
							],
							"name": "RowLayout",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 292,
					"name": "center",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Layout information for scrollable rows in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1383,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1383"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 277,
							"typeArguments": [
								{
									"type": "reference",
									"target": 299,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "RowSectionLayouts.T",
									"refersToTypeParameter": true
								}
							],
							"name": "RowLayout",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 296,
					"name": "rowBottomTotalHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cumulative height of all bottom-pinned rows in pixels."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1403,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1403"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 295,
					"name": "rowCenterTotalHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cumulative height of all scrollable center rows in pixels."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1398,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1398"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 298,
					"name": "rowFirstCenter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index of the first center (scrollable) row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1414,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1414"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 297,
					"name": "rowFocusedIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index of the currently focused row, if it exists. Focused rows may\n      appear in the layout even if not otherwise visible."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1409,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1409"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 294,
					"name": "rowTopTotalHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cumulative height of all top-pinned rows in pixels."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1393,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1393"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 291,
					"name": "top",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Layout information for pinned rows at the top of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1378,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1378"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 277,
							"typeArguments": [
								{
									"type": "reference",
									"target": 299,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "RowSectionLayouts.T",
									"refersToTypeParameter": true
								}
							],
							"name": "RowLayout",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						293,
						292,
						296,
						295,
						298,
						297,
						294,
						291
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1374,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1374"
				}
			],
			"typeParameters": [
				{
					"id": 299,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1478,
			"name": "RowSelectAllBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters provided when a \"select all\" operation starts. This event allows the operation to be canceled."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1479,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the selection event represents a deselection.\nIf "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the row was deselected; otherwise, it was selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5087,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5087"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1480,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5092,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5092"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1484,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowSelectAllBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1481,
					"name": "preventDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that, when invoked, prevents all rows from being selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5097,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5097"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1482,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5097,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5097"
								}
							],
							"signatures": [
								{
									"id": 1483,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5097,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5097"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1479,
						1480,
						1481
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5082,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5082"
				}
			],
			"typeParameters": [
				{
					"id": 1484,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1490,
			"name": "RowSelectAllEndParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters passed when a \"select all\" operation completes."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1491,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the selection event represents a deselection.\nIf "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the row was deselected; otherwise, it was selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5122,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5122"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1492,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5127,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5127"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1493,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowSelectAllEndParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1491,
						1492
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5117,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5117"
				}
			],
			"typeParameters": [
				{
					"id": 1493,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1677,
			"name": "RowSelectAllOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for performing bulk selection or deselection of all rows."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Selection"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1678,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, all rows will be deselected rather than selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5952,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5952"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1678
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5948,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5948"
				}
			]
		},
		{
			"id": 1499,
			"name": "RowSelectBeginParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters provided when a row selection begins. This event occurs before the selection change takes effect,\ngiving the caller an opportunity to prevent it."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1502,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the selection event represents a deselection.\nIf "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the row was deselected; otherwise, it was selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5163,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5163"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1501,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5157,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5157"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1506,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowSelectBeginParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1503,
					"name": "preventDefault",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function that, when called, cancels the row selection operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5168,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5168"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1504,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 5168,
									"character": 27,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5168"
								}
							],
							"signatures": [
								{
									"id": 1505,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 5168,
											"character": 27,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5168"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1500,
					"name": "selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the row that was selected or deselected during the selection event."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5152,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5152"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1502,
						1501,
						1503,
						1500
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5148,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5148"
				}
			],
			"typeParameters": [
				{
					"id": 1506,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1512,
			"name": "RowSelectEndParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters passed when a row selection has completed."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1515,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the selection event represents a deselection.\nIf "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", the row was deselected; otherwise, it was selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5203,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5203"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1514,
					"name": "grid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A reference to the LyteNyte Grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5197,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5197"
						}
					],
					"type": {
						"type": "reference",
						"target": 185,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1516,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "RowSelectEndParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "Grid",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1513,
					"name": "selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the row that was selected or deselected during the selection event."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5192,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1515,
						1514,
						1513
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5188,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5188"
				}
			],
			"typeParameters": [
				{
					"id": 1516,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1679,
			"name": "RowSelectOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration options used when performing row selection operations."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Selection"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1683,
					"name": "deselect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the specified row will be deselected instead of selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5979,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5979"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1681,
					"name": "pivot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the pivot row for range selections. Useful for extending selection ranges."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5969,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5969"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1682,
					"name": "selectBetweenPivot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When true, selects the range of rows between the pivot and the selected row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5974,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5974"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1684,
					"name": "selectChildren",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, any child rows associated with the selected row will also be selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5984,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5984"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1680,
					"name": "selected",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the row to be selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5964,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5964"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1683,
						1681,
						1682,
						1684,
						1680
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5960,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5960"
				}
			]
		},
		{
			"id": 1201,
			"name": "ScrollIntoViewOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for the "
					},
					{
						"kind": "code",
						"text": "`scrollIntoView`"
					},
					{
						"kind": "text",
						"text": " API. Allows you to scroll a specific row and/or column into view,\n    ensuring they are visible in the viewport."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid API"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1204,
					"name": "behavior",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the scrolling behavior. \"smooth\" animates the scroll, \"auto\" uses browser default behavior, and \"instant\" jumps immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3754,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3754"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "literal",
								"value": "smooth"
							},
							{
								"type": "literal",
								"value": "instant"
							}
						]
					}
				},
				{
					"id": 1202,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column index, column id, or column object to bring into view. Triggers a horizontal scroll if the column is not currently visible."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3744,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3744"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 355,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1205,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "ScrollIntoViewOptions.T",
										"refersToTypeParameter": true
									}
								],
								"name": "Column",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 1203,
					"name": "row",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The index of the row to bring into view. Triggers a vertical scroll if the row is not currently visible."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3749,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3749"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1204,
						1202,
						1203
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3740,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3740"
				}
			],
			"typeParameters": [
				{
					"id": 1205,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1223,
			"name": "SortCustomSort",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Definition for a user-defined custom sort comparator."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1224,
					"name": "columnId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column identifier associated with the sort. May be null if not defined."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Sort"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3822,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3822"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1226,
					"name": "comparator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The comparator function used for custom sorting."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3832,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3832"
						}
					],
					"type": {
						"type": "reference",
						"target": 1214,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1228,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "SortCustomSort.T",
								"refersToTypeParameter": true
							}
						],
						"name": "SortComparatorFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1225,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for the custom sort type."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3827,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3827"
						}
					],
					"type": {
						"type": "literal",
						"value": "custom"
					}
				},
				{
					"id": 1227,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional configuration for the custom comparator."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3837,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3837"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1226,
						1225,
						1227
					]
				},
				{
					"title": "Sort",
					"children": [
						1224
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3816,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3816"
				}
			],
			"typeParameters": [
				{
					"id": 1228,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1229,
			"name": "SortDateColumnSort",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A built-in date sort model definition."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1230,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for the date sort type."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3849,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3849"
						}
					],
					"type": {
						"type": "literal",
						"value": "date"
					}
				},
				{
					"id": 1231,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional date comparator options."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3854,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3854"
						}
					],
					"type": {
						"type": "reference",
						"target": 1232,
						"name": "SortDateComparatorOptions",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1230,
						1231
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3845,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3845"
				}
			]
		},
		{
			"id": 1232,
			"name": "SortDateComparatorOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options used for date-based sorting."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1238,
					"name": "includeTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include the time portion of the date during comparison."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3878,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3878"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1233,
					"name": "nullsFirst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if null values should appear first in the sort order."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Sort"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3868,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3868"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1234,
					"name": "toIsoDateString",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function to convert a value to an ISO date string."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3873,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3873"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1235,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3873,
									"character": 29,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3873"
								}
							],
							"signatures": [
								{
									"id": 1236,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3873,
											"character": 29,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3873"
										}
									],
									"parameters": [
										{
											"id": 1237,
											"name": "v",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1238,
						1234
					]
				},
				{
					"title": "Sort",
					"children": [
						1233
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3862,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3862"
				}
			]
		},
		{
			"id": 1241,
			"name": "SortModelItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A model item representing an active sort applied to the grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1243,
					"name": "columnId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column identifier associated with the sort. May be null if not defined."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Sort"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3908,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3908"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1244,
					"name": "isDescending",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sort direction is descending."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3913,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3913"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1242,
					"name": "sort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sort type being applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3901,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3901"
						}
					],
					"type": {
						"type": "reference",
						"target": 1239,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1245,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "SortModelItem.T",
								"refersToTypeParameter": true
							}
						],
						"name": "SortGridSorts",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1244,
						1242
					]
				},
				{
					"title": "Sort",
					"children": [
						1243
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3897,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3897"
				}
			],
			"typeParameters": [
				{
					"id": 1245,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1246,
			"name": "SortNumberColumnSort",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A built-in numeric sort model definition."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1247,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for the number sort type."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3925,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3925"
						}
					],
					"type": {
						"type": "literal",
						"value": "number"
					}
				},
				{
					"id": 1248,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional numeric comparator options."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3930,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3930"
						}
					],
					"type": {
						"type": "reference",
						"target": 1249,
						"name": "SortNumberComparatorOptions",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1247,
						1248
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3921,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3921"
				}
			]
		},
		{
			"id": 1249,
			"name": "SortNumberComparatorOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for number-based sorting."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1251,
					"name": "absoluteValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to compare absolute values instead of raw numbers."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3949,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3949"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1250,
					"name": "nullsFirst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if null values should appear first in the sort order."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Sort"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3944,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3944"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1251
					]
				},
				{
					"title": "Sort",
					"children": [
						1250
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3938,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3938"
				}
			]
		},
		{
			"id": 1252,
			"name": "SortStringColumnSort",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A built-in string sort model definition."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1253,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminant for the string sort type."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3961,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3961"
						}
					],
					"type": {
						"type": "literal",
						"value": "string"
					}
				},
				{
					"id": 1254,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional string comparator options."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3966,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3966"
						}
					],
					"type": {
						"type": "reference",
						"target": 1255,
						"name": "SortStringComparatorOptions",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1253,
						1254
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3957,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3957"
				}
			]
		},
		{
			"id": 1255,
			"name": "SortStringComparatorOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options used when sorting string values."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1256,
					"name": "caseInsensitive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether string sorting should ignore case."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3978,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3978"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1260,
					"name": "collator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional Intl.Collator instance to use for string comparison."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3998,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3998"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Intl.Collator"
						},
						"name": "Collator",
						"package": "typescript",
						"qualifiedName": "Intl.Collator"
					}
				},
				{
					"id": 1258,
					"name": "ignorePunctuation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether punctuation should be ignored during sorting."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3988,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3988"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1259,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The locale used for collation-based sorting."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3993,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3993"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1261,
					"name": "nullsFirst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if null values should appear first in the sort order."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Sort"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4005,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4005"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1257,
					"name": "trimWhitespace",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether leading/trailing whitespace should be trimmed before sorting."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3983,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3983"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1256,
						1260,
						1258,
						1259,
						1257
					]
				},
				{
					"title": "Sort",
					"children": [
						1261
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3974,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3974"
				}
			]
		},
		{
			"id": 1,
			"name": "UseLyteNyteProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The initial props that may be passed to the "
					},
					{
						"kind": "code",
						"text": "`useLyteNyte`"
					},
					{
						"kind": "text",
						"text": " hook. The hook\n    returns the state representation of LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid State"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 26,
					"name": "aggModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial aggregation model to apply to LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 133,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L133"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 133,
									"character": 22,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L133"
								}
							],
							"indexSignatures": [
								{
									"id": 28,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 133,
											"character": 24,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L133"
										}
									],
									"parameters": [
										{
											"id": 29,
											"name": "columnId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31,
													"name": "fn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "+types.ts",
															"line": 133,
															"character": 46,
															"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L133"
														}
													],
													"type": {
														"type": "reference",
														"target": 1335,
														"typeArguments": [
															{
																"type": "reference",
																"target": 70,
																"name": "T",
																"package": "@1771technologies/lytenyte-pro",
																"qualifiedName": "UseLyteNyteProps.T",
																"refersToTypeParameter": true
															}
														],
														"name": "AggModelFn",
														"package": "@1771technologies/lytenyte-pro"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31
													]
												}
											],
											"sources": [
												{
													"fileName": "+types.ts",
													"line": 133,
													"character": 44,
													"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L133"
												}
											]
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 22,
					"name": "cellRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The map of named cell renderers that can be referenced by name in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 113,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L113"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 961,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "CellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 69,
					"name": "cellSelectionMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cell selection mode to use."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 311,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L311"
						}
					],
					"type": {
						"type": "reference",
						"target": 1814,
						"name": "CellSelectionMode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 68,
					"name": "cellSelections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial cell selections in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 306,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L306"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1743,
							"name": "DataRect",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 19,
					"name": "colOverscanEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns after the last visible column to render."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 98,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L98"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18,
					"name": "colOverscanStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns before the first visible column to render."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 93,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L93"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14,
					"name": "colScanDistance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of columns LyteNyte Grid should scan when computing layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L73"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3,
					"name": "columnBase",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The base column definition."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"target": 319,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnBase",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 50,
					"name": "columnDoubleClickToAutosize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if double click to autosize a column should be enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 216,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L216"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4,
					"name": "columnGroupDefaultExpansion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default expansion state for column groups if not specified explicitly."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 5,
					"name": "columnGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial expansion state for column groups."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 28,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6,
					"name": "columnGroupJoinDelimiter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A delimiter used to concatenate group paths into a single group id."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 33,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 48,
					"name": "columnMarker",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column marker definition."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 206,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L206"
						}
					],
					"type": {
						"type": "reference",
						"target": 336,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnMarker",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 49,
					"name": "columnMarkerEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the column marker should be visible."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 211,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L211"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 63,
					"name": "columnPivotMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the column pivot mode should be on."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 281,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L281"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 64,
					"name": "columnPivotModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial column pivot model to apply to LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 286,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L286"
						}
					],
					"type": {
						"type": "reference",
						"target": 1771,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "ColumnPivotModel",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 2,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial column definitions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L13"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 355,
							"typeArguments": [
								{
									"type": "reference",
									"target": 70,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "UseLyteNyteProps.T",
									"refersToTypeParameter": true
								}
							],
							"name": "Column",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 7,
					"name": "columnSizeToFit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the grid should size columns to fit the available width."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 38,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 65,
					"name": "dialogFrames",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The dialog frames available in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 291,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L291"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1787,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "DialogFrame",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 47,
					"name": "editCellMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial cell edit mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 201,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L201"
						}
					],
					"type": {
						"type": "reference",
						"target": 1548,
						"name": "EditCellMode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 46,
					"name": "editClickActivator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The mouse interaction that should begin cell editing."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 196,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L196"
						}
					],
					"type": {
						"type": "reference",
						"target": 1549,
						"name": "EditClickActivator",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 44,
					"name": "editRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The edit renderers that may be referenced by name."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 186,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L186"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1552,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "EditRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 45,
					"name": "editRowValidatorFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function for validating grid updates at a row level."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 191,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L191"
						}
					],
					"type": {
						"type": "reference",
						"target": 1569,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "EditRowValidatorFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 67,
					"name": "filterInModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The in (set) filter model to apply to LyteNyte Grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 301,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L301"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1289,
								"name": "FilterIn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 25,
					"name": "filterModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial filter model to apply to the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 128,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L128"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1299,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterModelItem",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 42,
					"name": "floatingCellRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The floating cell renderers that may be referenced by name."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 173,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L173"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1526,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "HeaderFloatingCellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 41,
					"name": "floatingRowEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the floating row should be enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 168,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L168"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 40,
					"name": "floatingRowHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height in px of the floating row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 163,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L163"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10,
					"name": "gridId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the grid instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 53,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43,
					"name": "headerCellRenderers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The header cell renderers that may be referenced by name."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 181,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L181"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1517,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "HeaderCellRendererFn",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9,
					"name": "headerGroupHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height in pixels for the header groups."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 48,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8,
					"name": "headerHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height in pixels that the header should occupy."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 43,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 66,
					"name": "popoverFrames",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The popover frames available in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 296,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L296"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1800,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "PopoverFrame",
								"package": "@1771technologies/lytenyte-pro"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 61,
					"name": "quickSearch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quick search filter value."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 271,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L271"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 62,
					"name": "quickSearchSensitivity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The case sensitivity of the quick search filter."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 276,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L276"
						}
					],
					"type": {
						"type": "reference",
						"target": 1311,
						"name": "FilterQuickSearchSensitivity",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 12,
					"name": "rowAutoHeightGuess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initial height guess for auto-height rows, used before actual measurement."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 63,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 11,
					"name": "rowDataSource",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data source used by LyteNyte Grid to manage and provide row data."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 58,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L58"
						}
					],
					"type": {
						"type": "reference",
						"target": 629,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowDataSource",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 54,
					"name": "rowDetailAutoHeightGuess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial guess of the height of a row detail area before the actual height is observed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 236,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L236"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 53,
					"name": "rowDetailExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial row detail expansion state."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 231,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L231"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 52,
					"name": "rowDetailHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the row detail area."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 226,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L226"
						}
					],
					"type": {
						"type": "reference",
						"target": 1666,
						"name": "RowDetailHeight",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 51,
					"name": "rowDetailRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A function used to render the content for a row detail area."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 221,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L221"
						}
					],
					"type": {
						"type": "reference",
						"target": 1667,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowDetailRendererFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 20,
					"name": "rowFullWidthPredicate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The function predicate used to determine if a row should be rendered as full width."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 103,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L103"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 870,
								"typeArguments": [
									{
										"type": "reference",
										"target": 70,
										"name": "T",
										"package": "@1771technologies/lytenyte-pro",
										"qualifiedName": "UseLyteNyteProps.T",
										"refersToTypeParameter": true
									}
								],
								"name": "RowFullWidthPredicate",
								"package": "@1771technologies/lytenyte-pro"
							}
						]
					}
				},
				{
					"id": 21,
					"name": "rowFullWidthRenderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The renderer used to render the content of a full width row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 108,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L108"
						}
					],
					"type": {
						"type": "reference",
						"target": 880,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowFullWidthRendererFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 32,
					"name": "rowGroupColumn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Template for generating row group columns dynamically."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 138,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L138"
						}
					],
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "reference",
								"target": 70,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseLyteNyteProps.T",
								"refersToTypeParameter": true
							}
						],
						"name": "RowGroupColumn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 35,
					"name": "rowGroupDefaultExpansion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default expansion depth for row groups. Can be a boolean or a depth number."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 153,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L153"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 34,
					"name": "rowGroupDisplayMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row group display mode to use in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 148,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L148"
						}
					],
					"type": {
						"type": "reference",
						"target": 1337,
						"name": "RowGroupDisplayMode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 36,
					"name": "rowGroupExpansions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initial expansion state of specific row groups by row id."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 158,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L158"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 158,
									"character": 32,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L158"
								}
							],
							"indexSignatures": [
								{
									"id": 38,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 158,
											"character": 34,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L158"
										}
									],
									"parameters": [
										{
											"id": 39,
											"name": "rowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 33,
					"name": "rowGroupModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial row group model configuration to apply."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 143,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L143"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1344,
							"typeArguments": [
								{
									"type": "reference",
									"target": 70,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "UseLyteNyteProps.T",
									"refersToTypeParameter": true
								}
							],
							"name": "RowGroupModelItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 13,
					"name": "rowHeight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Row height strategy used by LyteNyte Grid for rendering rows."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 68,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L68"
						}
					],
					"type": {
						"type": "reference",
						"target": 900,
						"name": "RowHeight",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 17,
					"name": "rowOverscanBottom",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rows below the last visible row to render."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 88,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L88"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 16,
					"name": "rowOverscanTop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rows above the first visible row to render."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 83,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L83"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15,
					"name": "rowScanDistance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rows LyteNyte Grid should scan when computing layout."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 78,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58,
					"name": "rowSelectChildren",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the row selection should select children as well."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 256,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L256"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 55,
					"name": "rowSelectedIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial selected row ids."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 241,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L241"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 57,
					"name": "rowSelectionActivator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The mouse interaction that should begin row selection."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 251,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L251"
						}
					],
					"type": {
						"type": "reference",
						"target": 1685,
						"name": "RowSelectionActivator",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 56,
					"name": "rowSelectionMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The row selection mode to use."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 246,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L246"
						}
					],
					"type": {
						"type": "reference",
						"target": 1686,
						"name": "RowSelectionMode",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 23,
					"name": "rtl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to use right-to-left rendering. If false, left-to-right is assumed."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 118,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L118"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 24,
					"name": "sortModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The initial sort model to apply to the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 123,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L123"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1241,
							"typeArguments": [
								{
									"type": "reference",
									"target": 70,
									"name": "T",
									"package": "@1771technologies/lytenyte-pro",
									"qualifiedName": "UseLyteNyteProps.T",
									"refersToTypeParameter": true
								}
							],
							"name": "SortModelItem",
							"package": "@1771technologies/lytenyte-pro"
						}
					}
				},
				{
					"id": 59,
					"name": "virtualizeCols",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the columns in the grid should be virtualized."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 261,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L261"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 60,
					"name": "virtualizeRows",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating if the rows in the grid should be virtualized."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 266,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L266"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						26,
						22,
						69,
						68,
						19,
						18,
						14,
						3,
						50,
						4,
						5,
						6,
						48,
						49,
						63,
						64,
						2,
						7,
						65,
						47,
						46,
						44,
						45,
						67,
						25,
						42,
						41,
						40,
						10,
						43,
						9,
						8,
						66,
						61,
						62,
						12,
						11,
						54,
						53,
						52,
						51,
						20,
						21,
						32,
						35,
						34,
						36,
						33,
						13,
						17,
						16,
						15,
						58,
						55,
						57,
						56,
						23,
						24,
						59,
						60
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 9,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L9"
				}
			],
			"typeParameters": [
				{
					"id": 70,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1736,
			"name": "UseRowDragParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters for configuring drag behavior using a React hook."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1737,
					"name": "getDragData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Function to compute the drag payload when dragging begins."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6227,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6227"
						}
					],
					"type": {
						"type": "reference",
						"target": 1727,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1742,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"qualifiedName": "UseRowDragParams.T",
								"refersToTypeParameter": true
							}
						],
						"name": "GetDragDataFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1740,
					"name": "onDragEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Called at the end of a drag operation, regardless of drop."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6242,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6242"
						}
					],
					"type": {
						"type": "reference",
						"target": 1690,
						"name": "DragEventFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1738,
					"name": "onDragMove",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Invoked frequently as the drag position updates."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6232,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6232"
						}
					],
					"type": {
						"type": "reference",
						"target": 1690,
						"name": "DragEventFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1739,
					"name": "onDragStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Called at the beginning of a drag operation."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6237,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6237"
						}
					],
					"type": {
						"type": "reference",
						"target": 1690,
						"name": "DragEventFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				},
				{
					"id": 1741,
					"name": "onDrop",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Triggered when the drag results in a drop."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6247,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6247"
						}
					],
					"type": {
						"type": "reference",
						"target": 1710,
						"name": "DropEventFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1737,
						1740,
						1738,
						1739,
						1741
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6223,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6223"
				}
			],
			"typeParameters": [
				{
					"id": 1742,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 170,
			"name": "ViewBounds",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the viewport boundaries for rendering rows and columns in LyteNyte Grid.\n  These bounds are calculated based on the scroll position and the visible area of the grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 181,
					"name": "colCenterEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "End index of scrollable columns to render."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 837,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L837"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 182,
					"name": "colCenterLast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index one past the last possible scrollable column in the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 842,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L842"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 180,
					"name": "colCenterStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Start index of scrollable columns to render."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 832,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L832"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 184,
					"name": "colEndEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index one past the last column pinned to the end."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 852,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L852"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 183,
					"name": "colEndStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index of the first column pinned to the end (right side for LTR)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 847,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L847"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 179,
					"name": "colStartEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index one past the last column pinned to the start."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 827,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L827"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 178,
					"name": "colStartStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index of the first column pinned to the start (left side for LTR)."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 822,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L822"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 177,
					"name": "rowBotEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index just past the last bottom-pinned row."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 817,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L817"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 176,
					"name": "rowBotStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index of the first row pinned to the bottom of the grid."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 812,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L812"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 174,
					"name": "rowCenterEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "End index of the scrollable rows that should be rendered."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 802,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L802"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 175,
					"name": "rowCenterLast",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index one past the last possible scrollable row in the dataset."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 807,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L807"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 173,
					"name": "rowCenterStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Start index of the scrollable rows that should be rendered in the viewport."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 797,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L797"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 172,
					"name": "rowTopEnd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index just past the last top-pinned row. Equal to "
							},
							{
								"kind": "code",
								"text": "`1 + number of pinned rows`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 792,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L792"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 171,
					"name": "rowTopStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Index of the first row pinned to the top of the grid. This will always be 0."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 787,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L787"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						181,
						182,
						180,
						184,
						183,
						179,
						178,
						177,
						176,
						174,
						175,
						173,
						172,
						171
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 783,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L783"
				}
			]
		},
		{
			"id": 1206,
			"name": "VirtualTarget",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a virtual DOM target with bounding information, used in situations\n  where a physical DOM element does not exist. Commonly used for positioning popovers\n  or overlays within LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 1213,
					"name": "contextElement",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a context element that acts as a reference for the virtual element.\n      Helps in aligning or calculating relative positions."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3781,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3781"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 1207,
					"name": "getBoundingClientRect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the bounding rectangle representing the virtual target.\n      Equivalent to a DOMRect but without the "
							},
							{
								"kind": "code",
								"text": "`toJSON`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3769,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3769"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1208,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3769,
									"character": 34,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3769"
								}
							],
							"signatures": [
								{
									"id": 1209,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3769,
											"character": 34,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3769"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.dom.d.ts",
													"qualifiedName": "DOMRect"
												},
												"name": "DOMRect",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": "toJSON"
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 1210,
					"name": "getClientRects",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an array of client rectangles for the virtual target, useful\n      for rendering inline tooltips or positioning logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3775,
							"character": 11,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3775"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1211,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3775,
									"character": 28,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3775"
								}
							],
							"signatures": [
								{
									"id": 1212,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3775,
											"character": 28,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3775"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"packageName": "typescript",
														"packagePath": "lib/lib.dom.d.ts",
														"qualifiedName": "DOMRect"
													},
													"name": "DOMRect",
													"package": "typescript"
												},
												{
													"type": "literal",
													"value": "toJSON"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1213,
						1207,
						1210
					]
				}
			],
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3764,
					"character": 17,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3764"
				}
			]
		},
		{
			"id": 1329,
			"name": "AggFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the function signature for custom\n  aggregation logic that computes a result based on grid data."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Grouping"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4608,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4608"
				}
			],
			"typeParameters": [
				{
					"id": 1334,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1330,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4608,
							"character": 23,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4608"
						}
					],
					"signatures": [
						{
							"id": 1331,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1332,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 1334,
													"name": "T",
													"package": "@1771technologies/lytenyte-pro",
													"refersToTypeParameter": true
												},
												{
													"type": "literal",
													"value": null
												}
											]
										}
									}
								},
								{
									"id": 1333,
									"name": "grid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 185,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1334,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "Grid",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 1335,
			"name": "AggModelFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the aggregation model configuration.\n  This can be either a string referencing a built-in\n  aggregation or a custom function."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Grouping"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4626,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4626"
				}
			],
			"typeParameters": [
				{
					"id": 1336,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1329,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1336,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "AggFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 300,
			"name": "AutosizeCellFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function used by LyteNyte Grid to determine the ideal width for a column based\non a representative sample of cell content.\n\nThis is called when autosize is triggered via the grid's API. Returning "
					},
					{
						"kind": "code",
						"text": "`null`"
					},
					{
						"kind": "text",
						"text": "\ndisables sizing behavior."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1426,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1426"
				}
			],
			"typeParameters": [
				{
					"id": 304,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 301,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1426,
							"character": 32,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1426"
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 303,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 305,
										"typeArguments": [
											{
												"type": "reference",
												"target": 304,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "AutosizeCellParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 310,
			"name": "AutosizeHeaderFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function used by LyteNyte Grid to calculate the ideal width for a column header\nbased on the header's rendered content.\n\nThis is called as part of the grid's autosize process."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1467,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1467"
				}
			],
			"typeParameters": [
				{
					"id": 314,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 311,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 1467,
							"character": 34,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1467"
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 313,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 315,
										"typeArguments": [
											{
												"type": "reference",
												"target": 314,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "AutosizeHeaderParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 961,
			"name": "CellRendererFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function that returns a ReactNode representing the rendered content of a cell.\n\nThis function is called once per cell for the associated column. Cell renderers should be\noptimized for performance, as slow renderers may degrade the overall responsiveness of the grid.\n\nAvoid unnecessary re-renders or expensive calculations inside this function."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Rendering"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3273,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3273"
				}
			],
			"typeParameters": [
				{
					"id": 965,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 962,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3273,
							"character": 32,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3273"
						}
					],
					"signatures": [
						{
							"id": 963,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 964,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 966,
										"typeArguments": [
											{
												"type": "reference",
												"target": 965,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "CellRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1814,
			"name": "CellSelectionMode",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies the available modes for cell selection in LyteNyte Grid.\n\nThis is a **PRO-only** feature that controls how users can interact with and select cells:\n\n- "
					},
					{
						"kind": "code",
						"text": "`\"range\"`"
					},
					{
						"kind": "text",
						"text": ": Allows a single rectangular selection of cells.\n- "
					},
					{
						"kind": "code",
						"text": "`\"multi-range\"`"
					},
					{
						"kind": "text",
						"text": ": Enables multiple, possibly overlapping, independent cell selections.\n- "
					},
					{
						"kind": "code",
						"text": "`\"none\"`"
					},
					{
						"kind": "text",
						"text": ": Disables all cell selection interactions.\n\nUseful for enabling features like copy-paste, cell highlighting, and keyboard navigation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Selection"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6634,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6634"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "range"
					},
					{
						"type": "literal",
						"value": "multi-range"
					},
					{
						"type": "literal",
						"value": "none"
					}
				]
			}
		},
		{
			"id": 915,
			"name": "CellSpanFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function that computes the row or column span for a given cell in LyteNyte Grid.\n\nThis function supports both row and column spanning, depending on where it's applied. It must\nreturn a numeric value greater than or equal to "
					},
					{
						"kind": "code",
						"text": "`1`"
					},
					{
						"kind": "text",
						"text": ", indicating how many rows or columns\nthe cell should span.\n\n**Performance Note**: This function is called frequently during layout calculations,\nso it must be fast and efficient to avoid UI lag.\n\n**Consistency Requirement**:\n\nLyteNyte Grid expects spans to be logically consistent and non-overlapping. For instance,\nif a cell at row index 0 returns a span of 3, then the cells at row indices 1 and 2 must\nreturn a span of 1 (i.e. not spanned), as they are covered by the span starting at row 0.\n\nInconsistent or overlapping span calculations may cause layout breakage due to LyteNyte's\nlook-back layout resolution strategy.\n\n**Scan Distance**:\n\nUse the grid's "
					},
					{
						"kind": "code",
						"text": "`rowScanDistance`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`colScanDistance`"
					},
					{
						"kind": "text",
						"text": " properties to define how far\nthe grid should look when resolving spans. These act as guarantees that no span will exceed\nthe specified limits.\n\n**Visibility**:\n\nCells that are spanned over (i.e. covered by another cell's span) will not be rendered and\nare excluded from the layout and DOM. Ensure your span logic accounts for this behavior."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row And Column Spanning"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3093,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3093"
				}
			],
			"typeParameters": [
				{
					"id": 919,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 916,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3093,
							"character": 28,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3093"
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 918,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 920,
										"typeArguments": [
											{
												"type": "reference",
												"target": 919,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "CellSpanFnParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			}
		},
		{
			"id": 410,
			"name": "ColumnGroupVisibility",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Controls the visibility behavior of a column within a column group.\n  - "
					},
					{
						"kind": "code",
						"text": "`\"always\"`"
					},
					{
						"kind": "text",
						"text": ": The column is always visible regardless of the group's state.\n  - "
					},
					{
						"kind": "code",
						"text": "`\"close\"`"
					},
					{
						"kind": "text",
						"text": ": The column is visible only when the group is **collapsed**.\n  - "
					},
					{
						"kind": "code",
						"text": "`\"open\"`"
					},
					{
						"kind": "text",
						"text": ": The column is visible only when the group is **expanded**.\n\nUsed to build dynamic, collapsible column group layouts in LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Groups"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2032,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2032"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "always"
					},
					{
						"type": "literal",
						"value": "close"
					},
					{
						"type": "literal",
						"value": "open"
					}
				]
			}
		},
		{
			"id": 1346,
			"name": "ColumnMoveBeginFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A callback function type for the columnMoveBegin event, fired when a column move starts."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4675,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4675"
				}
			],
			"typeParameters": [
				{
					"id": 1350,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1347,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4675,
							"character": 35,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4675"
						}
					],
					"signatures": [
						{
							"id": 1348,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1349,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1351,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1350,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "ColumnMoveBeginParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1361,
			"name": "ColumnMoveEndFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A callback function type for the columnMoveEnd event, fired when a column move completes."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4724,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4724"
				}
			],
			"typeParameters": [
				{
					"id": 1365,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1362,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4724,
							"character": 33,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4724"
						}
					],
					"signatures": [
						{
							"id": 1363,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1364,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1366,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1365,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "ColumnMoveEndParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 350,
			"name": "ColumnPin",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the possible pinned positions a column can occupy in LyteNyte Grid.\n\nThe actual position is determined by the document's reading direction:\n- In left-to-right (LTR) mode, "
					},
					{
						"kind": "code",
						"text": "`\"start\"`"
					},
					{
						"kind": "text",
						"text": " pins to the left and "
					},
					{
						"kind": "code",
						"text": "`\"end\"`"
					},
					{
						"kind": "text",
						"text": " to the right.\n- In right-to-left (RTL) mode, this behavior is reversed.\n\nThis approach aligns with CSS logical properties for layout direction."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1673,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1673"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "start"
					},
					{
						"type": "literal",
						"value": "end"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1815,
			"name": "DataColumnPivotFetcherFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fetches the set of pivoted columns defined by the grid's current pivot\nconfiguration. The fetcher retrieves metadata for each pivoted column\nindependently from the row data, ensuring that column definitions reflect\nthe active pivot state at the time of the request. This process allows the\ngrid to update column pivots dynamically when the configuration changes or\nwhen multiple pivot definitions are requested concurrently."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6646,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6646"
				}
			],
			"typeParameters": [
				{
					"id": 1819,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1816,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6646,
							"character": 42,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6646"
						}
					],
					"signatures": [
						{
							"id": 1817,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1818,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1820,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1819,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "DataColumnPivotFetcherParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 355,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1819,
													"name": "T",
													"package": "@1771technologies/lytenyte-pro",
													"refersToTypeParameter": true
												}
											],
											"name": "Column",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 1825,
			"name": "DataFetcherFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function used by LyteNyte Grid's server row data source to fetch blocks of row\ndata slices from the server. This function must be implemented by the developer,\nand LyteNyte Grid will call it whenever the view in the grid changes.\n\nThe function receives a "
					},
					{
						"kind": "code",
						"text": "`DataFetcherParams`"
					},
					{
						"kind": "text",
						"text": " object that contains all the\ninformation required to construct a server request. This includes the set of\n"
					},
					{
						"kind": "code",
						"text": "`DataRequest`"
					},
					{
						"kind": "text",
						"text": " objects for the current view, a snapshot of the grid state\n("
					},
					{
						"kind": "code",
						"text": "`DataRequestModel`"
					},
					{
						"kind": "text",
						"text": "), and a "
					},
					{
						"kind": "code",
						"text": "`reqTime`"
					},
					{
						"kind": "text",
						"text": " value marking when the request was\ninitiated.\n\nBy providing both the request details and the current grid model, LyteNyte Grid\nensures that the server can return data consistent with the user's view. This\nallows developers to handle sorting, filtering, grouping, pivoting, and\naggregation on the server side while keeping the grid synchronized.\n\nThe function must return a promise that resolves to an array of "
					},
					{
						"kind": "code",
						"text": "`DataResponse`"
					},
					{
						"kind": "text",
						"text": "\nor "
					},
					{
						"kind": "code",
						"text": "`DataResponsePinned`"
					},
					{
						"kind": "text",
						"text": " objects, which describe the rows and metadata needed\nto render the grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6717,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6717"
				}
			],
			"typeParameters": [
				{
					"id": 1829,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1826,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6717,
							"character": 31,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6717"
						}
					],
					"signatures": [
						{
							"id": 1827,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1828,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1830,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1829,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "DataFetcherParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 1867,
													"name": "DataResponse",
													"package": "@1771technologies/lytenyte-pro"
												},
												{
													"type": "reference",
													"target": 1885,
													"name": "DataResponsePinned",
													"package": "@1771technologies/lytenyte-pro"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 1836,
			"name": "DataInFilterItemFetcherFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Retrieves the unique items used in \"in\" filters from the server-side data\nsource. This fetch ensures that filter options reflect the actual distinct\nvalues stored on the server for the specified column."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6802,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6802"
				}
			],
			"typeParameters": [
				{
					"id": 1840,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1837,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6802,
							"character": 43,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6802"
						}
					],
					"signatures": [
						{
							"id": 1838,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1839,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1841,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1840,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "DataInFilterItemFetcherParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1293,
													"name": "FilterInFilterItem",
													"package": "@1771technologies/lytenyte-pro"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1293,
											"name": "FilterInFilterItem",
											"package": "@1771technologies/lytenyte-pro"
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 1790,
			"name": "DialogFrameRenderer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function responsible for rendering a dialog component.\n\n  LyteNyte Grid does not provide a dialog component by default. Instead, it expects\n  developers to use their preferred dialog libraries. This renderer function receives\n  control parameters and should return a valid ReactNode to render as a dialog.\n\n  Note: The dialog component used should support controlled open/close behavior."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6519,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6519"
				}
			],
			"typeParameters": [
				{
					"id": 1794,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1791,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6519,
							"character": 37,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6519"
						}
					],
					"signatures": [
						{
							"id": 1792,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1793,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1795,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1794,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "DialogFrameRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1690,
			"name": "DragEventFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Callback function executed during a drag event."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6031,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6031"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1691,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6031,
							"character": 26,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6031"
						}
					],
					"signatures": [
						{
							"id": 1692,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1693,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1694,
										"name": "DragEventParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1698,
			"name": "DragPlaceholderFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function to render the drag placeholder UI. This UI\n  is rendered in isolation and does not respond to app state changes."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6066,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6066"
				}
			],
			"typeParameters": [
				{
					"id": 1702,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1699,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6066,
							"character": 35,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6066"
						}
					],
					"signatures": [
						{
							"id": 1700,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1701,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1703,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1702,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "DragPlaceholderParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 1710,
			"name": "DropEventFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fired when a drop action is finalized and the dragged element is released over a drop zone."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6112,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6112"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1711,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6112,
							"character": 26,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6112"
						}
					],
					"signatures": [
						{
							"id": 1712,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1713,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1714,
										"name": "DropEventParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1598,
			"name": "Editable",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A column-level property that controls editability of cells.\n\n- Use "
					},
					{
						"kind": "code",
						"text": "`true`"
					},
					{
						"kind": "text",
						"text": " to enable editing for all rows.\n- Use "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditableFn",
						"target": 1600
					},
					{
						"kind": "text",
						"text": " for conditional, row-specific editability."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5566,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5566"
				}
			],
			"typeParameters": [
				{
					"id": 1599,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "reference",
						"target": 1600,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1599,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "EditableFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1600,
			"name": "EditableFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A predicate function that determines whether a particular cell is editable.\n\nIf cell editing is enabled in LyteNyte Grid, this function is evaluated per cell. Use\n"
					},
					{
						"kind": "code",
						"text": "`true`"
					},
					{
						"kind": "text",
						"text": " for globally editable columns or "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditableFn",
						"target": 1600
					},
					{
						"kind": "text",
						"text": " for row-specific logic."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5576,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5576"
				}
			],
			"typeParameters": [
				{
					"id": 1604,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1601,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5576,
							"character": 28,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5576"
						}
					],
					"signatures": [
						{
							"id": 1602,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1603,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1605,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1604,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "EditableFnParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 1373,
			"name": "EditBegin",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event fired when a cell begins editing. This provides an opportunity to cancel the edit before any changes are made."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4768,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4768"
				}
			],
			"typeParameters": [
				{
					"id": 1377,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1374,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4768,
							"character": 27,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4768"
						}
					],
					"signatures": [
						{
							"id": 1375,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1376,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1611,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1377,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "OnEditBeginParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1378,
			"name": "EditCancel",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event fired when an in-progress cell edit is canceled. Most commonly triggered by user interaction, such as pressing the Escape key."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4780,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4780"
				}
			],
			"typeParameters": [
				{
					"id": 1382,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1379,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4780,
							"character": 28,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4780"
						}
					],
					"signatures": [
						{
							"id": 1380,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1381,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1618,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1382,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "OnEditCancelParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1548,
			"name": "EditCellMode",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Controls whether a grid operates in inline editing mode:\n\n- "
					},
					{
						"kind": "code",
						"text": "`\"cell\"`"
					},
					{
						"kind": "text",
						"text": ": Editing is active and inline\n- "
					},
					{
						"kind": "code",
						"text": "`\"readonly\"`"
					},
					{
						"kind": "text",
						"text": ": Editing is disabled entirely"
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5336,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5336"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "cell"
					},
					{
						"type": "literal",
						"value": "readonly"
					}
				]
			}
		},
		{
			"id": 1549,
			"name": "EditClickActivator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies what kind of mouse interaction should initiate editing:\n\n- "
					},
					{
						"kind": "code",
						"text": "`\"single\"`"
					},
					{
						"kind": "text",
						"text": ": Single click\n- "
					},
					{
						"kind": "code",
						"text": "`\"double-click\"`"
					},
					{
						"kind": "text",
						"text": ": Double click\n- "
					},
					{
						"kind": "code",
						"text": "`\"none\"`"
					},
					{
						"kind": "text",
						"text": ": Editing must be started via API or programmatically"
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5348,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5348"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "single"
					},
					{
						"type": "literal",
						"value": "double-click"
					},
					{
						"type": "literal",
						"value": "none"
					}
				]
			}
		},
		{
			"id": 1383,
			"name": "EditEnd",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event fired when a cell finishes editing successfully (i.e., without error or cancellation)."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4792,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4792"
				}
			],
			"typeParameters": [
				{
					"id": 1387,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1384,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4792,
							"character": 25,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4792"
						}
					],
					"signatures": [
						{
							"id": 1385,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1386,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1623,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1387,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "OnEditEndParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1388,
			"name": "EditError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event fired when an error occurs during cell editing—either due to validation failure or runtime exception."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4804,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4804"
				}
			],
			"typeParameters": [
				{
					"id": 1392,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1389,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4804,
							"character": 27,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4804"
						}
					],
					"signatures": [
						{
							"id": 1390,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1391,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1628,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1392,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "OnEditErrorParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1550,
			"name": "EditRenderer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the edit renderer for a column.\n\nCan be either:\n- A string key referencing a registered editor component\n- A function of type "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "EditRendererFn",
						"target": 1552
					},
					{
						"kind": "text",
						"text": " for custom rendering logic"
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5359,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5359"
				}
			],
			"typeParameters": [
				{
					"id": 1551,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1552,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1551,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "EditRendererFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1552,
			"name": "EditRendererFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function that returns a React component to be rendered in edit mode for a given cell.\n\nUsed for customizing editing UI. If omitted, a default HTML input will be used."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5368,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5368"
				}
			],
			"typeParameters": [
				{
					"id": 1556,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1553,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5368,
							"character": 32,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5368"
						}
					],
					"signatures": [
						{
							"id": 1554,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1555,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1557,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1556,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "EditRendererFnParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1569,
			"name": "EditRowValidatorFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function that validates a fully edited row.\n\nSupports synchronous or object-based results for per-column validation. Must return:\n\n- "
					},
					{
						"kind": "code",
						"text": "`true`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`null`"
					},
					{
						"kind": "text",
						"text": " if the row is valid\n- "
					},
					{
						"kind": "code",
						"text": "`false`"
					},
					{
						"kind": "text",
						"text": " or a "
					},
					{
						"kind": "code",
						"text": "`Record<string, any>`"
					},
					{
						"kind": "text",
						"text": " describing errors if invalid"
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5443,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5443"
				}
			],
			"typeParameters": [
				{
					"id": 1573,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1570,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5443,
							"character": 36,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5443"
						}
					],
					"signatures": [
						{
							"id": 1571,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1572,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1574,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1573,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "EditRowValidatorFnParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 1580,
			"name": "EditSetterFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function that returns a new row object based on the edited cell value.\n\nRequired when dealing with nested, computed, or non-primitive values that the grid\ncannot update automatically."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Cell Edit"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5487,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5487"
				}
			],
			"typeParameters": [
				{
					"id": 1584,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1581,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5487,
							"character": 30,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5487"
						}
					],
					"signatures": [
						{
							"id": 1582,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1583,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1585,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1584,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "EditSetterParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			}
		},
		{
			"id": 1754,
			"name": "ExportDataRectFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Signature for the function that exports a DataRect from the grid.\n\nCalled via the LyteNyte Grid API when exporting a selection of cells."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Export"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6323,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6323"
				}
			],
			"typeParameters": [
				{
					"id": 1758,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1755,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6323,
							"character": 34,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6323"
						}
					],
					"signatures": [
						{
							"id": 1756,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1757,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1759,
										"name": "ExportDataRectParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1762,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1758,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "ExportDataRectResult",
										"package": "@1771technologies/lytenyte-pro"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 959,
			"name": "Field",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies the various forms that a column field may take.\n\n- A primitive value ("
					},
					{
						"kind": "code",
						"text": "`string`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`number`"
					},
					{
						"kind": "text",
						"text": ")\n- A path-based accessor\n- A custom function for dynamic computation"
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3261,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3261"
				}
			],
			"typeParameters": [
				{
					"id": 960,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 945,
						"name": "FieldPath",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 935,
						"typeArguments": [
							{
								"type": "reference",
								"target": 960,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "FieldFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 926,
			"name": "FieldDataParam",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the two forms of data that can be passed into functions like sort comparators.\n\n  These are partial views of the row:\n  - A "
					},
					{
						"kind": "code",
						"text": "`leaf`"
					},
					{
						"kind": "text",
						"text": " form, representing actual row-level data ("
					},
					{
						"kind": "code",
						"text": "`T | null`"
					},
					{
						"kind": "text",
						"text": ")\n  - A "
					},
					{
						"kind": "code",
						"text": "`branch`"
					},
					{
						"kind": "text",
						"text": " form, representing nested row structures with a key lookup\n\n  Note: These do not include attributes like "
					},
					{
						"kind": "code",
						"text": "`rowId`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`rowIndex`"
					},
					{
						"kind": "text",
						"text": " as those may not be available yet."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3147,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3147"
				}
			],
			"typeParameters": [
				{
					"id": 934,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 927,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 929,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3148,
											"character": 20,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3148"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 934,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 928,
									"name": "kind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3148,
											"character": 6,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3148"
										}
									],
									"type": {
										"type": "literal",
										"value": "leaf"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										929,
										928
									]
								}
							],
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3148,
									"character": 4,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3148"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 930,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 932,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3149,
											"character": 22,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3149"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 933,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3149,
											"character": 53,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3149"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 931,
									"name": "kind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3149,
											"character": 6,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3149"
										}
									],
									"type": {
										"type": "literal",
										"value": "branch"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										932,
										933,
										931
									]
								}
							],
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3149,
									"character": 4,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3149"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 935,
			"name": "FieldFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A dynamic field function used to derive values for a column.\n\n  This function may be invoked repeatedly, once per cell per column, so it must be optimized for efficiency."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3158,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3158"
				}
			],
			"typeParameters": [
				{
					"id": 939,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 936,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3158,
							"character": 25,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3158"
						}
					],
					"signatures": [
						{
							"id": 937,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 938,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 940,
										"typeArguments": [
											{
												"type": "reference",
												"target": 939,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "FieldFnParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 957,
			"name": "FieldRowGroup",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the acceptable formats for row group fields.\n  Includes primitives, path-based accessors, or a custom function for grouping behavior."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3250,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3250"
				}
			],
			"typeParameters": [
				{
					"id": 958,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 945,
						"name": "FieldPath",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 948,
						"typeArguments": [
							{
								"type": "reference",
								"target": 958,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "FieldRowGroupFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 948,
			"name": "FieldRowGroupFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function used to derive row grouping values distinct from cell display values.\n\n  Ideal for customizing how rows are grouped in the UI or logic layer."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Field"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3218,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3218"
				}
			],
			"typeParameters": [
				{
					"id": 952,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 949,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3218,
							"character": 33,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3218"
						}
					],
					"signatures": [
						{
							"id": 950,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 951,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 953,
										"typeArguments": [
											{
												"type": "reference",
												"target": 952,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "FieldRowGroupParamsFn",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 1266,
			"name": "FilterCombinationOperator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Logical operators used to join multiple filters inside a combination filter."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4046,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4046"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "AND"
					},
					{
						"type": "literal",
						"value": "OR"
					}
				]
			}
		},
		{
			"id": 1272,
			"name": "FilterDateOperator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Set of valid comparison operators for evaluating date-based filters.\n\nThese operators support both fixed comparisons (e.g., \"equals\", \"before\") and dynamic\nrelative date expressions (e.g., \"n_days_ago\", \"last_week\", \"is_weekend\").\n\nThe required type of the "
					},
					{
						"kind": "code",
						"text": "`value`"
					},
					{
						"kind": "text",
						"text": " field depends on the selected operator."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4106,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4106"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "equals"
					},
					{
						"type": "literal",
						"value": "not_equals"
					},
					{
						"type": "literal",
						"value": "before"
					},
					{
						"type": "literal",
						"value": "before_or_equals"
					},
					{
						"type": "literal",
						"value": "after"
					},
					{
						"type": "literal",
						"value": "after_or_equals"
					},
					{
						"type": "literal",
						"value": "year_to_date"
					},
					{
						"type": "literal",
						"value": "this_week"
					},
					{
						"type": "literal",
						"value": "this_month"
					},
					{
						"type": "literal",
						"value": "this_year"
					},
					{
						"type": "literal",
						"value": "last_week"
					},
					{
						"type": "literal",
						"value": "last_month"
					},
					{
						"type": "literal",
						"value": "last_year"
					},
					{
						"type": "literal",
						"value": "next_week"
					},
					{
						"type": "literal",
						"value": "next_month"
					},
					{
						"type": "literal",
						"value": "next_year"
					},
					{
						"type": "literal",
						"value": "today"
					},
					{
						"type": "literal",
						"value": "tomorrow"
					},
					{
						"type": "literal",
						"value": "yesterday"
					},
					{
						"type": "literal",
						"value": "week_of_year"
					},
					{
						"type": "literal",
						"value": "quarter_of_year"
					},
					{
						"type": "literal",
						"value": "is_weekend"
					},
					{
						"type": "literal",
						"value": "is_weekday"
					},
					{
						"type": "literal",
						"value": "n_days_ago"
					},
					{
						"type": "literal",
						"value": "n_days_ahead"
					},
					{
						"type": "literal",
						"value": "n_weeks_ago"
					},
					{
						"type": "literal",
						"value": "n_weeks_ahead"
					},
					{
						"type": "literal",
						"value": "n_months_ago"
					},
					{
						"type": "literal",
						"value": "n_months_ahead"
					},
					{
						"type": "literal",
						"value": "n_years_ago"
					},
					{
						"type": "literal",
						"value": "n_years_ahead"
					}
				]
			}
		},
		{
			"id": 1276,
			"name": "FilterFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function-based filter used for advanced filtering logic that cannot\nbe represented using built-in filter types.\n\nThe function should return "
					},
					{
						"kind": "code",
						"text": "`true`"
					},
					{
						"kind": "text",
						"text": " to keep a row or "
					},
					{
						"kind": "code",
						"text": "`false`"
					},
					{
						"kind": "text",
						"text": " to filter it out."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4178,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4178"
				}
			],
			"typeParameters": [
				{
					"id": 1280,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1277,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4178,
							"character": 26,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4178"
						}
					],
					"signatures": [
						{
							"id": 1278,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1279,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1281,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1280,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "FilterFnParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 1298,
			"name": "FilterInOperator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The valid operators for an "
					},
					{
						"kind": "code",
						"text": "`in`"
					},
					{
						"kind": "text",
						"text": " filter.\n\n- "
					},
					{
						"kind": "code",
						"text": "`\"in\"`"
					},
					{
						"kind": "text",
						"text": ": Tests for inclusion in the set.\n- "
					},
					{
						"kind": "code",
						"text": "`\"not_in\"`"
					},
					{
						"kind": "text",
						"text": ": Tests for exclusion from the set."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4297,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4297"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "in"
					},
					{
						"type": "literal",
						"value": "not_in"
					}
				]
			}
		},
		{
			"id": 1299,
			"name": "FilterModelItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The full set of filter types available in the LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4304,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4304"
				}
			],
			"typeParameters": [
				{
					"id": 1300,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1301,
						"name": "FilterNumber",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1312,
						"name": "FilterString",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1267,
						"name": "FilterDate",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1262,
						"name": "FilterCombination",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1285,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1300,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterFunc",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1306,
			"name": "FilterNumberOperator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Logical operators available for number-based filtering.\nThese correspond to the traditional comparison operators, "
					},
					{
						"kind": "code",
						"text": "`>, <=`"
					},
					{
						"kind": "text",
						"text": ", etc."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4354,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4354"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "greater_than"
					},
					{
						"type": "literal",
						"value": "greater_than_or_equals"
					},
					{
						"type": "literal",
						"value": "less_than"
					},
					{
						"type": "literal",
						"value": "less_than_or_equals"
					},
					{
						"type": "literal",
						"value": "equals"
					},
					{
						"type": "literal",
						"value": "not_equals"
					}
				]
			}
		},
		{
			"id": 1311,
			"name": "FilterQuickSearchSensitivity",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Sensitivity mode for the quick search functionality.\n\n- "
					},
					{
						"kind": "code",
						"text": "`\"case-sensitive\"`"
					},
					{
						"kind": "text",
						"text": ": Exact matches required.\n- "
					},
					{
						"kind": "code",
						"text": "`\"case-insensitive\"`"
					},
					{
						"kind": "text",
						"text": ": Case differences are ignored."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4406,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4406"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "case-sensitive"
					},
					{
						"type": "literal",
						"value": "case-insensitive"
					}
				]
			}
		},
		{
			"id": 1320,
			"name": "FilterStringOperator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of operators available for string filtering.\n\nThese include comparison operators (e.g., \"equals\"), substring checks (e.g., \"contains\"), and\nlength-based checks (e.g., \"length_less_than\"). Some operators require a numeric "
					},
					{
						"kind": "code",
						"text": "`value`"
					},
					{
						"kind": "text",
						"text": "\n(e.g., those dealing with string length)."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4478,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4478"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "equals"
					},
					{
						"type": "literal",
						"value": "not_equals"
					},
					{
						"type": "literal",
						"value": "less_than"
					},
					{
						"type": "literal",
						"value": "less_than_or_equals"
					},
					{
						"type": "literal",
						"value": "greater_than"
					},
					{
						"type": "literal",
						"value": "greater_than_or_equals"
					},
					{
						"type": "literal",
						"value": "begins_with"
					},
					{
						"type": "literal",
						"value": "not_begins_with"
					},
					{
						"type": "literal",
						"value": "ends_with"
					},
					{
						"type": "literal",
						"value": "not_ends_with"
					},
					{
						"type": "literal",
						"value": "contains"
					},
					{
						"type": "literal",
						"value": "not_contains"
					},
					{
						"type": "literal",
						"value": "length"
					},
					{
						"type": "literal",
						"value": "not_length"
					},
					{
						"type": "literal",
						"value": "matches"
					},
					{
						"type": "literal",
						"value": "length_less_than"
					},
					{
						"type": "literal",
						"value": "length_less_than_or_equals"
					},
					{
						"type": "literal",
						"value": "length_greater_than"
					},
					{
						"type": "literal",
						"value": "length_greater_than_or_equals"
					}
				]
			}
		},
		{
			"id": 987,
			"name": "FocusCellParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The accepted input types for the "
					},
					{
						"kind": "code",
						"text": "`focusCell`"
					},
					{
						"kind": "text",
						"text": " method, which updates the active focus in LyteNyte Grid.\nSupports various formats:\n\n- A row/column pair to focus a specific cell.\n- A header or group header cell position.\n- A directional alias (\"next\", \"prev\", \"up\", \"down\") relative to the current focus (only when the grid is focused)."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid API"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3392,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3392"
				}
			],
			"typeParameters": [
				{
					"id": 991,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 988,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 990,
									"name": "column",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3393,
											"character": 19,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3393"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": 355,
												"typeArguments": [
													{
														"type": "reference",
														"target": 991,
														"name": "T",
														"package": "@1771technologies/lytenyte-pro",
														"refersToTypeParameter": true
													}
												],
												"name": "Column",
												"package": "@1771technologies/lytenyte-pro"
											}
										]
									}
								},
								{
									"id": 989,
									"name": "row",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3393,
											"character": 6,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3393"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										990,
										989
									]
								}
							],
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 3393,
									"character": 4,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3393"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 1656,
						"name": "PositionHeaderCell",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1659,
								"name": "PositionHeaderGroupCell",
								"package": "@1771technologies/lytenyte-pro"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "columnStartIndex"
									},
									{
										"type": "literal",
										"value": "columnEndIndex"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": "next"
					},
					{
						"type": "literal",
						"value": "prev"
					},
					{
						"type": "literal",
						"value": "up"
					},
					{
						"type": "literal",
						"value": "down"
					}
				]
			}
		},
		{
			"id": 1727,
			"name": "GetDragDataFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function used to provide the data that will be associated with a drag operation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Drag"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6193,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6193"
				}
			],
			"typeParameters": [
				{
					"id": 1731,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1728,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6193,
							"character": 31,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6193"
						}
					],
					"signatures": [
						{
							"id": 1729,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1730,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1732,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1731,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "GetDragDataParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1687,
								"name": "DragData",
								"package": "@1771technologies/lytenyte-pro"
							}
						}
					]
				}
			}
		},
		{
			"id": 1537,
			"name": "HeaderCellRenderer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Header cell renderer reference. This may be a registered renderer\n  name (string) or a renderer function. If a string is used, it should match a renderer registered in the grid state."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Header"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5284,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5284"
				}
			],
			"typeParameters": [
				{
					"id": 1538,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1517,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1538,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellRendererFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1517,
			"name": "HeaderCellRendererFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function used to render the content of a header cell.\n  It receives renderer parameters and returns a ReactNode to render."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Header"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5212,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5212"
				}
			],
			"typeParameters": [
				{
					"id": 1521,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1518,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5212,
							"character": 38,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5212"
						}
					],
					"signatures": [
						{
							"id": 1519,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1520,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1522,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1521,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "HeaderCellRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1535,
			"name": "HeaderFloatingCellRenderer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Floating header cell renderer reference. Can be a string\n  referencing a registered floating renderer or a function used directly by the column."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Header"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5274,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5274"
				}
			],
			"typeParameters": [
				{
					"id": 1536,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1526,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1536,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderFloatingCellRendererFn",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1526,
			"name": "HeaderFloatingCellRendererFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Renderer function for floating header cells. Returns the visual\n  contents for floating headers using provided parameters."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Column Header"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5243,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5243"
				}
			],
			"typeParameters": [
				{
					"id": 1530,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1527,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5243,
							"character": 46,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5243"
						}
					],
					"signatures": [
						{
							"id": 1528,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1529,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1531,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1530,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "HeaderFloatingCellRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 246,
			"name": "HeaderLayoutCell",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a union of all possible header layout cell types:\n  normal header, floating header, or header group."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1163,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1163"
				}
			],
			"typeParameters": [
				{
					"id": 247,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 194,
						"typeArguments": [
							{
								"type": "reference",
								"target": 247,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellLayout",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 208,
						"typeArguments": [
							{
								"type": "reference",
								"target": 247,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "HeaderCellFloating",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 222,
						"name": "HeaderGroupCellLayout",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1328,
			"name": "Locale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The supported locale identifiers for string filtering and collation.\n\nUsed to configure internationalized string comparison behavior."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Filters"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4559,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4559"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "en-US"
					},
					{
						"type": "literal",
						"value": "en-GB"
					},
					{
						"type": "literal",
						"value": "en-CA"
					},
					{
						"type": "literal",
						"value": "en-AU"
					},
					{
						"type": "literal",
						"value": "en-IN"
					},
					{
						"type": "literal",
						"value": "fr-FR"
					},
					{
						"type": "literal",
						"value": "fr-CA"
					},
					{
						"type": "literal",
						"value": "fr-BE"
					},
					{
						"type": "literal",
						"value": "fr-CH"
					},
					{
						"type": "literal",
						"value": "es-ES"
					},
					{
						"type": "literal",
						"value": "es-MX"
					},
					{
						"type": "literal",
						"value": "es-AR"
					},
					{
						"type": "literal",
						"value": "es-CO"
					},
					{
						"type": "literal",
						"value": "zh-CN"
					},
					{
						"type": "literal",
						"value": "zh-TW"
					},
					{
						"type": "literal",
						"value": "zh-HK"
					},
					{
						"type": "literal",
						"value": "zh-Hant"
					},
					{
						"type": "literal",
						"value": "zh-Hans"
					},
					{
						"type": "literal",
						"value": "ar-SA"
					},
					{
						"type": "literal",
						"value": "ar-EG"
					},
					{
						"type": "literal",
						"value": "ar-AE"
					},
					{
						"type": "literal",
						"value": "de-DE"
					},
					{
						"type": "literal",
						"value": "de-AT"
					},
					{
						"type": "literal",
						"value": "de-CH"
					},
					{
						"type": "literal",
						"value": "ja-JP"
					},
					{
						"type": "literal",
						"value": "ko-KR"
					},
					{
						"type": "literal",
						"value": "hi-IN"
					},
					{
						"type": "literal",
						"value": "pt-BR"
					},
					{
						"type": "literal",
						"value": "pt-PT"
					},
					{
						"type": "literal",
						"value": "ru-RU"
					},
					{
						"type": "literal",
						"value": "uk-UA"
					},
					{
						"type": "literal",
						"value": "pl-PL"
					},
					{
						"type": "literal",
						"value": "it-IT"
					},
					{
						"type": "literal",
						"value": "nl-NL"
					},
					{
						"type": "literal",
						"value": "sv-SE"
					},
					{
						"type": "literal",
						"value": "tr-TR"
					},
					{
						"type": "literal",
						"value": "th-TH"
					},
					{
						"type": "literal",
						"value": "vi-VN"
					},
					{
						"type": "literal",
						"value": "he-IL"
					},
					{
						"type": "literal",
						"value": "fa-IR"
					},
					{
						"type": "literal",
						"value": "el-GR"
					}
				]
			}
		},
		{
			"id": 1803,
			"name": "PopoverFrameRenderer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function that renders a popover component for a given context.\n\n  LyteNyte Grid does not include a built-in popover renderer. Developers must use their\n  own popover UI libraries and integrate them by implementing this renderer interface."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Frames"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6579,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6579"
				}
			],
			"typeParameters": [
				{
					"id": 1807,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1804,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 6579,
							"character": 38,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6579"
						}
					],
					"signatures": [
						{
							"id": 1805,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1806,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1808,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1807,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "PopoverFrameRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1665,
			"name": "PositionUnion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Union of all valid focusable positions in the grid: cells, headers, full width rows, etc."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Navigation"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5889,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5889"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1646,
						"name": "PositionGridCell",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1639,
						"name": "PositionFloatingCell",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1656,
						"name": "PositionHeaderCell",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1635,
						"name": "PositionDetailCell",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1642,
						"name": "PositionFullWidthRow",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1659,
						"name": "PositionHeaderGroupCell",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 1412,
			"name": "RowDetailExpansionBegin",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event fired when the row detail expansion process begins. This provides an opportunity to cancel expansion before it takes effect."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4908,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4908"
				}
			],
			"typeParameters": [
				{
					"id": 1416,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1413,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4908,
							"character": 41,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4908"
						}
					],
					"signatures": [
						{
							"id": 1414,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1415,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1417,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1416,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowDetailExpansionBeginParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1424,
			"name": "RowDetailExpansionEnd",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event fired after the row detail expansion completes successfully."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4943,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4943"
				}
			],
			"typeParameters": [
				{
					"id": 1428,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1425,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4943,
							"character": 39,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4943"
						}
					],
					"signatures": [
						{
							"id": 1426,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1427,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1429,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1428,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowDetailExpansionEndParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1666,
			"name": "RowDetailHeight",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies the height of the row detail section.\n  Can be a fixed number of pixels or \"auto\" to size based on content."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5903,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5903"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "literal",
						"value": "auto"
					}
				]
			}
		},
		{
			"id": 1667,
			"name": "RowDetailRendererFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A function used to render custom row detail content.\n  It should return a ReactNode to be displayed in the row's\n  expanded detail area."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Data Source"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5912,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5912"
				}
			],
			"typeParameters": [
				{
					"id": 1671,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1668,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5912,
							"character": 37,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5912"
						}
					],
					"signatures": [
						{
							"id": 1669,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1670,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1672,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1671,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowDetailRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1438,
			"name": "RowExpandBeginFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Event handler function type for the "
					},
					{
						"kind": "code",
						"text": "`rowExpandBegin`"
					},
					{
						"kind": "text",
						"text": " event. Triggered before row group expansion, allowing you to cancel the operation."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4985,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4985"
				}
			],
			"typeParameters": [
				{
					"id": 1442,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1439,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4985,
							"character": 34,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4985"
						}
					],
					"signatures": [
						{
							"id": 1440,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1441,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1443,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1442,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowExpandBeginParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1453,
			"name": "RowExpandErrorFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Event handler function type for the "
					},
					{
						"kind": "code",
						"text": "`rowExpandError`"
					},
					{
						"kind": "text",
						"text": " event. Called when row group expansion fails due to an error."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5019,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5019"
				}
			],
			"typeParameters": [
				{
					"id": 1457,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1454,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5019,
							"character": 34,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5019"
						}
					],
					"signatures": [
						{
							"id": 1455,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1456,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1458,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1457,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowExpandErrorParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1433,
			"name": "RowExpandFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Event handler function type for the "
					},
					{
						"kind": "code",
						"text": "`rowExpand`"
					},
					{
						"kind": "text",
						"text": " event. Called when row group expansion is successfully completed."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4973,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4973"
				}
			],
			"typeParameters": [
				{
					"id": 1437,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1434,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 4973,
							"character": 29,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4973"
						}
					],
					"signatures": [
						{
							"id": 1435,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1436,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1466,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1437,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowExpandParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 870,
			"name": "RowFullWidthPredicate",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Predicate function to determine if a row should render in full-width mode.\nCommonly used for custom summary or grouped views."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2862,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2862"
				}
			],
			"typeParameters": [
				{
					"id": 874,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 871,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2862,
							"character": 39,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2862"
						}
					],
					"signatures": [
						{
							"id": 872,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 873,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 875,
										"typeArguments": [
											{
												"type": "reference",
												"target": 874,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowFullWidthPredicateParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 880,
			"name": "RowFullWidthRendererFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function to render the full-width row content. Returns a ReactNode to be rendered as the row."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2897,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2897"
				}
			],
			"typeParameters": [
				{
					"id": 884,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 881,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 2897,
							"character": 40,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2897"
						}
					],
					"signatures": [
						{
							"id": 882,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 883,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 885,
										"typeArguments": [
											{
												"type": "reference",
												"target": 884,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowFullWidthRendererParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@types/react",
									"packagePath": "index.d.ts",
									"qualifiedName": "React.ReactNode"
								},
								"name": "ReactNode",
								"package": "@types/react",
								"qualifiedName": "React.ReactNode"
							}
						}
					]
				}
			}
		},
		{
			"id": 1337,
			"name": "RowGroupDisplayMode",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Enumerates the display modes available for\n  row groups in LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Grouping"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4634,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4634"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "single-column"
					},
					{
						"type": "literal",
						"value": "multi-column"
					},
					{
						"type": "literal",
						"value": "custom"
					}
				]
			}
		},
		{
			"id": 1344,
			"name": "RowGroupModelItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An item in the row group model. This can either be a column identifier (string) or a row group field definition."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Grouping"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 4668,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L4668"
				}
			],
			"typeParameters": [
				{
					"id": 1345,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1338,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1345,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "RowGroupField",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 900,
			"name": "RowHeight",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A height configuration for rows. May be:\n- A fixed number (e.g. 30),\n- A fill value (e.g. "
					},
					{
						"kind": "code",
						"text": "`fill:1`"
					},
					{
						"kind": "text",
						"text": "),\n- A function that returns dynamic row height based on index."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 2992,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2992"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "templateLiteral",
						"head": "fill:",
						"tail": [
							[
								{
									"type": "intrinsic",
									"name": "number"
								},
								""
							]
						]
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 901,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "+types.ts",
									"line": 2992,
									"character": 53,
									"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L2992"
								}
							],
							"signatures": [
								{
									"id": 902,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 903,
											"name": "i",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 277,
			"name": "RowLayout",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A row layout is either a standard row or a full-width row, depending on its content and configuration."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Grid View"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 1313,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L1313"
				}
			],
			"typeParameters": [
				{
					"id": 278,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 279,
						"typeArguments": [
							{
								"type": "reference",
								"target": 278,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "RowNormalRowLayout",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 267,
						"typeArguments": [
							{
								"type": "reference",
								"target": 278,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "RowFullWidthRowLayout",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 911,
			"name": "RowNode",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A union of "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "RowLeaf",
						"target": 904
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "RowGroup",
						"target": 892
					},
					{
						"kind": "text",
						"text": ". Represents any row that may appear in the grid view.\nUsed generically when the row type is not known ahead of time."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3037,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3037"
				}
			],
			"typeParameters": [
				{
					"id": 912,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 904,
						"typeArguments": [
							{
								"type": "reference",
								"target": 912,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "RowLeaf",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 892,
						"name": "RowGroup",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		},
		{
			"id": 913,
			"name": "RowPin",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Indicates the pinning position of a row:\n- \"top\": pinned to top,\n- \"bottom\": pinned to bottom,\n- null: not pinned.\nPinned rows remain visible during scrolling."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3048,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3048"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "top"
					},
					{
						"type": "literal",
						"value": "bottom"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 914,
			"name": "RowSection",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies which section of the grid a row belongs to:\n- \"top\": pinned to the top area,\n- \"bottom\": pinned to the bottom area,\n- \"center\": scrollable middle area,\n- \"flat\": single flattened section."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3059,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3059"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "top"
					},
					{
						"type": "literal",
						"value": "bottom"
					},
					{
						"type": "literal",
						"value": "center"
					},
					{
						"type": "literal",
						"value": "flat"
					}
				]
			}
		},
		{
			"id": 1473,
			"name": "RowSelectAllBegin",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event triggered when the \"select all\" operation begins. It provides an opportunity to cancel the selection."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5070,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5070"
				}
			],
			"typeParameters": [
				{
					"id": 1477,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1474,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5070,
							"character": 35,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5070"
						}
					],
					"signatures": [
						{
							"id": 1475,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1476,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1478,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1477,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowSelectAllBeginParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1485,
			"name": "RowSelectAllEnd",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event triggered once the \"select all\" operation is complete."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5105,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5105"
				}
			],
			"typeParameters": [
				{
					"id": 1489,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1486,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5105,
							"character": 33,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5105"
						}
					],
					"signatures": [
						{
							"id": 1487,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1488,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1490,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1489,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowSelectAllEndParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1494,
			"name": "RowSelectBegin",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event triggered when a row selection starts. This event allows cancellation before the selection is finalized."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5135,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5135"
				}
			],
			"typeParameters": [
				{
					"id": 1498,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1495,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5135,
							"character": 32,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5135"
						}
					],
					"signatures": [
						{
							"id": 1496,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1497,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1499,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1498,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowSelectBeginParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1507,
			"name": "RowSelectEnd",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event triggered once the row selection is finalized."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5176,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5176"
				}
			],
			"typeParameters": [
				{
					"id": 1511,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1508,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 5176,
							"character": 30,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5176"
						}
					],
					"signatures": [
						{
							"id": 1509,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1510,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1512,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1511,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "RowSelectEndParams",
										"package": "@1771technologies/lytenyte-pro"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			}
		},
		{
			"id": 1685,
			"name": "RowSelectionActivator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the interaction behavior that activates row selection.\n  - \"single-click\" selects a row with a single mouse click.\n  - \"double-click\" requires a double-click to select.\n  - \"none\" disables interaction-based row selection."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Selection"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 5995,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L5995"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "single-click"
					},
					{
						"type": "literal",
						"value": "double-click"
					},
					{
						"type": "literal",
						"value": "none"
					}
				]
			}
		},
		{
			"id": 1686,
			"name": "RowSelectionMode",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Specifies the available row selection modes supported by LyteNyte Grid.\n  - \"single\" allows only one row to be selected at a time.\n  - \"multiple\" allows multiple row selections.\n  - \"none\" disables row selection entirely."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Row Selection"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 6005,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L6005"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "single"
					},
					{
						"type": "literal",
						"value": "multiple"
					},
					{
						"type": "literal",
						"value": "none"
					}
				]
			}
		},
		{
			"id": 1214,
			"name": "SortComparatorFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Function signature for custom sort comparators."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3789,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3789"
				}
			],
			"typeParameters": [
				{
					"id": 1220,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1215,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "+types.ts",
							"line": 3789,
							"character": 34,
							"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3789"
						}
					],
					"signatures": [
						{
							"id": 1216,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1217,
									"name": "left",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 926,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1220,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "FieldDataParam",
										"package": "@1771technologies/lytenyte-pro"
									}
								},
								{
									"id": 1218,
									"name": "right",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 926,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1220,
												"name": "T",
												"package": "@1771technologies/lytenyte-pro",
												"refersToTypeParameter": true
											}
										],
										"name": "FieldDataParam",
										"package": "@1771technologies/lytenyte-pro"
									}
								},
								{
									"id": 1219,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			}
		},
		{
			"id": 1221,
			"name": "SortComparators",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Predefined sort comparator types supported by LyteNyte Grid."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3809,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3809"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "string"
					},
					{
						"type": "literal",
						"value": "number"
					},
					{
						"type": "literal",
						"value": "date"
					},
					{
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1222,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "+types.ts",
											"line": 3809,
											"character": 71,
											"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3809"
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 1239,
			"name": "SortGridSorts",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Union of all supported grid sort types."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Sort"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "+types.ts",
					"line": 3886,
					"character": 12,
					"url": "https://github.com/1771-Technologies/lytenyte/blob/97bd63aed6c62386d9a95a8cd57602040327cb92/packages/commercial-lytenyte-pro/src/+types.ts#L3886"
				}
			],
			"typeParameters": [
				{
					"id": 1240,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1223,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1240,
								"name": "T",
								"package": "@1771technologies/lytenyte-pro",
								"refersToTypeParameter": true
							}
						],
						"name": "SortCustomSort",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1229,
						"name": "SortDateColumnSort",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1246,
						"name": "SortNumberColumnSort",
						"package": "@1771technologies/lytenyte-pro"
					},
					{
						"type": "reference",
						"target": 1252,
						"name": "SortStringColumnSort",
						"package": "@1771technologies/lytenyte-pro"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Cell Edit",
			"children": [
				1605,
				1539,
				1543,
				1557,
				1574,
				1585,
				1593,
				1598,
				1600,
				1548,
				1549,
				1550,
				1552,
				1569,
				1580
			]
		},
		{
			"title": "Cell Rendering",
			"children": [
				966,
				961
			]
		},
		{
			"title": "Cell Selection",
			"children": [
				1814
			]
		},
		{
			"title": "Column",
			"children": [
				305,
				315,
				355,
				319,
				336,
				343,
				351,
				398,
				382,
				300,
				310,
				350
			]
		},
		{
			"title": "Column Groups",
			"children": [
				406,
				410
			]
		},
		{
			"title": "Column Header",
			"children": [
				1522,
				1531,
				1537,
				1517,
				1535,
				1526
			]
		},
		{
			"title": "Column Pivots",
			"children": [
				1768,
				1771,
				1779,
				1782
			]
		},
		{
			"title": "Events",
			"children": [
				1351,
				1366,
				1393,
				1611,
				1618,
				1623,
				1628,
				1417,
				1429,
				1443,
				1458,
				1466,
				1478,
				1490,
				1499,
				1512,
				1346,
				1361,
				1373,
				1378,
				1383,
				1388,
				1412,
				1424,
				1438,
				1453,
				1433,
				1473,
				1485,
				1494,
				1507
			]
		},
		{
			"title": "Export",
			"children": [
				1743,
				1748,
				1759,
				1762,
				1754
			]
		},
		{
			"title": "Field",
			"children": [
				940,
				945,
				953,
				959,
				926,
				935,
				957,
				948
			]
		},
		{
			"title": "Filters",
			"children": [
				1262,
				1267,
				1273,
				1281,
				1285,
				1289,
				1293,
				1301,
				1307,
				1312,
				1317,
				1321,
				1266,
				1272,
				1276,
				1298,
				1299,
				1306,
				1311,
				1320,
				1328
			]
		},
		{
			"title": "Frames",
			"children": [
				1787,
				1795,
				1800,
				1808,
				1206,
				1790,
				1803
			]
		},
		{
			"title": "Grid API",
			"children": [
				976,
				981,
				992,
				1198,
				1201,
				987
			]
		},
		{
			"title": "Grid Atom",
			"children": [
				823,
				846,
				862
			]
		},
		{
			"title": "Grid State",
			"children": [
				185,
				71,
				1
			]
		},
		{
			"title": "Grid View",
			"children": [
				190,
				208,
				194,
				222,
				241,
				248,
				267,
				279,
				290,
				170,
				246,
				277
			]
		},
		{
			"title": "Navigation",
			"children": [
				1635,
				1639,
				1642,
				1646,
				1651,
				1656,
				1659,
				1665
			]
		},
		{
			"title": "Row",
			"children": [
				875,
				885,
				892,
				904,
				870,
				880,
				900,
				911,
				913,
				914
			]
		},
		{
			"title": "Row And Column Spanning",
			"children": [
				920,
				915
			]
		},
		{
			"title": "Row Data Source",
			"children": [
				411,
				434,
				456,
				1820,
				1830,
				1841,
				1846,
				1853,
				1867,
				1875,
				1881,
				1885,
				817,
				629,
				558,
				554,
				482,
				696,
				1889,
				800,
				1672,
				1815,
				1825,
				1836,
				1666,
				1667
			]
		},
		{
			"title": "Row Drag",
			"children": [
				1687,
				1694,
				1719,
				1703,
				1707,
				1714,
				1732,
				1736,
				1690,
				1698,
				1710,
				1727
			]
		},
		{
			"title": "Row Grouping",
			"children": [
				1338,
				1329,
				1335,
				1337,
				1344
			]
		},
		{
			"title": "Row Selection",
			"children": [
				1677,
				1679,
				1685,
				1686
			]
		},
		{
			"title": "Sort",
			"children": [
				1223,
				1229,
				1232,
				1241,
				1246,
				1249,
				1252,
				1255,
				1214,
				1221,
				1239
			]
		}
	],
	"packageName": "@1771technologies/lytenyte-pro",
	"readme": [
		{
			"kind": "text",
			"text": "<div align=\"center\">\n  <br><br>\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://xwhoymbxqtnizjadugph.supabase.co/storage/v1/object/public/images//github-lytenyte-dark.svg\"/>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://xwhoymbxqtnizjadugph.supabase.co/storage/v1/object/public/images//github-lytenyte-light.svg\"/>\n    <img width=\"360\" alt=\"Logo of LyteNyte Grid\" src=\"https://xwhoymbxqtnizjadugph.supabase.co/storage/v1/object/public/images//github-lytenyte-dark.svg\"/>\n  </picture>\n  <br><br>\n\n  <h3>\n  The Fastest React Data Grid Available on the Modern Web\n  </h3>\n\n</div>\n<div align=\"center\">\n\nExperience unrivaled performance, memory efficiency, and a\ncomprehensive feature set, all in a tiny bundle size.\nLyteNyte Grid is designed to help developers handle large, real-time,\nand complex datasets without compromising speed or usability.\n\nThe free **LyteNyte Grid Core** edition includes intuitive sorting, precise filtering, row grouping,\nand data aggregation capabilities, everything you need to take complete control of your data.\n\nNeed more power? Upgrade to **LyteNyte Grid PRO** to access more advanced features like tree data structures,\nasynchronous data loading, and purpose-built UI components for managing columns, views, and exports.\nBuild custom menus, popover dialogs, and dynamic workflows with ease.\n\nMeticulously engineered to redefine what your enterprise expects from a React data grid.\n\n[Compare Features](https://1771technologies.com/pricing)\n\n</div>\n\n<div align=\"center\">\n\n[![NPM Version](https://img.shields.io/npm/v/%401771technologies%2Flytenyte-pro?label=PRO)](https://www.npmjs.com/package/@1771technologies/lytenyte-pro)\n[![NPM Version](https://img.shields.io/npm/v/%401771technologies%2Flytenyte-core?label=Core)](https://www.npmjs.com/package/@1771technologies/lytenyte-core)\n[![GitHub branch status](https://img.shields.io/github/checks-status/1771-Technologies/lytenyte/main)](https://github.com/1771-Technologies/lytenyte/tree/main)\n[![Follow on X](https://img.shields.io/twitter/follow/1771tech.svg?label=follow+1771tech)](https://x.com/1771tech)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg)](code_of_conduct.md)\n\n<!-- [![OpenSSF Best Practices](https://www.bestpractices.dev/projects/TODO/badge)](https://www.bestpractices.dev/projects/TODO) -->\n\n[![CI status](https://github.com/1771-Technologies/lytenyte/actions/workflows/release.yml/badge.svg?branch=main)](https://github.com/1771-Technologies/lytenyte/actions/workflows/release.yml?query=branch%3Amain)\n\n</div>\n\n<div align=\"center\">\n\n<a href=\"https://1771technologies.com\">Website</a> &nbsp;&nbsp;—&nbsp;&nbsp; <a href=\"https://1771technologies.com/docs/intro-getting-started\">Documentation</a> &nbsp;&nbsp;—&nbsp;&nbsp; <a href=\"https://1771technologies.com/demo\">Demo</a> &nbsp;&nbsp;—&nbsp;&nbsp; <a href=\"https://1771technologies.com/pricing\">Pricing</a> &nbsp;&nbsp;—&nbsp;&nbsp; <a href=\"https://1771technologies.com/eula\">EULA</a>\n\n</div>\n\n![LyteNyte Logo](https://xwhoymbxqtnizjadugph.supabase.co/storage/v1/object/public/images//github-readme-image.png)\n\n---\n\n## LyteNyte Editions\n\nLyteNyte Grid is available in two editions:\n\n1. **LyteNyte Grid Core:** A free, high-performance edition that delivers essential\n   table capabilities like **row grouping, column auto-sizing,** and **row detail** views.\n\n2. **LyteNyte Grid PRO:** An advanced enterprise edition that builds on Core with additional\n   features such as **asynchronous data loading, column manager components,** and \n   **data exporting** capabilities.\n\n## Key Design Principles\n\n- **Performance-First:** LyteNyte Grid is engineered with speed as a fundamental\n  priority, ensuring responsive performance even when handling large datasets.\n\n- **Modern Architecture:** Leveraging cutting-edge web technologies, LyteNyte\n  Grid utilizes native browser scroll functionality to keep the main\n  thread unencumbered as users navigate through their data.\n\n- **React-Aligned Philosophy:** Adhering to React's core principles, LyteNyte Grid\n  implements one-way data binding and declarative rendering to\n  maintain predictable state management.\n\n## Quick Start\n\n- Begin with our comprehensive [getting started guide](https://www.1771technologies.com/docs/intro-getting-started).\n- Explore our flexible [pricing options](https://www.1771technologies.com/pricing) to find the ideal fit for your project.\n- Follow our step-by-step [installation guide](https://www.1771technologies.com/docs/intro-installation) to seamlessly integrate LyteNyte Grid into your application.\n\n## Licensing\n\nLyteNyte Grid is available in two editions, Core and PRO, and offered under the following three license plans:\n\n1. **Core License Plan:** Free and open source, licensed under [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0).\n   Includes LyteNyte Grid Core edition with foundational features like sorting, filtering, row grouping,\n   and column auto-sizing. Ideal for individual developers and community use.\n\n2. **Developer PRO License Plan:** A [commercial license](https://www.1771technologies.com/eula) for the PRO\n   edition, designed for individuals and teams with up to 50 developers. Unlocks the full potential of LyteNyte Grid\n   with advanced features unavailable in the Core edition.\n3. **Organization PRO License Plan:** A [commercial license](https://www.1771technologies.com/eula) for the PRO edition, tailored for teams\n   with 50+ developers. Includes all PRO features along with an enhanced support agreement and negotiated pricing terms.\n\nAll **PRO licenses** are **perpetual** and include **12 months** of software updates, feature upgrades, and dedicated technical support.\n\n## Support\n\nOur team actively maintains and supports both the Core and PRO editions of LyteNyte Grid.\nPlease refer to our [support guide](https://www.1771technologies.com/support) for detailed\ninformation on available support channels and response options.\n\n## Contributing\n\nPlease review our [contributing guide]("
		},
		{
			"kind": "relative-link",
			"text": "./CONTRIBUTING.md"
		},
		{
			"kind": "text",
			"text": ") to learn about our development\nprocess, bug reporting procedures, and codebase maintenance practices.\n\n## Changelog\n\nOur [changelog](https://www.1771technologies.com/docs/changelog/changelog) is regularly updated\nwith detailed notes on new features, improvements, and bug fixes in each release.\nLyteNyte Grid follows [semantic versioning](https://semver.org/) to ensure clear and predictable upgrade paths.\n\n## Security\n\nFor information on reporting security vulnerabilities,\nplease consult our [security policy]("
		},
		{
			"kind": "relative-link",
			"text": "./SECURITY.md"
		},
		{
			"kind": "text",
			"text": ")."
		}
	],
	"symbolIdMap": {
		"0": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps"
		},
		"2": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columns"
		},
		"3": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnBase"
		},
		"4": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnGroupDefaultExpansion"
		},
		"5": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnGroupExpansions"
		},
		"6": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnGroupJoinDelimiter"
		},
		"7": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnSizeToFit"
		},
		"8": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.headerHeight"
		},
		"9": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.headerGroupHeight"
		},
		"10": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.gridId"
		},
		"11": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowDataSource"
		},
		"12": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowAutoHeightGuess"
		},
		"13": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowHeight"
		},
		"14": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.colScanDistance"
		},
		"15": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowScanDistance"
		},
		"16": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowOverscanTop"
		},
		"17": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowOverscanBottom"
		},
		"18": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.colOverscanStart"
		},
		"19": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.colOverscanEnd"
		},
		"20": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowFullWidthPredicate"
		},
		"21": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowFullWidthRenderer"
		},
		"22": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.cellRenderers"
		},
		"23": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rtl"
		},
		"24": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.sortModel"
		},
		"25": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.filterModel"
		},
		"26": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.aggModel"
		},
		"27": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"28": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"30": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"32": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowGroupColumn"
		},
		"33": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowGroupModel"
		},
		"34": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowGroupDisplayMode"
		},
		"35": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowGroupDefaultExpansion"
		},
		"36": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowGroupExpansions"
		},
		"37": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"38": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"40": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.floatingRowHeight"
		},
		"41": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.floatingRowEnabled"
		},
		"42": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.floatingCellRenderers"
		},
		"43": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.headerCellRenderers"
		},
		"44": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.editRenderers"
		},
		"45": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.editRowValidatorFn"
		},
		"46": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.editClickActivator"
		},
		"47": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.editCellMode"
		},
		"48": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnMarker"
		},
		"49": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnMarkerEnabled"
		},
		"50": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnDoubleClickToAutosize"
		},
		"51": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowDetailRenderer"
		},
		"52": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowDetailHeight"
		},
		"53": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowDetailExpansions"
		},
		"54": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowDetailAutoHeightGuess"
		},
		"55": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowSelectedIds"
		},
		"56": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowSelectionMode"
		},
		"57": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowSelectionActivator"
		},
		"58": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.rowSelectChildren"
		},
		"59": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.virtualizeCols"
		},
		"60": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.virtualizeRows"
		},
		"61": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.quickSearch"
		},
		"62": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.quickSearchSensitivity"
		},
		"63": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnPivotMode"
		},
		"64": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.columnPivotModel"
		},
		"65": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.dialogFrames"
		},
		"66": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.popoverFrames"
		},
		"67": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.filterInModel"
		},
		"68": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.cellSelections"
		},
		"69": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.cellSelectionMode"
		},
		"70": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseLyteNyteProps.T"
		},
		"71": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState"
		},
		"72": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columns"
		},
		"73": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnMeta"
		},
		"74": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnBase"
		},
		"75": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnGroupDefaultExpansion"
		},
		"76": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnGroupExpansions"
		},
		"77": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnGroupJoinDelimiter"
		},
		"78": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnGroupMeta"
		},
		"79": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnSizeToFit"
		},
		"80": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.gridId"
		},
		"81": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.xPositions"
		},
		"82": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.yPositions"
		},
		"83": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.widthTotal"
		},
		"84": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.heightTotal"
		},
		"85": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.viewport"
		},
		"86": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.viewportWidthInner"
		},
		"87": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.viewportWidthOuter"
		},
		"88": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.viewportHeightInner"
		},
		"89": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.viewportHeightOuter"
		},
		"90": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.headerHeight"
		},
		"91": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.headerGroupHeight"
		},
		"92": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowDataStore"
		},
		"93": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowDataSource"
		},
		"94": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowAutoHeightGuess"
		},
		"95": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowHeight"
		},
		"96": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowScanDistance"
		},
		"97": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.colScanDistance"
		},
		"98": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowOverscanTop"
		},
		"99": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowOverscanBottom"
		},
		"100": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.colOverscanStart"
		},
		"101": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.colOverscanEnd"
		},
		"102": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowFullWidthPredicate"
		},
		"103": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"104": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"105": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowFullWidthRenderer"
		},
		"106": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"107": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"108": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.cellRenderers"
		},
		"109": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rtl"
		},
		"110": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.sortModel"
		},
		"111": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.filterModel"
		},
		"112": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.aggModel"
		},
		"113": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"114": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"116": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"117": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"118": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowGroupModel"
		},
		"119": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowGroupColumn"
		},
		"120": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowGroupDisplayMode"
		},
		"121": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowGroupDefaultExpansion"
		},
		"122": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowGroupExpansions"
		},
		"123": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"124": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"126": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.floatingRowEnabled"
		},
		"127": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.floatingRowHeight"
		},
		"128": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.floatingCellRenderers"
		},
		"129": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.headerCellRenderers"
		},
		"130": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.editRenderers"
		},
		"131": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.editRowValidatorFn"
		},
		"132": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"133": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"134": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.editClickActivator"
		},
		"135": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.editCellMode"
		},
		"136": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.editActivePosition"
		},
		"137": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnMarker"
		},
		"138": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnMarkerEnabled"
		},
		"139": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnDoubleClickToAutosize"
		},
		"140": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowDetailRenderer"
		},
		"141": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"142": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"143": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowDetailHeight"
		},
		"144": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowDetailAutoHeightGuess"
		},
		"145": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowDetailExpansions"
		},
		"146": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowSelectedIds"
		},
		"147": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowSelectionMode"
		},
		"148": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowSelectionPivot"
		},
		"149": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowSelectionActivator"
		},
		"150": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.rowSelectChildren"
		},
		"151": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.viewBounds"
		},
		"152": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.virtualizeCols"
		},
		"153": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.virtualizeRows"
		},
		"154": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.quickSearch"
		},
		"155": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.quickSearchSensitivity"
		},
		"156": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnPivotModel"
		},
		"157": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnPivotMode"
		},
		"158": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnPivotColumns"
		},
		"159": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnPivotRowGroupExpansions"
		},
		"160": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"161": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"163": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.columnPivotColumnGroupExpansions"
		},
		"164": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.filterInModel"
		},
		"165": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.dialogFrames"
		},
		"166": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.popoverFrames"
		},
		"167": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.cellSelections"
		},
		"168": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.cellSelectionMode"
		},
		"169": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridState.T"
		},
		"170": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds"
		},
		"171": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowTopStart"
		},
		"172": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowTopEnd"
		},
		"173": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowCenterStart"
		},
		"174": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowCenterEnd"
		},
		"175": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowCenterLast"
		},
		"176": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowBotStart"
		},
		"177": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.rowBotEnd"
		},
		"178": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colStartStart"
		},
		"179": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colStartEnd"
		},
		"180": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colCenterStart"
		},
		"181": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colCenterEnd"
		},
		"182": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colCenterLast"
		},
		"183": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colEndStart"
		},
		"184": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ViewBounds.colEndEnd"
		},
		"185": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Grid"
		},
		"186": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Grid.state"
		},
		"187": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Grid.view"
		},
		"188": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Grid.api"
		},
		"189": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Grid.T"
		},
		"190": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridView"
		},
		"191": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridView.header"
		},
		"192": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridView.rows"
		},
		"193": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridView.T"
		},
		"194": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout"
		},
		"195": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.rowStart"
		},
		"196": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.rowEnd"
		},
		"197": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.rowSpan"
		},
		"198": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.colStart"
		},
		"199": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.colEnd"
		},
		"200": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.colSpan"
		},
		"201": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.colPin"
		},
		"202": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.colFirstEndPin"
		},
		"203": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.colLastStartPin"
		},
		"204": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.id"
		},
		"205": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.kind"
		},
		"206": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.column"
		},
		"207": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellLayout.T"
		},
		"208": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating"
		},
		"209": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.rowStart"
		},
		"210": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.rowEnd"
		},
		"211": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.rowSpan"
		},
		"212": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.colStart"
		},
		"213": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.colEnd"
		},
		"214": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.colSpan"
		},
		"215": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.colPin"
		},
		"216": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.colFirstEndPin"
		},
		"217": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.colLastStartPin"
		},
		"218": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.id"
		},
		"219": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.kind"
		},
		"220": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.column"
		},
		"221": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellFloating.T"
		},
		"222": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout"
		},
		"223": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.rowStart"
		},
		"224": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.rowEnd"
		},
		"225": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.rowSpan"
		},
		"226": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.colStart"
		},
		"227": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.colEnd"
		},
		"228": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.colSpan"
		},
		"229": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.colPin"
		},
		"230": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.colFirstEndPin"
		},
		"231": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.colLastStartPin"
		},
		"232": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.kind"
		},
		"233": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.isCollapsible"
		},
		"234": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.id"
		},
		"235": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.idOccurrence"
		},
		"236": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.groupPath"
		},
		"237": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.columnIds"
		},
		"238": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.start"
		},
		"239": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.end"
		},
		"240": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderGroupCellLayout.isHiddenMove"
		},
		"241": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderLayout"
		},
		"242": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderLayout.maxRow"
		},
		"243": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderLayout.maxCol"
		},
		"244": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderLayout.layout"
		},
		"245": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderLayout.T"
		},
		"246": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderLayoutCell"
		},
		"247": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"248": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout"
		},
		"249": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.kind"
		},
		"250": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.colSpan"
		},
		"251": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.rowSpan"
		},
		"252": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.isDeadRow"
		},
		"253": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.isDeadCol"
		},
		"254": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.id"
		},
		"255": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.rowIndex"
		},
		"256": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.colIndex"
		},
		"257": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.row"
		},
		"258": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.column"
		},
		"259": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.colPin"
		},
		"260": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.rowPin"
		},
		"261": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.colFirstEndPin"
		},
		"262": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.colLastStartPin"
		},
		"263": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.rowLastPinTop"
		},
		"264": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.rowFirstPinBottom"
		},
		"265": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.rowIsFocusRow"
		},
		"266": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowCellLayout.T"
		},
		"267": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout"
		},
		"268": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.kind"
		},
		"269": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.id"
		},
		"270": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.rowIndex"
		},
		"271": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.row"
		},
		"272": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.rowPin"
		},
		"273": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.rowLastPinTop"
		},
		"274": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.rowFirstPinBottom"
		},
		"275": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.rowIsFocusRow"
		},
		"276": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRowLayout.T"
		},
		"277": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLayout"
		},
		"278": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"279": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout"
		},
		"280": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.kind"
		},
		"281": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.rowIndex"
		},
		"282": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.row"
		},
		"283": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.rowPin"
		},
		"284": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.rowLastPinTop"
		},
		"285": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.rowFirstPinBottom"
		},
		"286": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.rowIsFocusRow"
		},
		"287": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.id"
		},
		"288": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.cells"
		},
		"289": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNormalRowLayout.T"
		},
		"290": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts"
		},
		"291": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.top"
		},
		"292": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.center"
		},
		"293": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.bottom"
		},
		"294": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.rowTopTotalHeight"
		},
		"295": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.rowCenterTotalHeight"
		},
		"296": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.rowBottomTotalHeight"
		},
		"297": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.rowFocusedIndex"
		},
		"298": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.rowFirstCenter"
		},
		"299": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSectionLayouts.T"
		},
		"300": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeCellFn"
		},
		"301": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"302": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"303": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"304": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"305": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeCellParams"
		},
		"306": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeCellParams.column"
		},
		"307": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeCellParams.grid"
		},
		"308": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeCellParams.row"
		},
		"309": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeCellParams.T"
		},
		"310": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeHeaderFn"
		},
		"311": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"312": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"313": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"314": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"315": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeHeaderParams"
		},
		"316": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeHeaderParams.column"
		},
		"317": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeHeaderParams.grid"
		},
		"318": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AutosizeHeaderParams.T"
		},
		"319": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase"
		},
		"320": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.hide"
		},
		"321": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.width"
		},
		"322": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.widthMax"
		},
		"323": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.widthMin"
		},
		"324": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.widthFlex"
		},
		"325": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.headerRenderer"
		},
		"326": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.floatingCellRenderer"
		},
		"327": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.cellRenderer"
		},
		"328": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.uiHints"
		},
		"329": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.editable"
		},
		"330": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.editRenderer"
		},
		"331": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.editSetter"
		},
		"332": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.autosizeCellFn"
		},
		"333": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.autosizeHeaderFn"
		},
		"334": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.quickSearchIgnore"
		},
		"335": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnBase.T"
		},
		"336": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker"
		},
		"337": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker.cellRenderer"
		},
		"338": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker.headerRenderer"
		},
		"339": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker.floatingCellRenderer"
		},
		"340": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker.width"
		},
		"341": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker.uiHints"
		},
		"342": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMarker.T"
		},
		"343": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta"
		},
		"344": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta.columnsVisible"
		},
		"345": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta.columnLookup"
		},
		"346": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta.columnVisibleStartCount"
		},
		"347": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta.columnVisibleCenterCount"
		},
		"348": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta.columnVisibleEndCount"
		},
		"349": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMeta.T"
		},
		"350": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPin"
		},
		"351": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotUIHints"
		},
		"352": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotUIHints.value"
		},
		"353": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotUIHints.rows"
		},
		"354": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotUIHints.columns"
		},
		"355": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column"
		},
		"356": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.id"
		},
		"357": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.name"
		},
		"358": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.type"
		},
		"359": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "",
			"qualifiedName": "__type"
		},
		"360": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.hide"
		},
		"361": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.width"
		},
		"362": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.widthMax"
		},
		"363": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.widthMin"
		},
		"364": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.widthFlex"
		},
		"365": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.pin"
		},
		"366": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.groupVisibility"
		},
		"367": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.groupPath"
		},
		"368": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.colSpan"
		},
		"369": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.rowSpan"
		},
		"370": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.field"
		},
		"371": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.headerRenderer"
		},
		"372": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.floatingCellRenderer"
		},
		"373": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.cellRenderer"
		},
		"374": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.uiHints"
		},
		"375": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.editable"
		},
		"376": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.editRenderer"
		},
		"377": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.editSetter"
		},
		"378": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.autosizeCellFn"
		},
		"379": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.autosizeHeaderFn"
		},
		"380": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.quickSearchIgnore"
		},
		"381": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Column.T"
		},
		"382": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn"
		},
		"383": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.name"
		},
		"384": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.hide"
		},
		"385": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.width"
		},
		"386": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.widthMax"
		},
		"387": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.widthMin"
		},
		"388": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.widthFlex"
		},
		"389": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.pin"
		},
		"390": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.field"
		},
		"391": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.cellRenderer"
		},
		"392": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.headerRenderer"
		},
		"393": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.floatingCellRenderer"
		},
		"394": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.uiHints"
		},
		"395": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.autosizeCellFn"
		},
		"396": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.autosizeHeaderFn"
		},
		"397": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupColumn.T"
		},
		"398": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints"
		},
		"399": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.sortable"
		},
		"400": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.rowGroupable"
		},
		"401": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.resizable"
		},
		"402": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.movable"
		},
		"403": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.aggDefault"
		},
		"404": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.aggsAllowed"
		},
		"405": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnUIHints.columnPivot"
		},
		"406": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnGroupMeta"
		},
		"407": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnGroupMeta.colIdToGroupIds"
		},
		"408": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnGroupMeta.validGroupIds"
		},
		"409": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnGroupMeta.groupIsCollapsible"
		},
		"410": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnGroupVisibility"
		},
		"411": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams"
		},
		"412": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.data"
		},
		"413": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.topData"
		},
		"414": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.bottomData"
		},
		"415": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.reflectData"
		},
		"416": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.rowIdBranch"
		},
		"417": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"418": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"419": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "path"
		},
		"420": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.rowIdLeaf"
		},
		"421": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"422": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"423": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "d"
		},
		"424": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "i"
		},
		"425": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.transformInFilterItem"
		},
		"426": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"427": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"428": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"429": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.column"
		},
		"431": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.values"
		},
		"432": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.rowsPerPage"
		},
		"433": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourcePaginatedParams.T"
		},
		"434": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams"
		},
		"435": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.data"
		},
		"436": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.topData"
		},
		"437": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.bottomData"
		},
		"438": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.reflectData"
		},
		"439": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.rowIdBranch"
		},
		"440": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"441": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"442": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "path"
		},
		"443": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.rowIdLeaf"
		},
		"444": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"445": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"446": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "d"
		},
		"447": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "i"
		},
		"448": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.transformInFilterItem"
		},
		"449": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"451": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"452": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"453": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.column"
		},
		"454": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.values"
		},
		"455": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientRowDataSourceParams.T"
		},
		"456": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams"
		},
		"457": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.data"
		},
		"458": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.topData"
		},
		"459": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.bottomData"
		},
		"460": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.reflectData"
		},
		"461": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.rowIdBranch"
		},
		"462": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"463": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"464": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "path"
		},
		"465": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.rowIdLeaf"
		},
		"466": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"467": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"468": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "d"
		},
		"469": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "i"
		},
		"470": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.transformInFilterItem"
		},
		"471": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"472": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"473": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"474": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"475": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.column"
		},
		"476": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.values"
		},
		"477": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.getPathFromData"
		},
		"478": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"479": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"480": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"481": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ClientTreeDataSourceParams.T"
		},
		"482": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated"
		},
		"483": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.init"
		},
		"484": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"485": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"486": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "grid"
		},
		"487": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowById"
		},
		"488": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"489": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"490": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"491": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowByIndex"
		},
		"492": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"493": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "index"
		},
		"495": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowToIndex"
		},
		"496": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"497": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"499": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowExpand"
		},
		"500": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "expansion"
		},
		"503": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowSelect"
		},
		"504": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"505": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"506": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"507": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowSelectAll"
		},
		"508": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"509": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"510": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"511": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowAreAllSelected"
		},
		"512": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"513": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"514": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"515": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowAllChildIds"
		},
		"516": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"517": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"518": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"519": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowUpdate"
		},
		"520": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"521": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"522": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "updates"
		},
		"523": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowDelete"
		},
		"524": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"525": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"526": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "deletions"
		},
		"527": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowAdd"
		},
		"528": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"529": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"530": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"531": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "atIndex"
		},
		"532": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowSetCenterData"
		},
		"533": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"534": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"535": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"536": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowSetTopData"
		},
		"537": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"538": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"539": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"540": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowSetBotData"
		},
		"541": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"542": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"543": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"544": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.page"
		},
		"545": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.inFilterItems"
		},
		"546": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"547": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"548": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "column"
		},
		"549": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.rowData"
		},
		"550": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"551": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"552": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "section"
		},
		"553": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPaginated.T"
		},
		"554": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPageState"
		},
		"555": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPageState.current"
		},
		"556": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPageState.perPage"
		},
		"557": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClientPageState.pageCount"
		},
		"558": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient"
		},
		"559": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.init"
		},
		"560": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"561": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"562": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "grid"
		},
		"563": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowById"
		},
		"564": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"565": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"566": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"567": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowByIndex"
		},
		"568": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"569": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"570": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "index"
		},
		"571": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowToIndex"
		},
		"572": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"573": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"574": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"575": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowExpand"
		},
		"576": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"577": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"578": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "expansion"
		},
		"579": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowSelect"
		},
		"580": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"581": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"582": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"583": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowSelectAll"
		},
		"584": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"585": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"586": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"587": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowAreAllSelected"
		},
		"588": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"589": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"590": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"591": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowAllChildIds"
		},
		"592": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"593": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"594": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"595": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowUpdate"
		},
		"596": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"597": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"598": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "updates"
		},
		"599": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowDelete"
		},
		"600": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"601": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"602": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "deletions"
		},
		"603": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowAdd"
		},
		"604": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"605": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"606": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"607": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "atIndex"
		},
		"608": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowSetCenterData"
		},
		"609": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"610": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"611": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"612": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowSetTopData"
		},
		"613": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"614": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"615": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"616": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowSetBotData"
		},
		"617": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"618": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"619": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"620": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.inFilterItems"
		},
		"621": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"622": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"623": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "column"
		},
		"624": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.rowData"
		},
		"625": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"626": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"627": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "section"
		},
		"628": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceClient.T"
		},
		"629": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource"
		},
		"630": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.init"
		},
		"631": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"632": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"633": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "grid"
		},
		"634": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowById"
		},
		"635": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"636": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"637": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"638": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowByIndex"
		},
		"639": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"640": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"641": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "index"
		},
		"642": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowToIndex"
		},
		"643": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"644": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"645": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"646": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowExpand"
		},
		"647": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"648": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"649": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "expansion"
		},
		"650": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowSelect"
		},
		"651": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"652": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"653": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"654": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowSelectAll"
		},
		"655": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"656": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"657": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"658": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowAreAllSelected"
		},
		"659": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"660": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"661": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"662": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowAllChildIds"
		},
		"663": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"664": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"665": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"666": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowUpdate"
		},
		"667": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"668": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"669": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "updates"
		},
		"670": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowDelete"
		},
		"671": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"672": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"673": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "deletions"
		},
		"674": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowAdd"
		},
		"675": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"676": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"677": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"678": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "atIndex"
		},
		"679": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowSetCenterData"
		},
		"680": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"681": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"682": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"683": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowSetTopData"
		},
		"684": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"685": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"686": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"687": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.rowSetBotData"
		},
		"688": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"689": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"690": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"691": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.inFilterItems"
		},
		"692": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"693": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"694": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "column"
		},
		"695": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSource.T"
		},
		"696": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer"
		},
		"697": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.init"
		},
		"698": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"699": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"700": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "grid"
		},
		"701": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowById"
		},
		"702": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"703": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"704": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"705": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowByIndex"
		},
		"706": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"707": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"708": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "index"
		},
		"709": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowToIndex"
		},
		"710": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"711": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"712": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"713": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowExpand"
		},
		"714": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"715": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"716": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "expansion"
		},
		"717": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowSelect"
		},
		"718": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"719": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"720": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"721": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowSelectAll"
		},
		"722": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"723": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"724": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"725": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowAreAllSelected"
		},
		"726": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"727": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"728": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"729": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowAllChildIds"
		},
		"730": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"731": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"732": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"733": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowUpdate"
		},
		"734": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"735": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"736": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "updates"
		},
		"737": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowDelete"
		},
		"738": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"739": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"740": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "deletions"
		},
		"741": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowAdd"
		},
		"742": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"743": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"744": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"745": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "atIndex"
		},
		"746": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowSetCenterData"
		},
		"747": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"748": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"749": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "newRows"
		},
		"750": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowSetTopData"
		},
		"751": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"752": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"753": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"754": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.rowSetBotData"
		},
		"755": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"756": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"757": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"758": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.inFilterItems"
		},
		"759": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"760": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"761": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "column"
		},
		"762": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.isLoading"
		},
		"763": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.loadError"
		},
		"764": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.retry"
		},
		"765": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"766": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"767": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowId"
		},
		"768": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.requestsForView"
		},
		"769": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"770": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"771": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.refresh"
		},
		"772": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"773": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"774": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "onSuccess"
		},
		"775": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"776": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"777": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "onError"
		},
		"778": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"779": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"780": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "e"
		},
		"781": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.pushResponses"
		},
		"782": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"783": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"784": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "req"
		},
		"785": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.pushRequests"
		},
		"786": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"787": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"788": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "req"
		},
		"789": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "onSuccess"
		},
		"790": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"791": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"792": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "onError"
		},
		"793": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"794": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"795": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "e"
		},
		"796": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.reset"
		},
		"797": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"798": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"799": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServer.T"
		},
		"800": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore"
		},
		"801": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowCount"
		},
		"802": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowTopCount"
		},
		"803": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowCenterCount"
		},
		"804": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowBottomCount"
		},
		"805": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowForIndex"
		},
		"806": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"807": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"808": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"809": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowClearCache"
		},
		"810": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"811": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"812": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.rowInvalidateIndex"
		},
		"813": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"814": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"815": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"816": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataStore.T"
		},
		"817": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RdsRowSelectParams"
		},
		"818": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RdsRowSelectParams.startId"
		},
		"819": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RdsRowSelectParams.endId"
		},
		"820": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RdsRowSelectParams.selectChildren"
		},
		"821": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RdsRowSelectParams.deselect"
		},
		"822": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RdsRowSelectParams.mode"
		},
		"823": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtom"
		},
		"824": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtom.get"
		},
		"825": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"826": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"827": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtom.set"
		},
		"828": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"829": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"830": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "v"
		},
		"831": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"832": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"833": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "p"
		},
		"834": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtom.watch"
		},
		"835": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"836": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"837": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "fn"
		},
		"838": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"839": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"840": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"841": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"842": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtom.useValue"
		},
		"843": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"844": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"845": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtom.T"
		},
		"846": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonly"
		},
		"847": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonly.get"
		},
		"848": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"849": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"850": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonly.watch"
		},
		"851": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"852": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"853": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "fn"
		},
		"854": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"855": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"856": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"857": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"858": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonly.useValue"
		},
		"859": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"860": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"861": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonly.T"
		},
		"862": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonlyUnwatchable"
		},
		"863": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonlyUnwatchable.get"
		},
		"864": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"865": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"866": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonlyUnwatchable.useValue"
		},
		"867": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"868": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"869": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridAtomReadonlyUnwatchable.T"
		},
		"870": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthPredicate"
		},
		"871": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"872": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"873": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"874": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"875": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthPredicateParams"
		},
		"876": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthPredicateParams.grid"
		},
		"877": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthPredicateParams.rowIndex"
		},
		"878": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthPredicateParams.row"
		},
		"879": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthPredicateParams.T"
		},
		"880": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererFn"
		},
		"881": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"882": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"883": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"884": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"885": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams"
		},
		"886": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams.rowIndex"
		},
		"887": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams.row"
		},
		"888": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams.grid"
		},
		"889": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams.rowSelected"
		},
		"890": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams.rowIndeterminate"
		},
		"891": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowFullWidthRendererParams.T"
		},
		"892": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup"
		},
		"893": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.id"
		},
		"894": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.loading"
		},
		"895": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.error"
		},
		"896": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.kind"
		},
		"897": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.key"
		},
		"898": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.data"
		},
		"899": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroup.depth"
		},
		"900": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowHeight"
		},
		"901": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"902": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"903": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "i"
		},
		"904": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf"
		},
		"905": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf.id"
		},
		"906": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf.loading"
		},
		"907": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf.error"
		},
		"908": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf.kind"
		},
		"909": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf.data"
		},
		"910": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowLeaf.T"
		},
		"911": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowNode"
		},
		"912": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"913": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowPin"
		},
		"914": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSection"
		},
		"915": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFn"
		},
		"916": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"917": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"918": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"919": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"920": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFnParams"
		},
		"921": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFnParams.grid"
		},
		"922": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFnParams.rowIndex"
		},
		"923": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFnParams.colIndex"
		},
		"924": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFnParams.row"
		},
		"925": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSpanFnParams.T"
		},
		"926": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldDataParam"
		},
		"927": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"928": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.kind"
		},
		"929": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.data"
		},
		"930": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"931": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.kind"
		},
		"932": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.data"
		},
		"933": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.key"
		},
		"934": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"935": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldFn"
		},
		"936": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"937": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"938": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"939": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"940": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldFnParams"
		},
		"941": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldFnParams.grid"
		},
		"942": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldFnParams.column"
		},
		"943": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldFnParams.data"
		},
		"944": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldFnParams.T"
		},
		"945": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldPath"
		},
		"946": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldPath.kind"
		},
		"947": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldPath.path"
		},
		"948": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldRowGroupFn"
		},
		"949": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"950": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"951": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"952": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"953": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldRowGroupParamsFn"
		},
		"954": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldRowGroupParamsFn.grid"
		},
		"955": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldRowGroupParamsFn.data"
		},
		"956": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldRowGroupParamsFn.T"
		},
		"957": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FieldRowGroup"
		},
		"958": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"959": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Field"
		},
		"960": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"961": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererFn"
		},
		"962": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"963": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"964": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"965": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"966": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams"
		},
		"967": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.grid"
		},
		"968": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.column"
		},
		"969": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.row"
		},
		"970": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.rowIndex"
		},
		"971": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.colIndex"
		},
		"972": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.rowSelected"
		},
		"973": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.rowIndeterminate"
		},
		"974": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.rowPin"
		},
		"975": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellRendererParams.T"
		},
		"976": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnAutosizeParams"
		},
		"977": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnAutosizeParams.dryRun"
		},
		"978": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnAutosizeParams.includeHeader"
		},
		"979": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnAutosizeParams.columns"
		},
		"980": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnAutosizeParams.T"
		},
		"981": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveParams"
		},
		"982": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveParams.moveColumns"
		},
		"983": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveParams.moveTarget"
		},
		"984": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveParams.before"
		},
		"985": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveParams.updatePinState"
		},
		"986": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveParams.T"
		},
		"987": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FocusCellParams"
		},
		"988": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"989": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.row"
		},
		"990": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.column"
		},
		"991": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"992": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi"
		},
		"993": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnField"
		},
		"994": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"995": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"996": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "columnOrId"
		},
		"997": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"998": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnByIndex"
		},
		"999": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1000": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1001": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "columnIndex"
		},
		"1002": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnIndex"
		},
		"1003": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1004": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1005": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "columnOrId"
		},
		"1006": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.sortForColumn"
		},
		"1007": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1008": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1009": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "columnOrId"
		},
		"1010": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1011": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.sort"
		},
		"1012": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.index"
		},
		"1013": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowIsLeaf"
		},
		"1014": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1015": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1016": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"1017": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowIsGroup"
		},
		"1018": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1019": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1020": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"1021": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowGroupColumnIndex"
		},
		"1022": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1023": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1024": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "c"
		},
		"1025": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowGroupToggle"
		},
		"1026": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1027": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1028": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"1029": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "state"
		},
		"1030": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowGroupApplyExpansions"
		},
		"1031": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1032": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1033": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "expansions"
		},
		"1034": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowGroupIsExpanded"
		},
		"1035": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1036": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1037": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"1038": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.eventAddListener"
		},
		"1039": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1040": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1041": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "K"
		},
		"1042": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "event"
		},
		"1043": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "fn"
		},
		"1044": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1045": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1046": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "event"
		},
		"1047": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1048": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1049": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.eventRemoveListener"
		},
		"1050": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1051": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1052": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "K"
		},
		"1053": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "event"
		},
		"1054": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "fn"
		},
		"1055": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1056": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1057": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "event"
		},
		"1058": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.eventFire"
		},
		"1059": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1060": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1061": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "K"
		},
		"1062": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "name"
		},
		"1063": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "event"
		},
		"1064": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.scrollIntoView"
		},
		"1065": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1066": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1067": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "options"
		},
		"1068": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.focusCell"
		},
		"1069": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1070": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1071": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "position"
		},
		"1072": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.editBegin"
		},
		"1073": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1074": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1075": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1076": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.editEnd"
		},
		"1077": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1078": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1079": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "cancel"
		},
		"1080": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.editIsCellActive"
		},
		"1081": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1082": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1083": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1084": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.editUpdate"
		},
		"1085": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1086": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1087": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1088": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowDetailIsExpanded"
		},
		"1089": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1090": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1091": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowOrId"
		},
		"1092": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowDetailToggle"
		},
		"1093": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1094": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1095": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowOrId"
		},
		"1096": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "state"
		},
		"1097": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowDetailRenderedHeight"
		},
		"1098": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1099": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1100": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "rowOrId"
		},
		"1101": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowById"
		},
		"1102": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1103": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1104": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"1105": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowByIndex"
		},
		"1106": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1107": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1108": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "index"
		},
		"1109": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "section"
		},
		"1110": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowSelect"
		},
		"1111": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1112": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1113": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1114": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowSelectAll"
		},
		"1115": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1116": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1117": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1118": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowSelected"
		},
		"1119": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1120": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1121": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.rowHandleSelect"
		},
		"1122": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1123": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1124": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1125": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.useRowDrag"
		},
		"1126": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1127": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1128": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1129": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1130": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.dragProps"
		},
		"1131": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.isDragging"
		},
		"1132": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnResize"
		},
		"1133": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1134": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1135": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "columns"
		},
		"1136": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnById"
		},
		"1137": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1138": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1139": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"1140": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnUpdate"
		},
		"1141": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1142": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1143": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "updates"
		},
		"1144": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnMove"
		},
		"1145": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1146": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1147": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1148": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.cellRoot"
		},
		"1149": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1150": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1151": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "row"
		},
		"1152": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "column"
		},
		"1153": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnToggleGroup"
		},
		"1154": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1155": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1156": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "group"
		},
		"1157": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "state"
		},
		"1158": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.columnAutosize"
		},
		"1159": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1160": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1161": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1162": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.exportDataRect"
		},
		"1163": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1164": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1165": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1166": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.exportCsv"
		},
		"1167": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1168": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1169": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1170": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.exportCsvFile"
		},
		"1171": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1172": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1173": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1174": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.dialogFrameOpen"
		},
		"1175": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1176": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1177": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"1178": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "context"
		},
		"1179": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.dialogFrameClose"
		},
		"1180": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1181": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1182": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"1183": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.popoverFrameOpen"
		},
		"1184": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1185": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1186": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"1187": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "target"
		},
		"1188": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "context"
		},
		"1189": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.popoverFrameClose"
		},
		"1190": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1191": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1192": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "id"
		},
		"1193": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.positionFromElement"
		},
		"1194": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1195": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1196": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "el"
		},
		"1197": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridApi.T"
		},
		"1198": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowHandleSelectParams"
		},
		"1199": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowHandleSelectParams.target"
		},
		"1200": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowHandleSelectParams.shiftKey"
		},
		"1201": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ScrollIntoViewOptions"
		},
		"1202": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ScrollIntoViewOptions.column"
		},
		"1203": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ScrollIntoViewOptions.row"
		},
		"1204": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ScrollIntoViewOptions.behavior"
		},
		"1205": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ScrollIntoViewOptions.T"
		},
		"1206": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "VirtualTarget"
		},
		"1207": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "VirtualTarget.getBoundingClientRect"
		},
		"1208": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1209": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1210": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "VirtualTarget.getClientRects"
		},
		"1211": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1212": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1213": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "VirtualTarget.contextElement"
		},
		"1214": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortComparatorFn"
		},
		"1215": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1216": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1217": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "left"
		},
		"1218": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "right"
		},
		"1219": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "options"
		},
		"1220": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1221": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortComparators"
		},
		"1222": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1223": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortCustomSort"
		},
		"1224": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortCustomSort.columnId"
		},
		"1225": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortCustomSort.kind"
		},
		"1226": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortCustomSort.comparator"
		},
		"1227": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortCustomSort.options"
		},
		"1228": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortCustomSort.T"
		},
		"1229": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateColumnSort"
		},
		"1230": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateColumnSort.kind"
		},
		"1231": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateColumnSort.options"
		},
		"1232": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateComparatorOptions"
		},
		"1233": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateComparatorOptions.nullsFirst"
		},
		"1234": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateComparatorOptions.toIsoDateString"
		},
		"1235": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1236": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1237": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "v"
		},
		"1238": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortDateComparatorOptions.includeTime"
		},
		"1239": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortGridSorts"
		},
		"1240": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1241": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortModelItem"
		},
		"1242": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortModelItem.sort"
		},
		"1243": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortModelItem.columnId"
		},
		"1244": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortModelItem.isDescending"
		},
		"1245": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortModelItem.T"
		},
		"1246": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortNumberColumnSort"
		},
		"1247": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortNumberColumnSort.kind"
		},
		"1248": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortNumberColumnSort.options"
		},
		"1249": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortNumberComparatorOptions"
		},
		"1250": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortNumberComparatorOptions.nullsFirst"
		},
		"1251": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortNumberComparatorOptions.absoluteValue"
		},
		"1252": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringColumnSort"
		},
		"1253": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringColumnSort.kind"
		},
		"1254": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringColumnSort.options"
		},
		"1255": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions"
		},
		"1256": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions.caseInsensitive"
		},
		"1257": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions.trimWhitespace"
		},
		"1258": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions.ignorePunctuation"
		},
		"1259": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions.locale"
		},
		"1260": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions.collator"
		},
		"1261": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "SortStringComparatorOptions.nullsFirst"
		},
		"1262": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterCombination"
		},
		"1263": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterCombination.kind"
		},
		"1264": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterCombination.operator"
		},
		"1265": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterCombination.filters"
		},
		"1266": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterCombinationOperator"
		},
		"1267": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDate"
		},
		"1268": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDate.kind"
		},
		"1269": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDate.operator"
		},
		"1270": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDate.value"
		},
		"1271": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDate.options"
		},
		"1272": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDateOperator"
		},
		"1273": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDateOptions"
		},
		"1274": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDateOptions.nullHandling"
		},
		"1275": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterDateOptions.includeTime"
		},
		"1276": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFn"
		},
		"1277": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1278": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1279": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1280": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1281": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFnParams"
		},
		"1282": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFnParams.data"
		},
		"1283": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFnParams.grid"
		},
		"1284": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFnParams.T"
		},
		"1285": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFunc"
		},
		"1286": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFunc.kind"
		},
		"1287": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFunc.func"
		},
		"1288": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterFunc.T"
		},
		"1289": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterIn"
		},
		"1290": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterIn.kind"
		},
		"1291": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterIn.operator"
		},
		"1292": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterIn.value"
		},
		"1293": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterInFilterItem"
		},
		"1294": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterInFilterItem.id"
		},
		"1295": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterInFilterItem.label"
		},
		"1296": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterInFilterItem.value"
		},
		"1297": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterInFilterItem.groupPath"
		},
		"1298": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterInOperator"
		},
		"1299": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterModelItem"
		},
		"1300": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1301": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumber"
		},
		"1302": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumber.kind"
		},
		"1303": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumber.operator"
		},
		"1304": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumber.value"
		},
		"1305": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumber.options"
		},
		"1306": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumberOperator"
		},
		"1307": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumberOptions"
		},
		"1308": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumberOptions.absolute"
		},
		"1309": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumberOptions.epsilon"
		},
		"1310": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterNumberOptions.nullHandling"
		},
		"1311": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterQuickSearchSensitivity"
		},
		"1312": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterString"
		},
		"1313": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterString.kind"
		},
		"1314": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterString.operator"
		},
		"1315": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterString.value"
		},
		"1316": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterString.options"
		},
		"1317": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringCollation"
		},
		"1318": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringCollation.locale"
		},
		"1319": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringCollation.sensitivity"
		},
		"1320": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOperator"
		},
		"1321": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions"
		},
		"1322": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions.regexOpts"
		},
		"1323": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions.trimWhitespace"
		},
		"1324": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions.caseInsensitive"
		},
		"1325": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions.ignorePunctuation"
		},
		"1326": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions.nullHandling"
		},
		"1327": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "FilterStringOptions.collation"
		},
		"1328": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Locale"
		},
		"1329": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AggFn"
		},
		"1330": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1331": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1332": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "data"
		},
		"1333": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "grid"
		},
		"1334": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1335": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "AggModelFn"
		},
		"1336": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1337": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupDisplayMode"
		},
		"1338": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupField"
		},
		"1339": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupField.kind"
		},
		"1340": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupField.id"
		},
		"1341": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupField.field"
		},
		"1342": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupField.name"
		},
		"1343": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupField.T"
		},
		"1344": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowGroupModelItem"
		},
		"1345": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1346": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginFn"
		},
		"1347": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1348": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1349": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1350": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1351": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams"
		},
		"1352": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.moveColumns"
		},
		"1353": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.moveTarget"
		},
		"1354": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.before"
		},
		"1355": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.updatePinState"
		},
		"1356": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.grid"
		},
		"1357": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.preventDefault"
		},
		"1358": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1359": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1360": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveBeginParams.T"
		},
		"1361": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndFn"
		},
		"1362": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1363": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1364": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1365": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1366": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams"
		},
		"1367": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams.moveColumns"
		},
		"1368": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams.moveTarget"
		},
		"1369": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams.before"
		},
		"1370": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams.updatePinState"
		},
		"1371": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams.grid"
		},
		"1372": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnMoveEndParams.T"
		},
		"1373": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditBegin"
		},
		"1374": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1375": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1376": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1377": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1378": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditCancel"
		},
		"1379": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1380": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1381": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1382": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1383": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditEnd"
		},
		"1384": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1385": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1386": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1387": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1388": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditError"
		},
		"1389": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1390": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1391": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1392": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1393": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents"
		},
		"1394": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowExpandBegin"
		},
		"1395": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowExpand"
		},
		"1396": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowExpandError"
		},
		"1397": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.editBegin"
		},
		"1398": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.editEnd"
		},
		"1399": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.editCancel"
		},
		"1400": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.editError"
		},
		"1401": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowDetailExpansionBegin"
		},
		"1402": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowDetailExpansionEnd"
		},
		"1403": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowSelectBegin"
		},
		"1404": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowSelectEnd"
		},
		"1405": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowSelectAllBegin"
		},
		"1406": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.rowSelectAllEnd"
		},
		"1407": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.columnMoveDragBegin"
		},
		"1408": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.columnMoveDragEnd"
		},
		"1409": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.columnMoveBegin"
		},
		"1410": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.columnMoveEnd"
		},
		"1411": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GridEvents.T"
		},
		"1412": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionBegin"
		},
		"1413": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1414": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1415": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1416": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1417": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionBeginParams"
		},
		"1418": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionBeginParams.grid"
		},
		"1419": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionBeginParams.expansions"
		},
		"1420": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionBeginParams.preventDefault"
		},
		"1421": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1422": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1423": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionBeginParams.T"
		},
		"1424": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionEnd"
		},
		"1425": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1426": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1427": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1428": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1429": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionEndParams"
		},
		"1430": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionEndParams.grid"
		},
		"1431": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionEndParams.expansions"
		},
		"1432": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailExpansionEndParams.T"
		},
		"1433": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandFn"
		},
		"1434": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1435": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1436": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1437": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1438": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandBeginFn"
		},
		"1439": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1440": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1441": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1442": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1443": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandBeginParams"
		},
		"1444": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandBeginParams.grid"
		},
		"1445": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandBeginParams.expansions"
		},
		"1446": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1447": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"1449": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandBeginParams.preventDefault"
		},
		"1450": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1451": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1452": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandBeginParams.T"
		},
		"1453": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandErrorFn"
		},
		"1454": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1455": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1456": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1457": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1458": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandErrorParams"
		},
		"1459": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandErrorParams.grid"
		},
		"1460": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandErrorParams.expansions"
		},
		"1461": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1462": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"1464": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandErrorParams.error"
		},
		"1465": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandErrorParams.T"
		},
		"1466": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandParams"
		},
		"1467": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandParams.grid"
		},
		"1468": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandParams.expansions"
		},
		"1469": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1470": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.__index"
		},
		"1472": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowExpandParams.T"
		},
		"1473": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllBegin"
		},
		"1474": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1475": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1476": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1477": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1478": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllBeginParams"
		},
		"1479": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllBeginParams.deselect"
		},
		"1480": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllBeginParams.grid"
		},
		"1481": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllBeginParams.preventDefault"
		},
		"1482": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1483": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1484": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllBeginParams.T"
		},
		"1485": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllEnd"
		},
		"1486": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1487": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1488": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1489": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1490": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllEndParams"
		},
		"1491": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllEndParams.deselect"
		},
		"1492": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllEndParams.grid"
		},
		"1493": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllEndParams.T"
		},
		"1494": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBegin"
		},
		"1495": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1496": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1497": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1498": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1499": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBeginParams"
		},
		"1500": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBeginParams.selected"
		},
		"1501": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBeginParams.grid"
		},
		"1502": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBeginParams.deselect"
		},
		"1503": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBeginParams.preventDefault"
		},
		"1504": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1505": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1506": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectBeginParams.T"
		},
		"1507": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectEnd"
		},
		"1508": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1509": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1510": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1511": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1512": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectEndParams"
		},
		"1513": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectEndParams.selected"
		},
		"1514": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectEndParams.grid"
		},
		"1515": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectEndParams.deselect"
		},
		"1516": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectEndParams.T"
		},
		"1517": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellRendererFn"
		},
		"1518": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1519": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1520": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1521": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1522": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellRendererParams"
		},
		"1523": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellRendererParams.grid"
		},
		"1524": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellRendererParams.column"
		},
		"1525": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellRendererParams.T"
		},
		"1526": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderFloatingCellRendererFn"
		},
		"1527": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1528": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1529": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1530": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1531": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderFloatingCellRendererParams"
		},
		"1532": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderFloatingCellRendererParams.grid"
		},
		"1533": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderFloatingCellRendererParams.column"
		},
		"1534": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderFloatingCellRendererParams.T"
		},
		"1535": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderFloatingCellRenderer"
		},
		"1536": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1537": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "HeaderCellRenderer"
		},
		"1538": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1539": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditActivePosition"
		},
		"1540": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditActivePosition.rowIndex"
		},
		"1541": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditActivePosition.column"
		},
		"1542": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditActivePosition.T"
		},
		"1543": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditBeginParams"
		},
		"1544": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditBeginParams.init"
		},
		"1545": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditBeginParams.column"
		},
		"1546": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditBeginParams.rowIndex"
		},
		"1547": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditBeginParams.T"
		},
		"1548": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditCellMode"
		},
		"1549": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditClickActivator"
		},
		"1550": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRenderer"
		},
		"1551": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1552": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFn"
		},
		"1553": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1554": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1555": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1556": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1557": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams"
		},
		"1558": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.rowIndex"
		},
		"1559": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.row"
		},
		"1560": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.grid"
		},
		"1561": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.column"
		},
		"1562": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.rowValidationState"
		},
		"1563": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.value"
		},
		"1564": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.onChange"
		},
		"1565": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1566": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1567": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "c"
		},
		"1568": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRendererFnParams.T"
		},
		"1569": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFn"
		},
		"1570": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1571": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1572": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1573": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1574": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFnParams"
		},
		"1575": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFnParams.grid"
		},
		"1576": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFnParams.row"
		},
		"1577": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFnParams.rowIndex"
		},
		"1578": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFnParams.data"
		},
		"1579": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditRowValidatorFnParams.T"
		},
		"1580": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterFn"
		},
		"1581": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1582": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1583": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1584": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1585": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams"
		},
		"1586": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.grid"
		},
		"1587": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.row"
		},
		"1588": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.rowIndex"
		},
		"1589": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.column"
		},
		"1590": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.value"
		},
		"1591": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.data"
		},
		"1592": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditSetterParams.T"
		},
		"1593": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditUpdateParams"
		},
		"1594": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditUpdateParams.value"
		},
		"1595": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditUpdateParams.column"
		},
		"1596": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditUpdateParams.rowIndex"
		},
		"1597": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditUpdateParams.T"
		},
		"1598": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "Editable"
		},
		"1599": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1600": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFn"
		},
		"1601": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1602": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1603": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1604": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1605": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFnParams"
		},
		"1606": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFnParams.rowIndex"
		},
		"1607": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFnParams.row"
		},
		"1608": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFnParams.grid"
		},
		"1609": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFnParams.column"
		},
		"1610": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "EditableFnParams.T"
		},
		"1611": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditBeginParams"
		},
		"1612": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditBeginParams.column"
		},
		"1613": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditBeginParams.rowIndex"
		},
		"1614": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditBeginParams.preventDefault"
		},
		"1615": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1616": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1617": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditBeginParams.T"
		},
		"1618": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditCancelParams"
		},
		"1619": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditCancelParams.column"
		},
		"1620": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditCancelParams.rowIndex"
		},
		"1621": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditCancelParams.data"
		},
		"1622": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditCancelParams.T"
		},
		"1623": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditEndParams"
		},
		"1624": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditEndParams.column"
		},
		"1625": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditEndParams.rowIndex"
		},
		"1626": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditEndParams.data"
		},
		"1627": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditEndParams.T"
		},
		"1628": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams"
		},
		"1629": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams.column"
		},
		"1630": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams.rowIndex"
		},
		"1631": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams.data"
		},
		"1632": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams.validation"
		},
		"1633": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams.error"
		},
		"1634": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "OnEditErrorParams.T"
		},
		"1635": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionDetailCell"
		},
		"1636": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionDetailCell.kind"
		},
		"1637": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionDetailCell.rowIndex"
		},
		"1638": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionDetailCell.colIndex"
		},
		"1639": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFloatingCell"
		},
		"1640": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFloatingCell.kind"
		},
		"1641": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFloatingCell.colIndex"
		},
		"1642": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFullWidthRow"
		},
		"1643": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFullWidthRow.kind"
		},
		"1644": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFullWidthRow.rowIndex"
		},
		"1645": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionFullWidthRow.colIndex"
		},
		"1646": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCell"
		},
		"1647": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCell.kind"
		},
		"1648": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCell.rowIndex"
		},
		"1649": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCell.colIndex"
		},
		"1650": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCell.root"
		},
		"1651": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCellRoot"
		},
		"1652": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCellRoot.colIndex"
		},
		"1653": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCellRoot.rowIndex"
		},
		"1654": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCellRoot.rowSpan"
		},
		"1655": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionGridCellRoot.colSpan"
		},
		"1656": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderCell"
		},
		"1657": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderCell.kind"
		},
		"1658": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderCell.colIndex"
		},
		"1659": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderGroupCell"
		},
		"1660": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderGroupCell.kind"
		},
		"1661": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderGroupCell.columnStartIndex"
		},
		"1662": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderGroupCell.columnEndIndex"
		},
		"1663": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderGroupCell.hierarchyRowIndex"
		},
		"1664": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionHeaderGroupCell.colIndex"
		},
		"1665": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PositionUnion"
		},
		"1666": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailHeight"
		},
		"1667": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailRendererFn"
		},
		"1668": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1669": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1670": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1671": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1672": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailRendererParams"
		},
		"1673": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailRendererParams.rowIndex"
		},
		"1674": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailRendererParams.row"
		},
		"1675": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailRendererParams.grid"
		},
		"1676": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDetailRendererParams.T"
		},
		"1677": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllOptions"
		},
		"1678": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectAllOptions.deselect"
		},
		"1679": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectOptions"
		},
		"1680": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectOptions.selected"
		},
		"1681": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectOptions.pivot"
		},
		"1682": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectOptions.selectBetweenPivot"
		},
		"1683": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectOptions.deselect"
		},
		"1684": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectOptions.selectChildren"
		},
		"1685": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectionActivator"
		},
		"1686": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowSelectionMode"
		},
		"1687": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragData"
		},
		"1688": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragData.siteLocalData"
		},
		"1689": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragData.dataTransfer"
		},
		"1690": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragEventFn"
		},
		"1691": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1692": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1693": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1694": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragEventParams"
		},
		"1695": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragEventParams.state"
		},
		"1696": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragEventParams.position"
		},
		"1697": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragEventParams.dragElement"
		},
		"1698": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPlaceholderFn"
		},
		"1699": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1700": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1701": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1702": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1703": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPlaceholderParams"
		},
		"1704": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPlaceholderParams.grid"
		},
		"1705": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPlaceholderParams.dragData"
		},
		"1706": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPlaceholderParams.T"
		},
		"1707": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPosition"
		},
		"1708": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPosition.x"
		},
		"1709": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragPosition.y"
		},
		"1710": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DropEventFn"
		},
		"1711": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1712": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1713": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1714": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DropEventParams"
		},
		"1715": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DropEventParams.state"
		},
		"1716": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DropEventParams.moveState"
		},
		"1717": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DropEventParams.dropElement"
		},
		"1718": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DropEventParams.dragElement"
		},
		"1719": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState"
		},
		"1720": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.x"
		},
		"1721": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.y"
		},
		"1722": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.dropElement"
		},
		"1723": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.dragElement"
		},
		"1724": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.rect"
		},
		"1725": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.topHalf"
		},
		"1726": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DragMoveState.leftHalf"
		},
		"1727": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GetDragDataFn"
		},
		"1728": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1729": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1730": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1731": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1732": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GetDragDataParams"
		},
		"1733": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GetDragDataParams.grid"
		},
		"1734": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GetDragDataParams.row"
		},
		"1735": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "GetDragDataParams.T"
		},
		"1736": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams"
		},
		"1737": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams.getDragData"
		},
		"1738": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams.onDragMove"
		},
		"1739": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams.onDragStart"
		},
		"1740": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams.onDragEnd"
		},
		"1741": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams.onDrop"
		},
		"1742": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "UseRowDragParams.T"
		},
		"1743": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRect"
		},
		"1744": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRect.rowStart"
		},
		"1745": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRect.rowEnd"
		},
		"1746": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRect.columnStart"
		},
		"1747": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRect.columnEnd"
		},
		"1748": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportCsvParams"
		},
		"1749": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportCsvParams.includeHeader"
		},
		"1750": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportCsvParams.includeGroupHeaders"
		},
		"1751": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportCsvParams.uniformGroupHeaders"
		},
		"1752": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportCsvParams.delimiter"
		},
		"1753": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportCsvParams.dataRect"
		},
		"1754": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectFn"
		},
		"1755": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1756": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1757": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1758": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1759": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectParams"
		},
		"1760": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectParams.dataRect"
		},
		"1761": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectParams.uniformGroupHeaders"
		},
		"1762": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectResult"
		},
		"1763": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectResult.headers"
		},
		"1764": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectResult.groupHeaders"
		},
		"1765": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectResult.data"
		},
		"1766": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectResult.columns"
		},
		"1767": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ExportDataRectResult.T"
		},
		"1768": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotColumnItem"
		},
		"1769": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotColumnItem.field"
		},
		"1770": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotColumnItem.active"
		},
		"1771": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel"
		},
		"1772": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.rows"
		},
		"1773": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.columns"
		},
		"1774": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.values"
		},
		"1775": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.sorts"
		},
		"1776": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.filters"
		},
		"1777": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.filtersIn"
		},
		"1778": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotModel.T"
		},
		"1779": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotRowItem"
		},
		"1780": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotRowItem.field"
		},
		"1781": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotRowItem.active"
		},
		"1782": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotValueItem"
		},
		"1783": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotValueItem.field"
		},
		"1784": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotValueItem.aggFn"
		},
		"1785": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotValueItem.active"
		},
		"1786": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "ColumnPivotValueItem.T"
		},
		"1787": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrame"
		},
		"1788": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrame.component"
		},
		"1789": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrame.T"
		},
		"1790": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrameRenderer"
		},
		"1791": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1792": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1793": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1794": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1795": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrameRendererParams"
		},
		"1796": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrameRendererParams.grid"
		},
		"1797": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrameRendererParams.context"
		},
		"1798": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrameRendererParams.frame"
		},
		"1799": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DialogFrameRendererParams.T"
		},
		"1800": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrame"
		},
		"1801": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrame.component"
		},
		"1802": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrame.T"
		},
		"1803": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRenderer"
		},
		"1804": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1805": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1806": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1807": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1808": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRendererParams"
		},
		"1809": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRendererParams.grid"
		},
		"1810": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRendererParams.context"
		},
		"1811": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRendererParams.frame"
		},
		"1812": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRendererParams.target"
		},
		"1813": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "PopoverFrameRendererParams.T"
		},
		"1814": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "CellSelectionMode"
		},
		"1815": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataColumnPivotFetcherFn"
		},
		"1816": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1817": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1818": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1819": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1820": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataColumnPivotFetcherParams"
		},
		"1821": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataColumnPivotFetcherParams.grid"
		},
		"1822": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataColumnPivotFetcherParams.reqTime"
		},
		"1823": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataColumnPivotFetcherParams.model"
		},
		"1824": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataColumnPivotFetcherParams.T"
		},
		"1825": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherFn"
		},
		"1826": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1827": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1828": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1829": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1830": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherParams"
		},
		"1831": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherParams.grid"
		},
		"1832": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherParams.requests"
		},
		"1833": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherParams.reqTime"
		},
		"1834": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherParams.model"
		},
		"1835": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataFetcherParams.T"
		},
		"1836": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataInFilterItemFetcherFn"
		},
		"1837": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1838": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1839": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "params"
		},
		"1840": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "T"
		},
		"1841": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataInFilterItemFetcherParams"
		},
		"1842": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataInFilterItemFetcherParams.grid"
		},
		"1843": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataInFilterItemFetcherParams.column"
		},
		"1844": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataInFilterItemFetcherParams.reqTime"
		},
		"1845": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataInFilterItemFetcherParams.T"
		},
		"1846": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest"
		},
		"1847": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest.id"
		},
		"1848": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest.path"
		},
		"1849": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest.start"
		},
		"1850": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest.end"
		},
		"1851": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest.rowStartIndex"
		},
		"1852": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequest.rowEndIndex"
		},
		"1853": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel"
		},
		"1854": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.sorts"
		},
		"1855": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.filters"
		},
		"1856": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.filtersIn"
		},
		"1857": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.quickSearch"
		},
		"1858": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.groups"
		},
		"1859": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.groupExpansions"
		},
		"1860": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.aggregations"
		},
		"1861": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1862": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type.fn"
		},
		"1863": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.pivotGroupExpansions"
		},
		"1864": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.pivotMode"
		},
		"1865": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.pivotModel"
		},
		"1866": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataRequestModel.T"
		},
		"1867": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse"
		},
		"1868": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.kind"
		},
		"1869": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.data"
		},
		"1870": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.size"
		},
		"1871": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.asOfTime"
		},
		"1872": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.path"
		},
		"1873": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.start"
		},
		"1874": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponse.end"
		},
		"1875": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseBranchItem"
		},
		"1876": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseBranchItem.kind"
		},
		"1877": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseBranchItem.id"
		},
		"1878": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseBranchItem.data"
		},
		"1879": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseBranchItem.key"
		},
		"1880": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseBranchItem.childCount"
		},
		"1881": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseLeafItem"
		},
		"1882": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseLeafItem.kind"
		},
		"1883": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseLeafItem.id"
		},
		"1884": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponseLeafItem.data"
		},
		"1885": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponsePinned"
		},
		"1886": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponsePinned.kind"
		},
		"1887": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponsePinned.data"
		},
		"1888": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "DataResponsePinned.asOfTime"
		},
		"1889": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams"
		},
		"1890": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.dataFetcher"
		},
		"1891": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.dataColumnPivotFetcher"
		},
		"1892": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.dataInFilterItemFetcher"
		},
		"1893": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.cellUpdateHandler"
		},
		"1894": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1895": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "__type"
		},
		"1896": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "updates"
		},
		"1897": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.cellUpdateOptimistically"
		},
		"1898": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.blockSize"
		},
		"1899": {
			"packageName": "@1771technologies/lytenyte-pro",
			"packagePath": "src/+types.ts",
			"qualifiedName": "RowDataSourceServerParams.T"
		}
	},
	"files": {
		"entries": {
			"1": "src/+types.ts",
			"2": "README.md",
			"3": ""
		},
		"reflections": {
			"1": 0,
			"2": 0,
			"3": 0
		}
	}
}
